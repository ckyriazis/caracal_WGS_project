starting inference for MN for model 1D.1Bottleneck.TB1gen.TRec2850gen
carrying out inference 1 for model 1D.1Bottleneck.TB1gen.TRec2850gen for pop MN
Beginning optimization ************************************************
2       , -26912.9    , array([ 0.00824866 ,  0.0650752  ])
4       , -26912.8    , array([ 0.00824041 ,  0.0650752  ])
6       , -4142.49    , array([ 0.00814603 ,  0.0237032  ])
8       , -4164.43    , array([ 0.00814603 ,  0.0237269  ])
10      , -1132.63    , array([ 0.00777919 ,  0.000417226])
12      , -1132.63    , array([ 0.00777919 ,  0.000417643])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 2 for model 1D.1Bottleneck.TB1gen.TRec2850gen for pop MN
Beginning optimization ************************************************
2       , -26661.9    , array([ 0.00572746 ,  0.118402   ])
4       , -26661.8    , array([ 0.00572173 ,  0.118402   ])
6       , -8765.7     , array([ 0.00565081 ,  0.325058   ])
8       , -8747.04    , array([ 0.00565081 ,  0.325384   ])
14      , -8756.24    , array([ 0.00565077 ,  0.325223   ])
16      , -8737.58    , array([ 0.00565077 ,  0.325549   ])
18      , -8746.78    , array([ 0.00565074 ,  0.325388   ])
20      , -8728.13    , array([ 0.00565074 ,  0.325714   ])
26      , -8744.42    , array([ 0.00565073 ,  0.325429   ])
28      , -8725.76    , array([ 0.00565073 ,  0.325755   ])
30      , -8742.05    , array([ 0.00565072 ,  0.325471   ])
32      , -8723.4     , array([ 0.00565072 ,  0.325796   ])
34      , -607.807    , array([ 0.0055807  ,  0.893204   ])
36      , -610.135    , array([ 0.0055807  ,  0.894098   ])
42      , -607.698    , array([ 0.00557439 ,  0.893196   ])
44      , -610.026    , array([ 0.00557439 ,  0.89409    ])
46      , -607.59     , array([ 0.00556809 ,  0.893188   ])
48      , -609.917    , array([ 0.00556809 ,  0.894082   ])
54      , -607.563    , array([ 0.00556651 ,  0.893186   ])
56      , -609.889    , array([ 0.00556651 ,  0.89408    ])
58      , -607.535    , array([ 0.00556494 ,  0.893184   ])
60      , -609.862    , array([ 0.00556494 ,  0.894078   ])
66      , -607.529    , array([ 0.00556454 ,  0.893184   ])
68      , -609.855    , array([ 0.00556454 ,  0.894078   ])
70      , -607.522    , array([ 0.00556415 ,  0.893183   ])
72      , -609.848    , array([ 0.00556415 ,  0.894077   ])
78      , -607.52     , array([ 0.00556405 ,  0.893183   ])
80      , -609.846    , array([ 0.00556405 ,  0.894077   ])
82      , -607.519    , array([ 0.00556395 ,  0.893183   ])
84      , -609.845    , array([ 0.00556395 ,  0.894077   ])
90      , -607.518    , array([ 0.00556393 ,  0.893183   ])
92      , -609.844    , array([ 0.00556393 ,  0.894077   ])
94      , -607.518    , array([ 0.0055639  ,  0.893183   ])
96      , -609.844    , array([ 0.0055639  ,  0.894077   ])
98      , -946.173    , array([ 0.000401302,  0.875059   ])
100     , -943.969    , array([ 0.000401302,  0.875934   ])
102     , -498.333    , array([ 0.00205421 ,  0.886271   ])
104     , -499.575    , array([ 0.00205421 ,  0.887158   ])
106     , -465.892    , array([ 0.00119045 ,  0.882509   ])
108     , -466.158    , array([ 0.00119045 ,  0.883392   ])
110     , -470.75     , array([ 0.00981951 ,  0.810768   ])
112     , -471.717    , array([ 0.00981951 ,  0.811579   ])
114     , -468.095    , array([ 0.00180425 ,  0.867886   ])
116     , -468.834    , array([ 0.00180425 ,  0.868755   ])
118     , -464.343    , array([ 0.00136852 ,  0.87758    ])
120     , -464.791    , array([ 0.00136852 ,  0.878458   ])
122     , -461.391    , array([ 0.00143669 ,  0.869679   ])
124     , -461.794    , array([ 0.00143669 ,  0.870549   ])
126     , -452.203    , array([ 0.0017451  ,  0.838778   ])
128     , -452.363    , array([ 0.0017451  ,  0.839618   ])
130     , -451.772    , array([ 0.00283911 ,  0.782227   ])
132     , -451.348    , array([ 0.00283911 ,  0.78301    ])
134     , -448.454    , array([ 0.00218791 ,  0.812011   ])
136     , -448.392    , array([ 0.00218791 ,  0.812824   ])
138     , -447.645    , array([ 0.00251825 ,  0.801477   ])
140     , -447.524    , array([ 0.00251825 ,  0.802279   ])
142     , -446.65     , array([ 0.00299352 ,  0.793821   ])
144     , -446.535    , array([ 0.00299352 ,  0.794615   ])
146     , -445.816    , array([ 0.0034804  ,  0.79148    ])
148     , -445.783    , array([ 0.0034804  ,  0.792271   ])
150     , -445.453    , array([ 0.00430212 ,  0.784929   ])
152     , -445.43     , array([ 0.00430212 ,  0.785715   ])
154     , -445.385    , array([ 0.00476655 ,  0.782595   ])
156     , -445.375    , array([ 0.00476655 ,  0.783378   ])
158     , -445.361    , array([ 0.00515342 ,  0.780813   ])
160     , -445.357    , array([ 0.00515342 ,  0.781594   ])
162     , -445.395    , array([ 0.00704146 ,  0.773725   ])
164     , -445.378    , array([ 0.00704146 ,  0.774499   ])
166     , -445.337    , array([ 0.00567323 ,  0.778624   ])
168     , -445.334    , array([ 0.00567323 ,  0.779403   ])
170     , -445.438    , array([ 0.00731407 ,  0.772479   ])
172     , -445.406    , array([ 0.00731407 ,  0.773252   ])
174     , -445.337    , array([ 0.00587557 ,  0.777774   ])
176     , -445.332    , array([ 0.00587557 ,  0.778552   ])
178     , -445.336    , array([ 0.0057181  ,  0.778433   ])
180     , -445.333    , array([ 0.0057181  ,  0.779212   ])
182     , -445.337    , array([ 0.00582155 ,  0.777998   ])
184     , -445.332    , array([ 0.00582155 ,  0.778776   ])
186     , -445.336    , array([ 0.00573974 ,  0.778341   ])
188     , -445.333    , array([ 0.00573974 ,  0.77912    ])
190     , -445.336    , array([ 0.00574901 ,  0.77831    ])
192     , -445.333    , array([ 0.00574901 ,  0.779088   ])
194     , -445.336    , array([ 0.00578624 ,  0.778183   ])
196     , -445.333    , array([ 0.00578624 ,  0.778961   ])
198     , -445.336    , array([ 0.00593757 ,  0.777677   ])
200     , -445.334    , array([ 0.00593757 ,  0.778455   ])
202     , -445.336    , array([ 0.00597697 ,  0.777544   ])
204     , -445.334    , array([ 0.00597697 ,  0.778322   ])
206     , -445.336    , array([ 0.00594378 ,  0.777656   ])
208     , -445.334    , array([ 0.00594378 ,  0.778434   ])
210     , -445.336    , array([ 0.00593857 ,  0.777673   ])
212     , -445.334    , array([ 0.00593857 ,  0.778451   ])
214     , -445.336    , array([ 0.00593773 ,  0.777676   ])
216     , -445.334    , array([ 0.00593773 ,  0.778454   ])
218     , -445.336    , array([ 0.0059376  ,  0.777677   ])
220     , -445.334    , array([ 0.0059376  ,  0.778455   ])
222     , -445.336    , array([ 0.00593758 ,  0.777677   ])
224     , -445.334    , array([ 0.00593758 ,  0.778455   ])
226     , -445.336    , array([ 0.00593757 ,  0.777677   ])
228     , -445.334    , array([ 0.00593757 ,  0.778455   ])
230     , -445.336    , array([ 0.00593757 ,  0.777677   ])
232     , -445.334    , array([ 0.00593757 ,  0.778455   ])
234     , -445.336    , array([ 0.00593757 ,  0.777677   ])
236     , -445.334    , array([ 0.00593757 ,  0.778455   ])
238     , -445.336    , array([ 0.00593757 ,  0.777677   ])
240     , -445.334    , array([ 0.00593757 ,  0.778455   ])
242     , -445.336    , array([ 0.00593757 ,  0.777677   ])
244     , -445.334    , array([ 0.00593757 ,  0.778455   ])
246     , -445.336    , array([ 0.00593757 ,  0.777677   ])
248     , -445.334    , array([ 0.00593757 ,  0.778455   ])
250     , -445.336    , array([ 0.00593757 ,  0.777677   ])
252     , -445.334    , array([ 0.00593757 ,  0.778455   ])
254     , -445.336    , array([ 0.00593757 ,  0.777677   ])
256     , -445.334    , array([ 0.00593757 ,  0.778455   ])
258     , -445.336    , array([ 0.00593757 ,  0.777677   ])
260     , -445.334    , array([ 0.00593757 ,  0.778455   ])
262     , -445.336    , array([ 0.00593757 ,  0.777677   ])
264     , -445.334    , array([ 0.00593757 ,  0.778455   ])
266     , -445.336    , array([ 0.00593757 ,  0.777677   ])
268     , -445.334    , array([ 0.00593757 ,  0.778455   ])
270     , -445.336    , array([ 0.00593757 ,  0.777677   ])
272     , -445.334    , array([ 0.00593757 ,  0.778455   ])
274     , -445.336    , array([ 0.00593757 ,  0.777677   ])
276     , -445.334    , array([ 0.00593757 ,  0.778455   ])
278     , -445.336    , array([ 0.00593757 ,  0.777677   ])
280     , -445.334    , array([ 0.00593757 ,  0.778455   ])
282     , -445.336    , array([ 0.00593757 ,  0.777677   ])
284     , -445.334    , array([ 0.00593757 ,  0.778455   ])
286     , -445.336    , array([ 0.00593757 ,  0.777677   ])
288     , -445.334    , array([ 0.00593757 ,  0.778455   ])
290     , -445.336    , array([ 0.00593757 ,  0.777677   ])
292     , -445.334    , array([ 0.00593757 ,  0.778455   ])
294     , -445.336    , array([ 0.00593757 ,  0.777677   ])
296     , -445.334    , array([ 0.00593757 ,  0.778455   ])
298     , -445.336    , array([ 0.00593757 ,  0.777677   ])
300     , -445.334    , array([ 0.00593757 ,  0.778455   ])
302     , -445.336    , array([ 0.00593757 ,  0.777677   ])
304     , -445.334    , array([ 0.00593757 ,  0.778455   ])
306     , -445.336    , array([ 0.00593757 ,  0.777677   ])
308     , -445.334    , array([ 0.00593757 ,  0.778455   ])
310     , -445.336    , array([ 0.00593757 ,  0.777677   ])
312     , -445.334    , array([ 0.00593757 ,  0.778455   ])
314     , -445.336    , array([ 0.00593757 ,  0.777677   ])
316     , -445.334    , array([ 0.00593757 ,  0.778455   ])
318     , -445.336    , array([ 0.00593757 ,  0.777677   ])
320     , -445.334    , array([ 0.00593757 ,  0.778455   ])
322     , -445.336    , array([ 0.00593757 ,  0.777677   ])
324     , -445.334    , array([ 0.00593757 ,  0.778455   ])
326     , -445.336    , array([ 0.00593757 ,  0.777677   ])
328     , -445.334    , array([ 0.00593757 ,  0.778455   ])
330     , -445.336    , array([ 0.00593757 ,  0.777677   ])
332     , -445.334    , array([ 0.00593757 ,  0.778455   ])
334     , -445.336    , array([ 0.00593757 ,  0.777677   ])
336     , -445.334    , array([ 0.00593757 ,  0.778455   ])
338     , -445.336    , array([ 0.00593757 ,  0.777677   ])
340     , -445.334    , array([ 0.00593757 ,  0.778455   ])
342     , -445.336    , array([ 0.00593757 ,  0.777677   ])
344     , -445.334    , array([ 0.00593757 ,  0.778455   ])
346     , -445.336    , array([ 0.00593757 ,  0.777677   ])
348     , -445.334    , array([ 0.00593757 ,  0.778455   ])
350     , -445.336    , array([ 0.00593757 ,  0.777677   ])
352     , -445.334    , array([ 0.00593757 ,  0.778455   ])
354     , -445.336    , array([ 0.00593757 ,  0.777677   ])
356     , -445.334    , array([ 0.00593757 ,  0.778455   ])
358     , -445.336    , array([ 0.00593757 ,  0.777677   ])
360     , -445.334    , array([ 0.00593757 ,  0.778455   ])
362     , -445.336    , array([ 0.00593757 ,  0.777677   ])
364     , -445.334    , array([ 0.00593757 ,  0.778455   ])
366     , -445.336    , array([ 0.00593757 ,  0.777677   ])
368     , -445.334    , array([ 0.00593757 ,  0.778455   ])
370     , -445.336    , array([ 0.00593757 ,  0.777677   ])
372     , -445.334    , array([ 0.00593757 ,  0.778455   ])
374     , -445.336    , array([ 0.00593757 ,  0.777677   ])
376     , -445.334    , array([ 0.00593757 ,  0.778455   ])
378     , -445.336    , array([ 0.00593757 ,  0.777677   ])
380     , -445.334    , array([ 0.00593757 ,  0.778455   ])
382     , -445.336    , array([ 0.00593757 ,  0.777677   ])
384     , -445.334    , array([ 0.00593757 ,  0.778455   ])
386     , -445.336    , array([ 0.00593757 ,  0.777677   ])
388     , -445.334    , array([ 0.00593757 ,  0.778455   ])
390     , -445.336    , array([ 0.00593757 ,  0.777677   ])
392     , -445.334    , array([ 0.00593757 ,  0.778455   ])
394     , -445.336    , array([ 0.00593757 ,  0.777677   ])
396     , -445.334    , array([ 0.00593757 ,  0.778455   ])
398     , -445.336    , array([ 0.00593757 ,  0.777677   ])
400     , -445.334    , array([ 0.00593757 ,  0.778455   ])
402     , -445.336    , array([ 0.00593757 ,  0.777677   ])
404     , -445.334    , array([ 0.00593757 ,  0.778455   ])
406     , -445.336    , array([ 0.00593757 ,  0.777677   ])
408     , -445.334    , array([ 0.00593757 ,  0.778455   ])
410     , -445.336    , array([ 0.00593757 ,  0.777677   ])
412     , -445.334    , array([ 0.00593757 ,  0.778455   ])
414     , -445.336    , array([ 0.00593757 ,  0.777677   ])
416     , -445.334    , array([ 0.00593757 ,  0.778455   ])
418     , -445.336    , array([ 0.00593757 ,  0.777677   ])
420     , -445.334    , array([ 0.00593757 ,  0.778455   ])
422     , -445.336    , array([ 0.00593757 ,  0.777677   ])
424     , -445.334    , array([ 0.00593757 ,  0.778455   ])
426     , -445.336    , array([ 0.00593757 ,  0.777677   ])
428     , -445.334    , array([ 0.00593757 ,  0.778455   ])
430     , -445.336    , array([ 0.00593757 ,  0.777677   ])
432     , -445.334    , array([ 0.00593757 ,  0.778455   ])
434     , -445.336    , array([ 0.00593757 ,  0.777677   ])
436     , -445.334    , array([ 0.00593757 ,  0.778455   ])
438     , -445.336    , array([ 0.00593757 ,  0.777677   ])
440     , -445.334    , array([ 0.00593757 ,  0.778455   ])
442     , -445.336    , array([ 0.00595287 ,  0.777625   ])
444     , -445.336    , array([ 0.00593936 ,  0.777671   ])
446     , -445.336    , array([ 0.00593779 ,  0.777676   ])
448     , -445.336    , array([ 0.0059376  ,  0.777677   ])
450     , -445.336    , array([ 0.00593757 ,  0.777677   ])
452     , -445.336    , array([ 0.00593757 ,  0.777677   ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 3 for model 1D.1Bottleneck.TB1gen.TRec2850gen for pop MN
Beginning optimization ************************************************
2       , -25716.3    , array([ 0.00561822 ,  0.0581032  ])
4       , -25716.1    , array([ 0.00561261 ,  0.0581032  ])
6       , -2082.01    , array([ 0.00554743 ,  0.0211637  ])
8       , -2096.1     , array([ 0.00554743 ,  0.0211849  ])
10      , -1132.63    , array([ 0.00529419 ,  0.000372529])
12      , -1132.63    , array([ 0.00529419 ,  0.000372901])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 4 for model 1D.1Bottleneck.TB1gen.TRec2850gen for pop MN
Beginning optimization ************************************************
2       , -26851.8    , array([ 0.00707053 ,  0.116069   ])
4       , -26851.7    , array([ 0.00706347 ,  0.116069   ])
6       , -9110.99    , array([ 0.00698645 ,  0.31866    ])
8       , -9091.91    , array([ 0.00698645 ,  0.318979   ])
14      , -9101.1     , array([ 0.00698642 ,  0.318826   ])
16      , -9082.01    , array([ 0.00698642 ,  0.319145   ])
18      , -9091.2     , array([ 0.00698638 ,  0.318991   ])
20      , -9072.12    , array([ 0.00698638 ,  0.31931    ])
26      , -9088.73    , array([ 0.00698637 ,  0.319033   ])
28      , -9069.64    , array([ 0.00698637 ,  0.319352   ])
30      , -9086.25    , array([ 0.00698636 ,  0.319074   ])
32      , -9067.17    , array([ 0.00698636 ,  0.319393   ])
34      , -578.044    , array([ 0.00691022 ,  0.875657   ])
36      , -580.177    , array([ 0.00691022 ,  0.876533   ])
42      , -578.002    , array([ 0.00690648 ,  0.875653   ])
44      , -580.135    , array([ 0.00690648 ,  0.876529   ])
46      , -577.96     , array([ 0.00690275 ,  0.875648   ])
48      , -580.092    , array([ 0.00690275 ,  0.876524   ])
54      , -577.949    , array([ 0.00690182 ,  0.875647   ])
56      , -580.081    , array([ 0.00690182 ,  0.876523   ])
58      , -577.939    , array([ 0.00690088 ,  0.875646   ])
60      , -580.071    , array([ 0.00690088 ,  0.876522   ])
66      , -577.936    , array([ 0.00690065 ,  0.875646   ])
68      , -580.068    , array([ 0.00690065 ,  0.876522   ])
70      , -577.933    , array([ 0.00690042 ,  0.875645   ])
72      , -580.065    , array([ 0.00690042 ,  0.876521   ])
78      , -577.933    , array([ 0.00690036 ,  0.875645   ])
80      , -580.065    , array([ 0.00690036 ,  0.876521   ])
82      , -577.932    , array([ 0.0069003  ,  0.875645   ])
84      , -580.064    , array([ 0.0069003  ,  0.876521   ])
86      , -2840.53    , array([ 0.000123187,  0.842819   ])
88      , -2838.75    , array([ 0.000123187,  0.843662   ])
90      , -565.331    , array([ 0.00589607 ,  0.874339   ])
92      , -567.354    , array([ 0.00589607 ,  0.875214   ])
94      , -553.084    , array([ 0.0050929  ,  0.873125   ])
96      , -554.996    , array([ 0.0050929  ,  0.873998   ])
98      , -534.49     , array([ 0.000792073,  0.857838   ])
100     , -533.503    , array([ 0.000792073,  0.858696   ])
102     , -516.969    , array([ 0.00341811 ,  0.869826   ])
104     , -518.509    , array([ 0.00341811 ,  0.870697   ])
106     , -458.737    , array([ 0.00145799 ,  0.86282    ])
108     , -459.048    , array([ 0.00145799 ,  0.863684   ])
110     , -469.135    , array([ 0.00331095 ,  0.837485   ])
112     , -470.03     , array([ 0.00331095 ,  0.838323   ])
114     , -458.568    , array([ 0.00159    ,  0.860107   ])
116     , -458.972    , array([ 0.00159    ,  0.860968   ])
118     , -458.238    , array([ 0.00159939 ,  0.859153   ])
120     , -458.634    , array([ 0.00159939 ,  0.860013   ])
122     , -456.963    , array([ 0.00163749 ,  0.855348   ])
124     , -457.33     , array([ 0.00163749 ,  0.856203   ])
126     , -452.516    , array([ 0.00179921 ,  0.840293   ])
128     , -452.75     , array([ 0.00179921 ,  0.841134   ])
130     , -448.129    , array([ 0.00273832 ,  0.792949   ])
132     , -447.909    , array([ 0.00273832 ,  0.793743   ])
134     , -447.071    , array([ 0.00257789 ,  0.80396    ])
136     , -447.028    , array([ 0.00257789 ,  0.804765   ])
138     , -446.572    , array([ 0.00279035 ,  0.800796   ])
140     , -446.543    , array([ 0.00279035 ,  0.801597   ])
142     , -445.926    , array([ 0.00333179 ,  0.793412   ])
144     , -445.9      , array([ 0.00333179 ,  0.794206   ])
146     , -445.526    , array([ 0.00410352 ,  0.785805   ])
148     , -445.489    , array([ 0.00410352 ,  0.786591   ])
150     , -445.388    , array([ 0.00470901 ,  0.78291    ])
152     , -445.378    , array([ 0.00470901 ,  0.783694   ])
154     , -445.367    , array([ 0.00509581 ,  0.781022   ])
156     , -445.361    , array([ 0.00509581 ,  0.781804   ])
158     , -445.406    , array([ 0.00698792 ,  0.773515   ])
160     , -445.38     , array([ 0.00698792 ,  0.774289   ])
162     , -445.34     , array([ 0.0056243  ,  0.778668   ])
164     , -445.334    , array([ 0.0056243  ,  0.779447   ])
166     , -445.408    , array([ 0.0070362  ,  0.77342    ])
168     , -445.383    , array([ 0.0070362  ,  0.774193   ])
170     , -445.34     , array([ 0.00583203 ,  0.777816   ])
172     , -445.332    , array([ 0.00583203 ,  0.778594   ])
174     , -445.339    , array([ 0.00584907 ,  0.777773   ])
176     , -445.332    , array([ 0.00584907 ,  0.778552   ])
178     , -445.338    , array([ 0.00591773 ,  0.777603   ])
180     , -445.333    , array([ 0.00591773 ,  0.778381   ])
182     , -445.338    , array([ 0.00600528 ,  0.777337   ])
184     , -445.334    , array([ 0.00600528 ,  0.778115   ])
186     , -445.338    , array([ 0.00593583 ,  0.777548   ])
188     , -445.333    , array([ 0.00593583 ,  0.778325   ])
190     , -445.338    , array([ 0.00598158 ,  0.777408   ])
192     , -445.333    , array([ 0.00598158 ,  0.778186   ])
194     , -445.338    , array([ 0.005945   ,  0.77752    ])
196     , -445.333    , array([ 0.005945   ,  0.778297   ])
198     , -445.338    , array([ 0.00593772 ,  0.777542   ])
200     , -445.333    , array([ 0.00593772 ,  0.77832    ])
202     , -445.338    , array([ 0.00593623 ,  0.777546   ])
204     , -445.333    , array([ 0.00593623 ,  0.778324   ])
206     , -445.338    , array([ 0.00593591 ,  0.777547   ])
208     , -445.333    , array([ 0.00593591 ,  0.778325   ])
210     , -445.338    , array([ 0.00593585 ,  0.777547   ])
212     , -445.333    , array([ 0.00593585 ,  0.778325   ])
214     , -445.338    , array([ 0.00593584 ,  0.777547   ])
216     , -445.333    , array([ 0.00593584 ,  0.778325   ])
218     , -445.338    , array([ 0.00593583 ,  0.777547   ])
220     , -445.333    , array([ 0.00593583 ,  0.778325   ])
222     , -445.338    , array([ 0.00593583 ,  0.777548   ])
224     , -445.333    , array([ 0.00593583 ,  0.778325   ])
226     , -445.338    , array([ 0.00593583 ,  0.777548   ])
228     , -445.333    , array([ 0.00593583 ,  0.778325   ])
230     , -445.338    , array([ 0.00593583 ,  0.777548   ])
232     , -445.333    , array([ 0.00593583 ,  0.778325   ])
234     , -445.338    , array([ 0.00593583 ,  0.777548   ])
236     , -445.333    , array([ 0.00593583 ,  0.778325   ])
238     , -445.338    , array([ 0.00593583 ,  0.777548   ])
240     , -445.333    , array([ 0.00593583 ,  0.778325   ])
242     , -445.338    , array([ 0.00593583 ,  0.777548   ])
244     , -445.333    , array([ 0.00593583 ,  0.778325   ])
246     , -445.338    , array([ 0.00593583 ,  0.777548   ])
248     , -445.333    , array([ 0.00593583 ,  0.778325   ])
250     , -445.338    , array([ 0.00595821 ,  0.777479   ])
252     , -445.338    , array([ 0.00593487 ,  0.77755    ])
254     , -445.333    , array([ 0.00593487 ,  0.778328   ])
256     , -445.338    , array([ 0.00594021 ,  0.777534   ])
258     , -445.338    , array([ 0.00593586 ,  0.777547   ])
260     , -445.338    , array([ 0.00593505 ,  0.77755    ])
262     , -445.338    , array([ 0.0059349  ,  0.77755    ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 5 for model 1D.1Bottleneck.TB1gen.TRec2850gen for pop MN
Beginning optimization ************************************************
2       , -24363.8    , array([ 0.00629618 ,  0.0525923  ])
4       , -24363.7    , array([ 0.00628988 ,  0.0525923  ])
6       , -1029.98    , array([ 0.00623949 ,  0.0191557  ])
8       , -1037.27    , array([ 0.00623949 ,  0.0191749  ])
14      , -1029.64    , array([ 0.00625274 ,  0.0191547  ])
16      , -1036.92    , array([ 0.00625274 ,  0.0191739  ])
22      , -1029.59    , array([ 0.00625465 ,  0.0191546  ])
24      , -1036.87    , array([ 0.00625465 ,  0.0191738  ])
30      , -1029.57    , array([ 0.00625549 ,  0.0191545  ])
32      , -1036.85    , array([ 0.00625549 ,  0.0191737  ])
38      , -1029.56    , array([ 0.00625585 ,  0.0191545  ])
40      , -1036.84    , array([ 0.00625585 ,  0.0191737  ])
46      , -1029.55    , array([ 0.00625601 ,  0.0191545  ])
48      , -1036.84    , array([ 0.00625601 ,  0.0191737  ])
50      , -525.028    , array([ 3.67996    ,  0.0164491  ])
52      , -525.341    , array([ 3.67996    ,  0.0164655  ])
54      , -523.558    , array([ 6.30691    ,  0.0163229  ])
56      , -523.657    , array([ 6.30691    ,  0.0163393  ])
58      , -523.42     , array([ 8.10436    ,  0.0162645  ])
60      , -523.425    , array([ 8.10436    ,  0.0162808  ])
62      , -523.422    , array([ 8.20322    ,  0.0162617  ])
64      , -523.422    , array([ 8.20322    ,  0.016278   ])
66      , -523.42     , array([ 8.11014    ,  0.0162644  ])
68      , -523.425    , array([ 8.11014    ,  0.0162806  ])
70      , -523.42     , array([ 8.10473    ,  0.0162645  ])
72      , -523.425    , array([ 8.10473    ,  0.0162808  ])
74      , -523.42     , array([ 8.10439    ,  0.0162645  ])
76      , -523.425    , array([ 8.10439    ,  0.0162808  ])
78      , -523.42     , array([ 8.10437    ,  0.0162645  ])
80      , -523.425    , array([ 8.10437    ,  0.0162808  ])
82      , -523.42     , array([ 8.10437    ,  0.0162645  ])
84      , -523.425    , array([ 8.10437    ,  0.0162808  ])
86      , -523.42     , array([ 8.10436    ,  0.0162645  ])
88      , -523.425    , array([ 8.10436    ,  0.0162808  ])
90      , -523.42     , array([ 8.10436    ,  0.0162645  ])
92      , -523.425    , array([ 8.10436    ,  0.0162808  ])
94      , -523.42     , array([ 8.10436    ,  0.0162645  ])
96      , -523.425    , array([ 8.10436    ,  0.0162808  ])
98      , -523.42     , array([ 8.10436    ,  0.0162645  ])
100     , -523.425    , array([ 8.10436    ,  0.0162808  ])
102     , -523.42     , array([ 8.10436    ,  0.0162645  ])
104     , -523.425    , array([ 8.10436    ,  0.0162808  ])
106     , -523.42     , array([ 8.10436    ,  0.0162645  ])
108     , -523.425    , array([ 8.10436    ,  0.0162808  ])
110     , -523.42     , array([ 8.10436    ,  0.0162645  ])
112     , -523.425    , array([ 8.10436    ,  0.0162808  ])
114     , -523.42     , array([ 8.10436    ,  0.0162645  ])
116     , -523.425    , array([ 8.10436    ,  0.0162808  ])
118     , -523.42     , array([ 8.10436    ,  0.0162645  ])
120     , -523.425    , array([ 8.10436    ,  0.0162808  ])
122     , -523.42     , array([ 8.10436    ,  0.0162645  ])
124     , -523.425    , array([ 8.10436    ,  0.0162808  ])
126     , -523.42     , array([ 8.10436    ,  0.0162645  ])
128     , -523.425    , array([ 8.10436    ,  0.0162808  ])
130     , -523.42     , array([ 8.10436    ,  0.0162645  ])
132     , -523.425    , array([ 8.10436    ,  0.0162808  ])
134     , -523.42     , array([ 8.10436    ,  0.0162645  ])
136     , -523.425    , array([ 8.10436    ,  0.0162808  ])
138     , -523.42     , array([ 8.10436    ,  0.0162645  ])
140     , -523.425    , array([ 8.10436    ,  0.0162808  ])
142     , -523.42     , array([ 8.10436    ,  0.0162645  ])
144     , -523.425    , array([ 8.10436    ,  0.0162808  ])
146     , -523.42     , array([ 8.10436    ,  0.0162645  ])
148     , -523.425    , array([ 8.10436    ,  0.0162808  ])
150     , -523.42     , array([ 8.10436    ,  0.0162645  ])
152     , -523.425    , array([ 8.10436    ,  0.0162808  ])
154     , -523.42     , array([ 8.10436    ,  0.0162645  ])
156     , -523.425    , array([ 8.10436    ,  0.0162808  ])
158     , -523.42     , array([ 8.10436    ,  0.0162645  ])
160     , -523.425    , array([ 8.10436    ,  0.0162808  ])
162     , -523.42     , array([ 8.10436    ,  0.0162645  ])
164     , -523.425    , array([ 8.10436    ,  0.0162808  ])
166     , -523.42     , array([ 8.10436    ,  0.0162645  ])
168     , -523.425    , array([ 8.10436    ,  0.0162808  ])
170     , -523.42     , array([ 8.10436    ,  0.0162645  ])
172     , -523.425    , array([ 8.10436    ,  0.0162808  ])
174     , -523.42     , array([ 8.10436    ,  0.0162645  ])
176     , -523.425    , array([ 8.10436    ,  0.0162808  ])
178     , -523.42     , array([ 8.10436    ,  0.0162645  ])
180     , -523.425    , array([ 8.10436    ,  0.0162808  ])
182     , -523.42     , array([ 8.10436    ,  0.0162645  ])
184     , -523.425    , array([ 8.10436    ,  0.0162808  ])
186     , -523.42     , array([ 8.10436    ,  0.0162645  ])
188     , -523.425    , array([ 8.10436    ,  0.0162808  ])
190     , -523.42     , array([ 8.10436    ,  0.0162645  ])
192     , -523.425    , array([ 8.10436    ,  0.0162808  ])
194     , -523.42     , array([ 8.10436    ,  0.0162645  ])
196     , -523.425    , array([ 8.10436    ,  0.0162808  ])
198     , -523.42     , array([ 8.10436    ,  0.0162645  ])
200     , -523.425    , array([ 8.10436    ,  0.0162808  ])
202     , -523.42     , array([ 8.10436    ,  0.0162645  ])
204     , -523.425    , array([ 8.10436    ,  0.0162808  ])
206     , -523.42     , array([ 8.10436    ,  0.0162645  ])
208     , -523.425    , array([ 8.10436    ,  0.0162808  ])
210     , -523.42     , array([ 8.10436    ,  0.0162645  ])
212     , -523.425    , array([ 8.10436    ,  0.0162808  ])
214     , -523.42     , array([ 8.10436    ,  0.0162645  ])
216     , -523.425    , array([ 8.10436    ,  0.0162808  ])
218     , -523.42     , array([ 8.10436    ,  0.0162645  ])
220     , -523.425    , array([ 8.10436    ,  0.0162808  ])
222     , -523.42     , array([ 8.10436    ,  0.0162645  ])
224     , -523.425    , array([ 8.10436    ,  0.0162808  ])
226     , -523.42     , array([ 8.10436    ,  0.0162645  ])
228     , -523.425    , array([ 8.10436    ,  0.0162808  ])
230     , -523.42     , array([ 8.10436    ,  0.0162645  ])
232     , -523.425    , array([ 8.10436    ,  0.0162808  ])
234     , -523.42     , array([ 8.10436    ,  0.0162645  ])
236     , -523.425    , array([ 8.10436    ,  0.0162808  ])
238     , -523.42     , array([ 8.10436    ,  0.0162645  ])
240     , -523.425    , array([ 8.10436    ,  0.0162808  ])
242     , -523.42     , array([ 8.10436    ,  0.0162645  ])
244     , -523.425    , array([ 8.10436    ,  0.0162808  ])
246     , -523.42     , array([ 8.10436    ,  0.0162645  ])
248     , -523.425    , array([ 8.10436    ,  0.0162808  ])
250     , -523.42     , array([ 8.10436    ,  0.0162645  ])
252     , -523.425    , array([ 8.10436    ,  0.0162808  ])
254     , -523.42     , array([ 8.10436    ,  0.0162645  ])
256     , -523.425    , array([ 8.10436    ,  0.0162808  ])
258     , -523.42     , array([ 8.10436    ,  0.0162645  ])
260     , -523.425    , array([ 8.10436    ,  0.0162808  ])
262     , -523.42     , array([ 8.10436    ,  0.0162645  ])
264     , -523.425    , array([ 8.10436    ,  0.0162808  ])
266     , -523.42     , array([ 8.10436    ,  0.0162645  ])
268     , -523.425    , array([ 8.10436    ,  0.0162808  ])
270     , -523.42     , array([ 8.10436    ,  0.0162645  ])
272     , -523.425    , array([ 8.10436    ,  0.0162808  ])
274     , -523.42     , array([ 8.10436    ,  0.0162645  ])
276     , -523.425    , array([ 8.10436    ,  0.0162808  ])
278     , -523.42     , array([ 8.10436    ,  0.0162645  ])
280     , -523.425    , array([ 8.10436    ,  0.0162808  ])
282     , -523.42     , array([ 8.10436    ,  0.0162645  ])
284     , -523.425    , array([ 8.10436    ,  0.0162808  ])
286     , -523.42     , array([ 8.10436    ,  0.0162645  ])
288     , -523.425    , array([ 8.10436    ,  0.0162808  ])
290     , -523.42     , array([ 8.10436    ,  0.0162645  ])
292     , -523.425    , array([ 8.10436    ,  0.0162808  ])
294     , -523.42     , array([ 8.10436    ,  0.0162645  ])
296     , -523.425    , array([ 8.10436    ,  0.0162808  ])
298     , -523.42     , array([ 8.10436    ,  0.0162645  ])
300     , -523.425    , array([ 8.10436    ,  0.0162808  ])
302     , -523.42     , array([ 8.10436    ,  0.0162645  ])
304     , -523.425    , array([ 8.10436    ,  0.0162808  ])
306     , -523.42     , array([ 8.10436    ,  0.0162645  ])
308     , -523.425    , array([ 8.10436    ,  0.0162808  ])
310     , -523.42     , array([ 8.10436    ,  0.0162645  ])
312     , -523.425    , array([ 8.10436    ,  0.0162808  ])
314     , -523.42     , array([ 8.10436    ,  0.0162645  ])
316     , -523.425    , array([ 8.10436    ,  0.0162808  ])
318     , -523.42     , array([ 8.10436    ,  0.0162645  ])
320     , -523.425    , array([ 8.10436    ,  0.0162808  ])
322     , -523.421    , array([ 8.11913    ,  0.0162641  ])
324     , -523.42     , array([ 8.10481    ,  0.0162645  ])
326     , -523.42     , array([ 8.10438    ,  0.0162645  ])
328     , -523.42     , array([ 8.10437    ,  0.0162645  ])
330     , -523.42     , array([ 8.10436    ,  0.0162645  ])
332     , -523.42     , array([ 8.10436    ,  0.0162645  ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 6 for model 1D.1Bottleneck.TB1gen.TRec2850gen for pop MN
Beginning optimization ************************************************
2       , -27046.5    , array([ 0.00554212 ,  0.112854   ])
4       , -27046.4    , array([ 0.00553658 ,  0.112854   ])
6       , -9688.42    , array([ 0.00544847 ,  0.309813   ])
8       , -9669.04    , array([ 0.00544847 ,  0.310123   ])
14      , -9678.21    , array([ 0.00544843 ,  0.309976   ])
16      , -9658.84    , array([ 0.00544843 ,  0.310286   ])
18      , -9668.01    , array([ 0.00544838 ,  0.31014    ])
20      , -9648.63    , array([ 0.00544838 ,  0.31045    ])
26      , -9665.46    , array([ 0.00544837 ,  0.31018    ])
28      , -9646.08    , array([ 0.00544837 ,  0.310491   ])
30      , -9662.91    , array([ 0.00544836 ,  0.310221   ])
32      , -9643.53    , array([ 0.00544836 ,  0.310532   ])
34      , -512.658    , array([ 0.00536169 ,  0.851299   ])
36      , -514.19     , array([ 0.00536169 ,  0.852151   ])
42      , -512.627    , array([ 0.00535932 ,  0.851294   ])
44      , -514.159    , array([ 0.00535932 ,  0.852146   ])
46      , -512.596    , array([ 0.00535694 ,  0.851289   ])
48      , -514.128    , array([ 0.00535694 ,  0.852141   ])
54      , -512.588    , array([ 0.00535635 ,  0.851288   ])
56      , -514.12     , array([ 0.00535635 ,  0.85214    ])
58      , -512.581    , array([ 0.00535576 ,  0.851287   ])
60      , -514.112    , array([ 0.00535576 ,  0.852138   ])
66      , -512.579    , array([ 0.00535561 ,  0.851286   ])
68      , -514.11     , array([ 0.00535561 ,  0.852138   ])
70      , -512.577    , array([ 0.00535546 ,  0.851286   ])
72      , -514.108    , array([ 0.00535546 ,  0.852138   ])
78      , -512.576    , array([ 0.00535542 ,  0.851286   ])
80      , -514.107    , array([ 0.00535542 ,  0.852138   ])
82      , -512.576    , array([ 0.00535539 ,  0.851286   ])
84      , -514.107    , array([ 0.00535539 ,  0.852137   ])
86      , -2954.9     , array([ 0.000114241,  0.809092   ])
88      , -2953.05    , array([ 0.000114241,  0.809901   ])
90      , -506.946    , array([ 0.00494414 ,  0.850388   ])
92      , -508.41     , array([ 0.00494414 ,  0.851238   ])
94      , -501.209    , array([ 0.00456852 ,  0.8495     ])
96      , -502.6      , array([ 0.00456852 ,  0.85035    ])
98      , -614.927    , array([ 0.000722436,  0.82905    ])
100     , -613.262    , array([ 0.000722436,  0.829879   ])
102     , -456.762    , array([ 0.00221562 ,  0.841417   ])
104     , -457.299    , array([ 0.00221562 ,  0.842258   ])
110     , -456.762    , array([ 0.00221562 ,  0.841417   ])
112     , -457.299    , array([ 0.00221562 ,  0.842258   ])
114     , -456.762    , array([ 0.0022156  ,  0.841417   ])
116     , -457.299    , array([ 0.0022156  ,  0.842259   ])
118     , -2216.04    , array([ 0.000183135,  0.871147   ])
120     , -2213.42    , array([ 0.000183135,  0.872019   ])
122     , -455.663    , array([ 0.00210159 ,  0.842036   ])
124     , -456.144    , array([ 0.00210159 ,  0.842879   ])
126     , -453.774    , array([ 0.00197558 ,  0.840906   ])
128     , -454.152    , array([ 0.00197558 ,  0.841747   ])
130     , -451.563    , array([ 0.00180958 ,  0.836096   ])
132     , -451.725    , array([ 0.00180958 ,  0.836933   ])
134     , -449.268    , array([ 0.0020406  ,  0.823447   ])
136     , -449.35     , array([ 0.0020406  ,  0.824271   ])
138     , -446.819    , array([ 0.00276954 ,  0.79861    ])
140     , -446.734    , array([ 0.00276954 ,  0.799409   ])
142     , -446.268    , array([ 0.00313989 ,  0.79344    ])
144     , -446.19     , array([ 0.00313989 ,  0.794234   ])
146     , -445.646    , array([ 0.00368936 ,  0.790304   ])
148     , -445.633    , array([ 0.00368936 ,  0.791095   ])
150     , -445.43     , array([ 0.00466697 ,  0.78217    ])
152     , -445.396    , array([ 0.00466697 ,  0.782953   ])
154     , -445.376    , array([ 0.00494938 ,  0.781778   ])
156     , -445.37     , array([ 0.00494938 ,  0.782561   ])
158     , -445.352    , array([ 0.00524699 ,  0.780466   ])
160     , -445.351    , array([ 0.00524699 ,  0.781247   ])
162     , -445.362    , array([ 0.00662748 ,  0.775239   ])
164     , -445.354    , array([ 0.00662748 ,  0.776014   ])
166     , -445.337    , array([ 0.00615117 ,  0.777233   ])
168     , -445.342    , array([ 0.00615117 ,  0.77801    ])
170     , -445.345    , array([ 0.00635779 ,  0.776375   ])
172     , -445.345    , array([ 0.00635779 ,  0.777151   ])
174     , -445.337    , array([ 0.00616467 ,  0.777176   ])
176     , -445.342    , array([ 0.00616467 ,  0.777953   ])
178     , -445.337    , array([ 0.00615213 ,  0.777229   ])
180     , -445.342    , array([ 0.00615213 ,  0.778006   ])
182     , -445.337    , array([ 0.00615124 ,  0.777232   ])
184     , -445.342    , array([ 0.00615124 ,  0.77801    ])
186     , -445.337    , array([ 0.00615117 ,  0.777233   ])
188     , -445.342    , array([ 0.00615117 ,  0.77801    ])
190     , -445.337    , array([ 0.00615117 ,  0.777233   ])
192     , -445.342    , array([ 0.00615117 ,  0.77801    ])
194     , -445.337    , array([ 0.00615117 ,  0.777233   ])
196     , -445.342    , array([ 0.00615117 ,  0.77801    ])
198     , -445.337    , array([ 0.00615117 ,  0.777233   ])
200     , -445.342    , array([ 0.00615117 ,  0.77801    ])
202     , -445.337    , array([ 0.00615117 ,  0.777233   ])
204     , -445.342    , array([ 0.00615117 ,  0.77801    ])
206     , -445.337    , array([ 0.00615117 ,  0.777233   ])
208     , -445.342    , array([ 0.00615117 ,  0.77801    ])
210     , -445.337    , array([ 0.00615117 ,  0.777233   ])
212     , -445.342    , array([ 0.00615117 ,  0.77801    ])
214     , -445.337    , array([ 0.00615117 ,  0.777233   ])
216     , -445.342    , array([ 0.00615117 ,  0.77801    ])
218     , -445.337    , array([ 0.00615117 ,  0.777233   ])
220     , -445.342    , array([ 0.00615117 ,  0.77801    ])
222     , -445.337    , array([ 0.00615117 ,  0.777233   ])
224     , -445.342    , array([ 0.00615117 ,  0.77801    ])
226     , -445.337    , array([ 0.00615117 ,  0.777233   ])
228     , -445.342    , array([ 0.00615117 ,  0.77801    ])
230     , -445.337    , array([ 0.00615117 ,  0.777233   ])
232     , -445.342    , array([ 0.00615117 ,  0.77801    ])
234     , -445.337    , array([ 0.00615117 ,  0.777233   ])
236     , -445.342    , array([ 0.00615117 ,  0.77801    ])
238     , -445.337    , array([ 0.00615117 ,  0.777233   ])
240     , -445.342    , array([ 0.00615117 ,  0.77801    ])
242     , -445.337    , array([ 0.00615117 ,  0.777233   ])
244     , -445.342    , array([ 0.00615117 ,  0.77801    ])
246     , -445.337    , array([ 0.00615117 ,  0.777233   ])
248     , -445.342    , array([ 0.00615117 ,  0.77801    ])
250     , -445.337    , array([ 0.00615117 ,  0.777233   ])
252     , -445.342    , array([ 0.00615117 ,  0.77801    ])
254     , -445.337    , array([ 0.00615117 ,  0.777233   ])
256     , -445.342    , array([ 0.00615117 ,  0.77801    ])
258     , -445.337    , array([ 0.00615117 ,  0.777233   ])
260     , -445.342    , array([ 0.00615117 ,  0.77801    ])
262     , -445.337    , array([ 0.00615117 ,  0.777233   ])
264     , -445.342    , array([ 0.00615117 ,  0.77801    ])
266     , -445.337    , array([ 0.00615117 ,  0.777233   ])
268     , -445.342    , array([ 0.00615117 ,  0.77801    ])
270     , -445.337    , array([ 0.00615117 ,  0.777233   ])
272     , -445.342    , array([ 0.00615117 ,  0.77801    ])
274     , -445.337    , array([ 0.00615117 ,  0.777233   ])
276     , -445.342    , array([ 0.00615117 ,  0.77801    ])
278     , -445.337    , array([ 0.00615117 ,  0.777233   ])
280     , -445.342    , array([ 0.00615117 ,  0.77801    ])
282     , -445.337    , array([ 0.00615117 ,  0.777233   ])
284     , -445.342    , array([ 0.00615117 ,  0.77801    ])
286     , -445.337    , array([ 0.00615117 ,  0.777233   ])
288     , -445.342    , array([ 0.00615117 ,  0.77801    ])
290     , -445.337    , array([ 0.00615117 ,  0.777233   ])
292     , -445.342    , array([ 0.00615117 ,  0.77801    ])
294     , -445.337    , array([ 0.00615117 ,  0.777233   ])
296     , -445.342    , array([ 0.00615117 ,  0.77801    ])
298     , -445.337    , array([ 0.00615117 ,  0.777233   ])
300     , -445.342    , array([ 0.00615117 ,  0.77801    ])
302     , -445.337    , array([ 0.00615117 ,  0.777233   ])
304     , -445.342    , array([ 0.00615117 ,  0.77801    ])
306     , -445.337    , array([ 0.00615117 ,  0.777233   ])
308     , -445.342    , array([ 0.00615117 ,  0.77801    ])
310     , -445.337    , array([ 0.00615117 ,  0.777233   ])
312     , -445.342    , array([ 0.00615117 ,  0.77801    ])
314     , -445.337    , array([ 0.00615117 ,  0.777233   ])
316     , -445.342    , array([ 0.00615117 ,  0.77801    ])
318     , -445.337    , array([ 0.00615117 ,  0.777233   ])
320     , -445.342    , array([ 0.00615117 ,  0.77801    ])
322     , -445.337    , array([ 0.00615117 ,  0.777233   ])
324     , -445.342    , array([ 0.00615117 ,  0.77801    ])
326     , -445.337    , array([ 0.00615117 ,  0.777233   ])
328     , -445.342    , array([ 0.00615117 ,  0.77801    ])
330     , -445.337    , array([ 0.00615117 ,  0.777233   ])
332     , -445.342    , array([ 0.00615117 ,  0.77801    ])
334     , -445.337    , array([ 0.00615117 ,  0.777233   ])
336     , -445.342    , array([ 0.00615117 ,  0.77801    ])
338     , -445.337    , array([ 0.00615117 ,  0.777233   ])
340     , -445.342    , array([ 0.00615117 ,  0.77801    ])
342     , -445.337    , array([ 0.00615117 ,  0.777233   ])
344     , -445.342    , array([ 0.00615117 ,  0.77801    ])
346     , -445.337    , array([ 0.00615117 ,  0.777233   ])
348     , -445.342    , array([ 0.00615117 ,  0.77801    ])
350     , -445.337    , array([ 0.00615117 ,  0.777233   ])
352     , -445.342    , array([ 0.00615117 ,  0.77801    ])
354     , -445.337    , array([ 0.00615117 ,  0.777233   ])
356     , -445.342    , array([ 0.00615117 ,  0.77801    ])
358     , -445.337    , array([ 0.00615117 ,  0.777233   ])
360     , -445.342    , array([ 0.00615117 ,  0.77801    ])
362     , -445.337    , array([ 0.00615117 ,  0.777233   ])
364     , -445.342    , array([ 0.00615117 ,  0.77801    ])
366     , -445.337    , array([ 0.00615117 ,  0.777233   ])
368     , -445.342    , array([ 0.00615117 ,  0.77801    ])
370     , -445.337    , array([ 0.00615117 ,  0.777233   ])
372     , -445.342    , array([ 0.00615117 ,  0.77801    ])
374     , -445.337    , array([ 0.00615117 ,  0.777233   ])
376     , -445.342    , array([ 0.00615117 ,  0.77801    ])
378     , -445.337    , array([ 0.00615117 ,  0.777233   ])
380     , -445.342    , array([ 0.00615117 ,  0.77801    ])
382     , -445.337    , array([ 0.00615117 ,  0.777233   ])
384     , -445.342    , array([ 0.00615117 ,  0.77801    ])
386     , -445.337    , array([ 0.00615117 ,  0.777233   ])
388     , -445.342    , array([ 0.00615117 ,  0.77801    ])
390     , -445.337    , array([ 0.00615117 ,  0.777233   ])
392     , -445.342    , array([ 0.00615117 ,  0.77801    ])
394     , -445.337    , array([ 0.00615117 ,  0.777233   ])
396     , -445.342    , array([ 0.00615117 ,  0.77801    ])
398     , -445.337    , array([ 0.00615117 ,  0.777233   ])
400     , -445.342    , array([ 0.00615117 ,  0.77801    ])
402     , -445.337    , array([ 0.00615117 ,  0.777233   ])
404     , -445.342    , array([ 0.00615117 ,  0.77801    ])
406     , -445.337    , array([ 0.00615117 ,  0.777233   ])
408     , -445.342    , array([ 0.00615117 ,  0.77801    ])
410     , -445.337    , array([ 0.00615117 ,  0.777233   ])
412     , -445.342    , array([ 0.00615117 ,  0.77801    ])
414     , -445.337    , array([ 0.00615117 ,  0.777233   ])
416     , -445.342    , array([ 0.00615117 ,  0.77801    ])
418     , -445.337    , array([ 0.00615117 ,  0.777233   ])
420     , -445.342    , array([ 0.00615117 ,  0.77801    ])
422     , -445.337    , array([ 0.00615117 ,  0.777233   ])
424     , -445.342    , array([ 0.00615117 ,  0.77801    ])
426     , -445.337    , array([ 0.00615117 ,  0.777233   ])
428     , -445.342    , array([ 0.00615117 ,  0.77801    ])
430     , -445.338    , array([ 0.00618509 ,  0.77709    ])
432     , -445.337    , array([ 0.00615246 ,  0.777227   ])
434     , -445.337    , array([ 0.00615122 ,  0.777233   ])
436     , -445.337    , array([ 0.00615117 ,  0.777233   ])
438     , -445.337    , array([ 0.00615117 ,  0.777233   ])
440     , -445.337    , array([ 0.00615117 ,  0.777233   ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 7 for model 1D.1Bottleneck.TB1gen.TRec2850gen for pop MN
Beginning optimization ************************************************
2       , -27531.2    , array([ 0.0135213  ,  0.10599    ])
4       , -27531.2    , array([ 0.0135078  ,  0.10599    ])
6       , -10842.2    , array([ 0.0133876  ,  0.290994   ])
8       , -10822      , array([ 0.0133876  ,  0.291285   ])
14      , -10831.1    , array([ 0.0133876  ,  0.291154   ])
16      , -10810.9    , array([ 0.0133876  ,  0.291445   ])
18      , -10820      , array([ 0.0133875  ,  0.291314   ])
20      , -10799.8    , array([ 0.0133875  ,  0.291605   ])
26      , -10817.3    , array([ 0.0133875  ,  0.291354   ])
28      , -10797      , array([ 0.0133875  ,  0.291645   ])
30      , -10814.5    , array([ 0.0133875  ,  0.291394   ])
32      , -10794.3    , array([ 0.0133875  ,  0.291685   ])
34      , -462.763    , array([ 0.0132684  ,  0.79969    ])
36      , -463.57     , array([ 0.0132684  ,  0.80049    ])
42      , -462.763    , array([ 0.0132683  ,  0.79969    ])
44      , -463.57     , array([ 0.0132683  ,  0.80049    ])
46      , -529.858    , array([ 0.00155349 ,  0.762758   ])
48      , -528.27     , array([ 0.00155349 ,  0.763521   ])
50      , -446.386    , array([ 0.00607469 ,  0.786035   ])
52      , -446.592    , array([ 0.00607469 ,  0.786821   ])
54      , -1079.97    , array([ 0.000451938,  0.79364    ])
56      , -1076.76    , array([ 0.000451938,  0.794434   ])
58      , -446.048    , array([ 0.00356575 ,  0.787588   ])
60      , -445.946    , array([ 0.00356575 ,  0.788376   ])
62      , -445.603    , array([ 0.00489488 ,  0.786664   ])
64      , -445.705    , array([ 0.00489488 ,  0.787451   ])
66      , -446.294    , array([ 0.00336585 ,  0.789052   ])
68      , -446.178    , array([ 0.00336585 ,  0.789841   ])
70      , -445.445    , array([ 0.00435217 ,  0.787413   ])
72      , -445.487    , array([ 0.00435217 ,  0.7882     ])
74      , -445.42     , array([ 0.00442872 ,  0.786522   ])
76      , -445.453    , array([ 0.00442872 ,  0.787309   ])
78      , -445.392    , array([ 0.00460796 ,  0.785037   ])
80      , -445.417    , array([ 0.00460796 ,  0.785823   ])
82      , -445.371    , array([ 0.00489315 ,  0.782865   ])
84      , -445.384    , array([ 0.00489315 ,  0.783648   ])
86      , -445.35     , array([ 0.00531047 ,  0.780096   ])
88      , -445.346    , array([ 0.00531047 ,  0.780877   ])
90      , -445.78     , array([ 0.00736739 ,  0.769121   ])
92      , -445.669    , array([ 0.00736739 ,  0.76989    ])
94      , -445.35     , array([ 0.00551784 ,  0.778804   ])
96      , -445.336    , array([ 0.00551784 ,  0.779583   ])
98      , -445.395    , array([ 0.00629262 ,  0.775075   ])
100     , -445.359    , array([ 0.00629262 ,  0.775851   ])
102     , -445.351    , array([ 0.00561885 ,  0.778288   ])
104     , -445.335    , array([ 0.00561885 ,  0.779067   ])
106     , -445.35     , array([ 0.00553741 ,  0.778703   ])
108     , -445.336    , array([ 0.00553741 ,  0.779482   ])
110     , -445.35     , array([ 0.0055219  ,  0.778783   ])
112     , -445.336    , array([ 0.0055219  ,  0.779562   ])
114     , -445.35     , array([ 0.00551869 ,  0.7788     ])
116     , -445.336    , array([ 0.00551869 ,  0.779579   ])
118     , -445.35     , array([ 0.00551802 ,  0.778803   ])
120     , -445.336    , array([ 0.00551802 ,  0.779582   ])
122     , -445.35     , array([ 0.00551788 ,  0.778804   ])
124     , -445.336    , array([ 0.00551788 ,  0.779583   ])
126     , -445.35     , array([ 0.00551785 ,  0.778804   ])
128     , -445.336    , array([ 0.00551785 ,  0.779583   ])
130     , -445.35     , array([ 0.00551784 ,  0.778804   ])
132     , -445.336    , array([ 0.00551784 ,  0.779583   ])
134     , -445.35     , array([ 0.00551784 ,  0.778804   ])
136     , -445.336    , array([ 0.00551784 ,  0.779583   ])
138     , -445.35     , array([ 0.00551784 ,  0.778804   ])
140     , -445.336    , array([ 0.00551784 ,  0.779583   ])
142     , -445.35     , array([ 0.00551784 ,  0.778804   ])
144     , -445.336    , array([ 0.00551784 ,  0.779583   ])
146     , -445.35     , array([ 0.00551784 ,  0.778804   ])
148     , -445.336    , array([ 0.00551784 ,  0.779583   ])
150     , -445.35     , array([ 0.00551784 ,  0.778804   ])
152     , -445.336    , array([ 0.00551784 ,  0.779583   ])
154     , -445.35     , array([ 0.00551784 ,  0.778804   ])
156     , -445.336    , array([ 0.00551784 ,  0.779583   ])
158     , -445.35     , array([ 0.00551784 ,  0.778804   ])
160     , -445.336    , array([ 0.00551784 ,  0.779583   ])
162     , -445.35     , array([ 0.00551784 ,  0.778804   ])
164     , -445.336    , array([ 0.00551784 ,  0.779583   ])
166     , -445.35     , array([ 0.00551784 ,  0.778804   ])
168     , -445.336    , array([ 0.00551784 ,  0.779583   ])
170     , -445.35     , array([ 0.00551784 ,  0.778804   ])
172     , -445.336    , array([ 0.00551784 ,  0.779583   ])
174     , -445.35     , array([ 0.00551784 ,  0.778804   ])
176     , -445.336    , array([ 0.00551784 ,  0.779583   ])
178     , -445.35     , array([ 0.00551784 ,  0.778804   ])
180     , -445.336    , array([ 0.00551784 ,  0.779583   ])
182     , -445.35     , array([ 0.00551784 ,  0.778804   ])
184     , -445.336    , array([ 0.00551784 ,  0.779583   ])
186     , -445.35     , array([ 0.00551784 ,  0.778804   ])
188     , -445.336    , array([ 0.00551784 ,  0.779583   ])
190     , -445.35     , array([ 0.00551784 ,  0.778804   ])
192     , -445.336    , array([ 0.00551784 ,  0.779583   ])
194     , -445.35     , array([ 0.00551784 ,  0.778804   ])
196     , -445.336    , array([ 0.00551784 ,  0.779583   ])
198     , -445.35     , array([ 0.00551784 ,  0.778804   ])
200     , -445.336    , array([ 0.00551784 ,  0.779583   ])
202     , -445.35     , array([ 0.00551784 ,  0.778804   ])
204     , -445.336    , array([ 0.00551784 ,  0.779583   ])
206     , -445.35     , array([ 0.00551784 ,  0.778804   ])
208     , -445.336    , array([ 0.00551784 ,  0.779583   ])
210     , -445.35     , array([ 0.00551784 ,  0.778804   ])
212     , -445.336    , array([ 0.00551784 ,  0.779583   ])
214     , -445.35     , array([ 0.00551784 ,  0.778804   ])
216     , -445.336    , array([ 0.00551784 ,  0.779583   ])
218     , -445.35     , array([ 0.00551784 ,  0.778804   ])
220     , -445.336    , array([ 0.00551784 ,  0.779583   ])
222     , -445.35     , array([ 0.00551784 ,  0.778804   ])
224     , -445.336    , array([ 0.00551784 ,  0.779583   ])
226     , -445.35     , array([ 0.00551784 ,  0.778804   ])
228     , -445.336    , array([ 0.00551784 ,  0.779583   ])
230     , -445.35     , array([ 0.00551784 ,  0.778804   ])
232     , -445.336    , array([ 0.00551784 ,  0.779583   ])
234     , -445.35     , array([ 0.00551784 ,  0.778804   ])
236     , -445.336    , array([ 0.00551784 ,  0.779583   ])
238     , -445.35     , array([ 0.00551784 ,  0.778804   ])
240     , -445.336    , array([ 0.00551784 ,  0.779583   ])
242     , -445.35     , array([ 0.00551784 ,  0.778804   ])
244     , -445.336    , array([ 0.00551784 ,  0.779583   ])
246     , -445.35     , array([ 0.00551784 ,  0.778804   ])
248     , -445.336    , array([ 0.00551784 ,  0.779583   ])
250     , -445.35     , array([ 0.00551784 ,  0.778804   ])
252     , -445.336    , array([ 0.00551784 ,  0.779583   ])
254     , -445.35     , array([ 0.00551784 ,  0.778804   ])
256     , -445.336    , array([ 0.00551784 ,  0.779583   ])
258     , -445.35     , array([ 0.00551784 ,  0.778804   ])
260     , -445.336    , array([ 0.00551784 ,  0.779583   ])
262     , -445.35     , array([ 0.00551784 ,  0.778804   ])
264     , -445.336    , array([ 0.00551784 ,  0.779583   ])
266     , -445.35     , array([ 0.00551784 ,  0.778804   ])
268     , -445.336    , array([ 0.00551784 ,  0.779583   ])
270     , -445.35     , array([ 0.00551784 ,  0.778804   ])
272     , -445.336    , array([ 0.00551784 ,  0.779583   ])
274     , -445.35     , array([ 0.00551784 ,  0.778804   ])
276     , -445.336    , array([ 0.00551784 ,  0.779583   ])
278     , -445.35     , array([ 0.00551784 ,  0.778804   ])
280     , -445.336    , array([ 0.00551784 ,  0.779583   ])
282     , -445.35     , array([ 0.00551784 ,  0.778804   ])
284     , -445.336    , array([ 0.00551784 ,  0.779583   ])
286     , -445.35     , array([ 0.00551784 ,  0.778804   ])
288     , -445.336    , array([ 0.00551784 ,  0.779583   ])
290     , -445.35     , array([ 0.00551784 ,  0.778804   ])
292     , -445.336    , array([ 0.00551784 ,  0.779583   ])
294     , -445.35     , array([ 0.00551784 ,  0.778804   ])
296     , -445.336    , array([ 0.00551784 ,  0.779583   ])
298     , -445.35     , array([ 0.00551784 ,  0.778804   ])
300     , -445.336    , array([ 0.00551784 ,  0.779583   ])
302     , -445.35     , array([ 0.00551784 ,  0.778804   ])
304     , -445.336    , array([ 0.00551784 ,  0.779583   ])
306     , -445.35     , array([ 0.00551784 ,  0.778804   ])
308     , -445.336    , array([ 0.00551784 ,  0.779583   ])
310     , -445.35     , array([ 0.00551784 ,  0.778804   ])
312     , -445.336    , array([ 0.00551784 ,  0.779583   ])
314     , -445.35     , array([ 0.00551784 ,  0.778804   ])
316     , -445.336    , array([ 0.00551784 ,  0.779583   ])
318     , -445.35     , array([ 0.00551784 ,  0.778804   ])
320     , -445.336    , array([ 0.00551784 ,  0.779583   ])
322     , -445.35     , array([ 0.00551784 ,  0.778804   ])
324     , -445.336    , array([ 0.00551784 ,  0.779583   ])
326     , -445.35     , array([ 0.00551784 ,  0.778804   ])
328     , -445.336    , array([ 0.00551784 ,  0.779583   ])
330     , -445.35     , array([ 0.00551784 ,  0.778804   ])
332     , -445.336    , array([ 0.00551784 ,  0.779583   ])
334     , -445.35     , array([ 0.00551784 ,  0.778804   ])
336     , -445.336    , array([ 0.00551784 ,  0.779583   ])
338     , -445.35     , array([ 0.00551784 ,  0.778804   ])
340     , -445.336    , array([ 0.00551784 ,  0.779583   ])
342     , -445.35     , array([ 0.00551784 ,  0.778804   ])
344     , -445.336    , array([ 0.00551784 ,  0.779583   ])
346     , -445.35     , array([ 0.00551784 ,  0.778804   ])
348     , -445.336    , array([ 0.00551784 ,  0.779583   ])
350     , -445.35     , array([ 0.00551784 ,  0.778804   ])
352     , -445.336    , array([ 0.00551784 ,  0.779583   ])
354     , -445.35     , array([ 0.00551784 ,  0.778804   ])
356     , -445.336    , array([ 0.00551784 ,  0.779583   ])
358     , -445.35     , array([ 0.00551784 ,  0.778804   ])
360     , -445.336    , array([ 0.00551784 ,  0.779583   ])
362     , -445.35     , array([ 0.00551784 ,  0.778804   ])
364     , -445.336    , array([ 0.00551784 ,  0.779583   ])
366     , -445.35     , array([ 0.00551784 ,  0.778804   ])
368     , -445.336    , array([ 0.00551784 ,  0.779583   ])
370     , -445.35     , array([ 0.00551784 ,  0.778804   ])
372     , -445.336    , array([ 0.00551784 ,  0.779583   ])
374     , -445.35     , array([ 0.00551784 ,  0.778804   ])
376     , -445.336    , array([ 0.00551784 ,  0.779583   ])
378     , -445.35     , array([ 0.00551784 ,  0.778804   ])
380     , -445.336    , array([ 0.00551784 ,  0.779583   ])
382     , -445.35     , array([ 0.00551784 ,  0.778804   ])
384     , -445.336    , array([ 0.00551784 ,  0.779583   ])
386     , -445.35     , array([ 0.00551784 ,  0.778804   ])
388     , -445.336    , array([ 0.00551784 ,  0.779583   ])
390     , -445.35     , array([ 0.00551784 ,  0.778804   ])
392     , -445.336    , array([ 0.00551784 ,  0.779583   ])
394     , -445.352    , array([ 0.00569765 ,  0.777892   ])
396     , -445.35     , array([ 0.00554413 ,  0.778669   ])
398     , -445.35     , array([ 0.00552257 ,  0.77878    ])
400     , -445.35     , array([ 0.00551872 ,  0.7788     ])
402     , -445.35     , array([ 0.005518   ,  0.778803   ])
404     , -445.35     , array([ 0.00551787 ,  0.778804   ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 8 for model 1D.1Bottleneck.TB1gen.TRec2850gen for pop MN
Beginning optimization ************************************************
2       , -28021.8    , array([ 0.0050465  ,  0.0864342  ])
4       , -28021.6    , array([ 0.00504145 ,  0.0864342  ])
6       , -27274.8    , array([ 0.00186718 ,  0.0719729  ])
8       , -27280.2    , array([ 0.00186718 ,  0.0720449  ])
14      , -27274.8    , array([ 0.00186711 ,  0.0719724  ])
16      , -27280.1    , array([ 0.00186711 ,  0.0720444  ])
18      , -27274.7    , array([ 0.00186704 ,  0.0719719  ])
20      , -27280.1    , array([ 0.00186704 ,  0.0720439  ])
22      , -20642.2    , array([ 0.000256112,  0.0499037  ])
24      , -20658.9    , array([ 0.000256112,  0.0499536  ])
26      , -20642      , array([ 0.000256102,  0.0499033  ])
28      , -20658.6    , array([ 0.000256102,  0.0499532  ])
30      , -20641.7    , array([ 0.000256092,  0.0499029  ])
32      , -20658.4    , array([ 0.000256092,  0.0499529  ])
38      , -20641.7    , array([ 0.00025609 ,  0.0499028  ])
40      , -20658.3    , array([ 0.00025609 ,  0.0499528  ])
42      , -20641.6    , array([ 0.000256087,  0.0499028  ])
44      , -20658.3    , array([ 0.000256087,  0.0499527  ])
46      , -17154      , array([ 0.000155855,  0.0455375  ])
48      , -17172.9    , array([ 0.000155855,  0.0455831  ])
50      , -17153.9    , array([ 0.000155854,  0.0455375  ])
52      , -17172.9    , array([ 0.000155854,  0.045583   ])
54      , -17153.9    , array([ 0.000155854,  0.0455375  ])
56      , -17172.8    , array([ 0.000155854,  0.045583   ])
58      , -15016.5    , array([ 0.000121586,  0.0435002  ])
60      , -15036      , array([ 0.000121586,  0.0435437  ])
62      , -15016.4    , array([ 0.000121586,  0.0435002  ])
64      , -15036      , array([ 0.000121586,  0.0435437  ])
66      , -13461.4    , array([ 0.000103208,  0.0422058  ])
68      , -13481      , array([ 0.000103208,  0.042248   ])
70      , -13461.4    , array([ 0.000103208,  0.0422058  ])
72      , -13481      , array([ 0.000103208,  0.042248   ])
74      , -13461.4    , array([ 0.000103208,  0.0422058  ])
76      , -13481      , array([ 0.000103208,  0.042248   ])
82      , -13461.4    , array([ 0.000103208,  0.0422058  ])
84      , -13481      , array([ 0.000103208,  0.042248   ])
86      , -13461.4    , array([ 0.000103208,  0.0422058  ])
88      , -13481      , array([ 0.000103208,  0.042248   ])
90      , -13253.3    , array([ 0.000101053,  0.0420419  ])
92      , -13272.9    , array([ 0.000101053,  0.042084   ])
94      , -13253.3    , array([ 0.000101053,  0.0420419  ])
96      , -13272.9    , array([ 0.000101053,  0.042084   ])
102     , -13253.3    , array([ 0.000101053,  0.0420419  ])
104     , -13272.9    , array([ 0.000101053,  0.042084   ])
106     , -13162.1    , array([ 0.000100128,  0.0419708  ])
108     , -13181.7    , array([ 0.000100128,  0.0420127  ])
110     , -13162.1    , array([ 0.000100128,  0.0419708  ])
112     , -13181.7    , array([ 0.000100128,  0.0420127  ])
118     , -13162.1    , array([ 0.000100128,  0.0419708  ])
120     , -13181.7    , array([ 0.000100128,  0.0420127  ])
122     , -13162.1    , array([ 0.000100128,  0.0419708  ])
124     , -13181.7    , array([ 0.000100128,  0.0420127  ])
130     , -13162.1    , array([ 0.000100128,  0.0419708  ])
132     , -13181.7    , array([ 0.000100128,  0.0420127  ])
134     , -13162.1    , array([ 0.000100128,  0.0419708  ])
136     , -13181.7    , array([ 0.000100128,  0.0420127  ])
138     , -13154.4    , array([ 0.00010005 ,  0.0419647  ])
140     , -13173.9    , array([ 0.00010005 ,  0.0420067  ])
146     , -13154.4    , array([ 0.00010005 ,  0.0419647  ])
148     , -13173.9    , array([ 0.00010005 ,  0.0420067  ])
150     , -13151      , array([ 0.000100016,  0.0419621  ])
152     , -13170.5    , array([ 0.000100016,  0.0420041  ])
154     , -13149.9    , array([ 0.000100004,  0.0419612  ])
156     , -13169.4    , array([ 0.000100004,  0.0420032  ])
158     , -13149.5    , array([ 0.0001     ,  0.0419609  ])
160     , -13169      , array([ 0.0001     ,  0.0420029  ])
166     , -13149.5    , array([ 0.0001     ,  0.0419609  ])
168     , -13169      , array([ 0.0001     ,  0.0420029  ])
174     , -13149.5    , array([ 0.0001     ,  0.0419609  ])
176     , -13169      , array([ 0.0001     ,  0.0420029  ])
178     , -13149.5    , array([ 0.0001     ,  0.0419609  ])
180     , -13169      , array([ 0.0001     ,  0.0420029  ])
182     , -13149.5    , array([ 0.0001     ,  0.0419609  ])
184     , -13169      , array([ 0.0001     ,  0.0420029  ])
186     , -27274.8    , array([ 0.00186718 ,  0.0719729  ])
188     , -27280.2    , array([ 0.00186718 ,  0.0720449  ])
190     , -25079.4    , array([ 0.000691538,  0.0599311  ])
192     , -25090.3    , array([ 0.000691538,  0.059991   ])
194     , -20642.4    , array([ 0.000256122,  0.049904   ])
196     , -20645.4    , array([ 0.000256378,  0.049904   ])
198     , -17154.7    , array([ 0.00015587 ,  0.0455383  ])
200     , -17159.3    , array([ 0.000156026,  0.0455383  ])
202     , -15017.2    , array([ 0.000121596,  0.0435009  ])
204     , -15022.7    , array([ 0.000121718,  0.0435009  ])
206     , -13849.1    , array([ 0.000107398,  0.0425166  ])
208     , -13855.2    , array([ 0.000107506,  0.0425166  ])
210     , -13241.7    , array([ 0.000100934,  0.0420328  ])
212     , -13248      , array([ 0.000101035,  0.0420328  ])
216     , -13164.7    , array([ 0.000100154,  0.0419727  ])
218     , -13171      , array([ 0.000100254,  0.0419727  ])
222     , -13155.1    , array([ 0.000100057,  0.0419652  ])
224     , -13161.4    , array([ 0.000100157,  0.0419652  ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 9 for model 1D.1Bottleneck.TB1gen.TRec2850gen for pop MN
Beginning optimization ************************************************
2       , -25795.5    , array([ 0.00946179 ,  0.129607   ])
4       , -25795.4    , array([ 0.00945233 ,  0.129607   ])
6       , -7066.36    , array([ 0.00940473 ,  0.355845   ])
8       , -7049.06    , array([ 0.00940473 ,  0.356201   ])
14      , -7058.22    , array([ 0.00940471 ,  0.356012   ])
16      , -7040.93    , array([ 0.00940471 ,  0.356368   ])
18      , -6798.33    , array([ 0.009404   ,  0.361465   ])
20      , -6781.32    , array([ 0.009404   ,  0.361826   ])
26      , -6796.38    , array([ 0.00940399 ,  0.361506   ])
28      , -6779.37    , array([ 0.00940399 ,  0.361868   ])
30      , -6738.99    , array([ 0.00940383 ,  0.362733   ])
32      , -6722.19    , array([ 0.00940383 ,  0.363096   ])
34      , -987.87     , array([ 0.00935674 ,  0.990278   ])
36      , -991.966    , array([ 0.00935674 ,  0.991269   ])
42      , -987.717    , array([ 0.00934394 ,  0.990273   ])
44      , -991.813    , array([ 0.00934394 ,  0.991264   ])
46      , -987.564    , array([ 0.00933115 ,  0.990268   ])
48      , -991.659    , array([ 0.00933115 ,  0.991259   ])
54      , -987.526    , array([ 0.00932796 ,  0.990267   ])
56      , -991.621    , array([ 0.00932796 ,  0.991258   ])
58      , -987.487    , array([ 0.00932476 ,  0.990266   ])
60      , -991.582    , array([ 0.00932476 ,  0.991256   ])
66      , -987.478    , array([ 0.00932396 ,  0.990265   ])
68      , -991.572    , array([ 0.00932396 ,  0.991256   ])
70      , -987.468    , array([ 0.00932316 ,  0.990265   ])
72      , -991.563    , array([ 0.00932316 ,  0.991256   ])
78      , -987.466    , array([ 0.00932296 ,  0.990265   ])
80      , -991.56     , array([ 0.00932296 ,  0.991256   ])
82      , -987.463    , array([ 0.00932276 ,  0.990265   ])
84      , -991.558    , array([ 0.00932276 ,  0.991256   ])
90      , -987.463    , array([ 0.00932271 ,  0.990265   ])
92      , -991.557    , array([ 0.00932271 ,  0.991256   ])
94      , -987.462    , array([ 0.00932266 ,  0.990265   ])
96      , -991.557    , array([ 0.00932266 ,  0.991256   ])
98      , -536.357    , array([ 0.00063928 ,  0.980467   ])
100     , -536.533    , array([ 0.00063928 ,  0.981448   ])
102     , -825.83     , array([ 0.00337201 ,  0.986536   ])
104     , -829.182    , array([ 0.00337201 ,  0.987523   ])
106     , -520.639    , array([ 0.000821856,  0.981382   ])
108     , -521.458    , array([ 0.000821856,  0.982364   ])
114     , -520.639    , array([ 0.000821849,  0.981382   ])
116     , -521.457    , array([ 0.000821849,  0.982364   ])
118     , -520.062    , array([ 0.000789565,  0.981942   ])
120     , -520.787    , array([ 0.000789565,  0.982924   ])
122     , -518.908    , array([ 0.000793548,  0.980297   ])
124     , -519.627    , array([ 0.000793548,  0.981277   ])
126     , -514.399    , array([ 0.000809684,  0.973743   ])
128     , -515.093    , array([ 0.000809684,  0.974718   ])
130     , -497.963    , array([ 0.000877578,  0.947965   ])
132     , -498.521    , array([ 0.000877578,  0.948914   ])
134     , -465.611    , array([ 0.00114937 ,  0.876091   ])
136     , -465.706    , array([ 0.00114937 ,  0.876967   ])
138     , -458.349    , array([ 0.00156984 ,  0.819303   ])
140     , -457.974    , array([ 0.00156984 ,  0.820123   ])
142     , -454.307    , array([ 0.00159529 ,  0.828808   ])
144     , -454.14     , array([ 0.00159529 ,  0.829638   ])
146     , -450.193    , array([ 0.00188305 ,  0.82458    ])
148     , -450.188    , array([ 0.00188305 ,  0.825405   ])
150     , -447.611    , array([ 0.00236913 ,  0.809578   ])
152     , -447.593    , array([ 0.00236913 ,  0.810388   ])
154     , -446.358    , array([ 0.00304646 ,  0.794805   ])
156     , -446.283    , array([ 0.00304646 ,  0.7956     ])
158     , -445.806    , array([ 0.00357971 ,  0.789573   ])
160     , -445.753    , array([ 0.00357971 ,  0.790363   ])
162     , -445.443    , array([ 0.00441411 ,  0.78401    ])
164     , -445.415    , array([ 0.00441411 ,  0.784794   ])
166     , -445.376    , array([ 0.00479207 ,  0.782846   ])
168     , -445.376    , array([ 0.00479207 ,  0.783629   ])
170     , -445.357    , array([ 0.00525925 ,  0.7801     ])
172     , -445.348    , array([ 0.00525925 ,  0.780881   ])
174     , -445.699    , array([ 0.00763004 ,  0.769216   ])
176     , -445.605    , array([ 0.00763004 ,  0.769985   ])
178     , -445.354    , array([ 0.00555754 ,  0.778477   ])
180     , -445.337    , array([ 0.00555754 ,  0.779256   ])
182     , -445.372    , array([ 0.00628436 ,  0.775545   ])
184     , -445.347    , array([ 0.00628436 ,  0.776321   ])
186     , -445.353    , array([ 0.00569815 ,  0.77788    ])
188     , -445.335    , array([ 0.00569815 ,  0.778658   ])
190     , -445.351    , array([ 0.00572269 ,  0.777821   ])
192     , -445.334    , array([ 0.00572269 ,  0.778599   ])
194     , -445.347    , array([ 0.0058219  ,  0.777585   ])
196     , -445.332    , array([ 0.0058219  ,  0.778363   ])
198     , -445.341    , array([ 0.00600597 ,  0.777189   ])
200     , -445.333    , array([ 0.00600597 ,  0.777967   ])
202     , -445.343    , array([ 0.00628282 ,  0.776568   ])
204     , -445.342    , array([ 0.00628282 ,  0.777345   ])
206     , -445.341    , array([ 0.00607226 ,  0.777038   ])
208     , -445.335    , array([ 0.00607226 ,  0.777815   ])
210     , -445.341    , array([ 0.00610529 ,  0.77696    ])
212     , -445.335    , array([ 0.00610529 ,  0.777737   ])
214     , -445.341    , array([ 0.00607926 ,  0.777021   ])
216     , -445.335    , array([ 0.00607926 ,  0.777799   ])
218     , -445.341    , array([ 0.00609643 ,  0.776981   ])
220     , -445.335    , array([ 0.00609643 ,  0.777758   ])
222     , -445.341    , array([ 0.00608283 ,  0.777013   ])
224     , -445.335    , array([ 0.00608283 ,  0.77779    ])
226     , -445.341    , array([ 0.00608002 ,  0.77702    ])
228     , -445.335    , array([ 0.00608002 ,  0.777797   ])
230     , -445.341    , array([ 0.00608188 ,  0.777015   ])
232     , -445.335    , array([ 0.00608188 ,  0.777793   ])
234     , -445.341    , array([ 0.00608041 ,  0.777019   ])
236     , -445.335    , array([ 0.00608041 ,  0.777796   ])
238     , -445.341    , array([ 0.00608138 ,  0.777016   ])
240     , -445.335    , array([ 0.00608138 ,  0.777794   ])
242     , -445.341    , array([ 0.00608062 ,  0.777018   ])
244     , -445.335    , array([ 0.00608062 ,  0.777796   ])
246     , -445.341    , array([ 0.00608045 ,  0.777019   ])
248     , -445.335    , array([ 0.00608045 ,  0.777796   ])
250     , -445.341    , array([ 0.00608042 ,  0.777019   ])
252     , -445.335    , array([ 0.00608042 ,  0.777796   ])
254     , -445.341    , array([ 0.00608041 ,  0.777019   ])
256     , -445.335    , array([ 0.00608041 ,  0.777796   ])
258     , -445.341    , array([ 0.00608041 ,  0.777019   ])
260     , -445.335    , array([ 0.00608041 ,  0.777796   ])
262     , -445.341    , array([ 0.00608041 ,  0.777019   ])
264     , -445.335    , array([ 0.00608041 ,  0.777796   ])
266     , -445.341    , array([ 0.00608041 ,  0.777019   ])
268     , -445.335    , array([ 0.00608041 ,  0.777796   ])
270     , -445.341    , array([ 0.00608041 ,  0.777019   ])
272     , -445.335    , array([ 0.00608041 ,  0.777796   ])
274     , -445.341    , array([ 0.00608041 ,  0.777019   ])
276     , -445.335    , array([ 0.00608041 ,  0.777796   ])
278     , -445.341    , array([ 0.00608041 ,  0.777019   ])
280     , -445.335    , array([ 0.00608041 ,  0.777796   ])
282     , -445.341    , array([ 0.00608041 ,  0.777019   ])
284     , -445.335    , array([ 0.00608041 ,  0.777796   ])
286     , -445.341    , array([ 0.00608821 ,  0.777      ])
288     , -445.34     , array([ 0.0060943  ,  0.777      ])
290     , -445.341    , array([ 0.00609777 ,  0.776978   ])
292     , -445.341    , array([ 0.00608976 ,  0.776997   ])
294     , -445.341    , array([ 0.00608848 ,  0.777      ])
296     , -445.341    , array([ 0.00608826 ,  0.777      ])
298     , -445.341    , array([ 0.00608822 ,  0.777      ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 10 for model 1D.1Bottleneck.TB1gen.TRec2850gen for pop MN
Beginning optimization ************************************************
2       , -27048      , array([ 0.0183945  ,  0.0657356  ])
4       , -27048      , array([ 0.0183761  ,  0.0657356  ])
6       , -4385.7     , array([ 0.0182782  ,  0.0239425  ])
8       , -4408.34    , array([ 0.0182782  ,  0.0239664  ])
10      , -1132.63    , array([ 0.0178917  ,  0.000421351])
12      , -1132.63    , array([ 0.0178917  ,  0.000421772])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 11 for model 1D.1Bottleneck.TB1gen.TRec2850gen for pop MN
Beginning optimization ************************************************
2       , -25307.6    , array([ 0.00930779 ,  0.135054   ])
4       , -25307.5    , array([ 0.00929849 ,  0.135054   ])
6       , -6374.33    , array([ 0.0092588  ,  0.370802   ])
8       , -6357.87    , array([ 0.0092588  ,  0.371173   ])
14      , -6366.97    , array([ 0.00925878 ,  0.370968   ])
16      , -6350.51    , array([ 0.00925878 ,  0.371339   ])
18      , -6179.26    , array([ 0.00925833 ,  0.375259   ])
20      , -6163.08    , array([ 0.00925833 ,  0.375634   ])
26      , -6177.49    , array([ 0.00925833 ,  0.3753     ])
28      , -6161.31    , array([ 0.00925833 ,  0.375675   ])
30      , -6134.37    , array([ 0.00925822 ,  0.376302   ])
32      , -6118.21    , array([ 0.00925822 ,  0.376678   ])
34      , -1151.3     , array([ 0.00921888 ,  1.02866    ])
36      , -1155.89    , array([ 0.00921888 ,  1.02968    ])
42      , -1151.06    , array([ 0.00920094 ,  1.02865    ])
44      , -1155.64    , array([ 0.00920094 ,  1.02968    ])
46      , -1150.82    , array([ 0.00918301 ,  1.02865    ])
48      , -1155.4     , array([ 0.00918301 ,  1.02968    ])
54      , -1150.76    , array([ 0.00917853 ,  1.02865    ])
56      , -1155.34    , array([ 0.00917853 ,  1.02968    ])
58      , -1150.7     , array([ 0.00917405 ,  1.02865    ])
60      , -1155.28    , array([ 0.00917405 ,  1.02967    ])
66      , -1150.68    , array([ 0.00917293 ,  1.02864    ])
68      , -1155.27    , array([ 0.00917293 ,  1.02967    ])
70      , -1150.67    , array([ 0.00917181 ,  1.02864    ])
72      , -1155.25    , array([ 0.00917181 ,  1.02967    ])
78      , -1150.66    , array([ 0.00917153 ,  1.02864    ])
80      , -1155.25    , array([ 0.00917153 ,  1.02967    ])
82      , -1150.66    , array([ 0.00917125 ,  1.02864    ])
84      , -1155.24    , array([ 0.00917125 ,  1.02967    ])
90      , -1150.66    , array([ 0.00917118 ,  1.02864    ])
92      , -1155.24    , array([ 0.00917118 ,  1.02967    ])
94      , -1150.66    , array([ 0.00917111 ,  1.02864    ])
96      , -1155.24    , array([ 0.00917111 ,  1.02967    ])
98      , -676.762    , array([ 0.000437373,  1.02237    ])
100     , -676.427    , array([ 0.000437373,  1.0234     ])
102     , -1074.67    , array([ 0.00551761 ,  1.02759    ])
104     , -1078.96    , array([ 0.00551761 ,  1.02862    ])
106     , -564.478    , array([ 0.000818407,  1.02366    ])
108     , -565.76     , array([ 0.000818407,  1.02469    ])
110     , -551.086    , array([ 0.000686273,  1.0233     ])
112     , -551.91     , array([ 0.000686273,  1.02432    ])
114     , -738.734    , array([ 0.0307395  ,  0.910461   ])
116     , -741.892    , array([ 0.0307395  ,  0.911372   ])
118     , -559.147    , array([ 0.000834067,  1.01719    ])
120     , -560.412    , array([ 0.000834067,  1.0182     ])
122     , -550.692    , array([ 0.000708628,  1.02229    ])
124     , -551.591    , array([ 0.000708628,  1.02332    ])
126     , -549.903    , array([ 0.000710091,  1.02132    ])
128     , -550.797    , array([ 0.000710091,  1.02234    ])
130     , -546.753    , array([ 0.000715973,  1.01742    ])
132     , -547.631    , array([ 0.000715973,  1.01844    ])
134     , -534.474    , array([ 0.000739992,  1.00199    ])
136     , -535.275    , array([ 0.000739992,  1.003      ])
138     , -496.153    , array([ 0.000844404,  0.942588   ])
140     , -496.552    , array([ 0.000844404,  0.943531   ])
142     , -477.217    , array([ 0.00133253 ,  0.813627   ])
144     , -476.464    , array([ 0.00133253 ,  0.814441   ])
146     , -463.102    , array([ 0.00120968 ,  0.859071   ])
148     , -463.008    , array([ 0.00120968 ,  0.85993    ])
150     , -458.922    , array([ 0.00133184 ,  0.850379   ])
152     , -458.854    , array([ 0.00133184 ,  0.85123    ])
154     , -452.737    , array([ 0.00165948 ,  0.830067   ])
156     , -452.657    , array([ 0.00165948 ,  0.830898   ])
158     , -448.883    , array([ 0.00212115 ,  0.812918   ])
160     , -448.801    , array([ 0.00212115 ,  0.813732   ])
162     , -446.817    , array([ 0.00271115 ,  0.80077    ])
164     , -446.758    , array([ 0.00271115 ,  0.801571   ])
166     , -445.95     , array([ 0.00330098 ,  0.793741   ])
168     , -445.923    , array([ 0.00330098 ,  0.794535   ])
170     , -445.59     , array([ 0.00383619 ,  0.788532   ])
172     , -445.567    , array([ 0.00383619 ,  0.789321   ])
174     , -445.394    , array([ 0.00502363 ,  0.780681   ])
176     , -445.372    , array([ 0.00502363 ,  0.781462   ])
178     , -445.333    , array([ 0.00570796 ,  0.778806   ])
180     , -445.338    , array([ 0.00570796 ,  0.779585   ])
182     , -445.373    , array([ 0.00642704 ,  0.775201   ])
184     , -445.35     , array([ 0.00642704 ,  0.775977   ])
186     , -445.333    , array([ 0.00580783 ,  0.778278   ])
188     , -445.335    , array([ 0.00580783 ,  0.779057   ])
190     , -445.333    , array([ 0.005728   ,  0.778699   ])
192     , -445.337    , array([ 0.005728   ,  0.779478   ])
194     , -445.333    , array([ 0.00571225 ,  0.778783   ])
196     , -445.337    , array([ 0.00571225 ,  0.779562   ])
198     , -445.333    , array([ 0.00572264 ,  0.778728   ])
200     , -445.337    , array([ 0.00572264 ,  0.779507   ])
202     , -445.333    , array([ 0.00571446 ,  0.778771   ])
204     , -445.337    , array([ 0.00571446 ,  0.779551   ])
206     , -445.333    , array([ 0.00571986 ,  0.778743   ])
208     , -445.337    , array([ 0.00571986 ,  0.779522   ])
210     , -445.333    , array([ 0.0057156  ,  0.778765   ])
212     , -445.337    , array([ 0.0057156  ,  0.779544   ])
214     , -445.333    , array([ 0.00571841 ,  0.77875    ])
216     , -445.337    , array([ 0.00571841 ,  0.779529   ])
218     , -445.333    , array([ 0.00571619 ,  0.778762   ])
220     , -445.337    , array([ 0.00571619 ,  0.779541   ])
222     , -445.333    , array([ 0.00571766 ,  0.778754   ])
224     , -445.337    , array([ 0.00571766 ,  0.779534   ])
226     , -445.333    , array([ 0.0057165  ,  0.778761   ])
228     , -445.337    , array([ 0.0057165  ,  0.77954    ])
230     , -445.333    , array([ 0.00571626 ,  0.778762   ])
232     , -445.337    , array([ 0.00571626 ,  0.779541   ])
234     , -445.333    , array([ 0.00571642 ,  0.778761   ])
236     , -445.337    , array([ 0.00571642 ,  0.77954    ])
238     , -445.333    , array([ 0.00571629 ,  0.778762   ])
240     , -445.337    , array([ 0.00571629 ,  0.779541   ])
242     , -445.333    , array([ 0.00571627 ,  0.778762   ])
244     , -445.337    , array([ 0.00571627 ,  0.779541   ])
246     , -445.333    , array([ 0.00571626 ,  0.778762   ])
248     , -445.337    , array([ 0.00571626 ,  0.779541   ])
250     , -445.333    , array([ 0.00571626 ,  0.778762   ])
252     , -445.337    , array([ 0.00571626 ,  0.779541   ])
254     , -445.333    , array([ 0.00571626 ,  0.778762   ])
256     , -445.337    , array([ 0.00571626 ,  0.779541   ])
258     , -445.333    , array([ 0.00571626 ,  0.778762   ])
260     , -445.337    , array([ 0.00571626 ,  0.779541   ])
262     , -445.333    , array([ 0.00571626 ,  0.778762   ])
264     , -445.337    , array([ 0.00571626 ,  0.779541   ])
266     , -445.333    , array([ 0.00571626 ,  0.778762   ])
268     , -445.337    , array([ 0.00571626 ,  0.779541   ])
270     , -445.333    , array([ 0.00571626 ,  0.778762   ])
272     , -445.337    , array([ 0.00571626 ,  0.779541   ])
274     , -445.333    , array([ 0.00571626 ,  0.778762   ])
276     , -445.337    , array([ 0.00571626 ,  0.779541   ])
278     , -445.333    , array([ 0.00571626 ,  0.778762   ])
280     , -445.337    , array([ 0.00571626 ,  0.779541   ])
282     , -445.333    , array([ 0.00571626 ,  0.778762   ])
284     , -445.337    , array([ 0.00571626 ,  0.779541   ])
286     , -445.335    , array([ 0.00588613 ,  0.777871   ])
288     , -445.333    , array([ 0.00573552 ,  0.778659   ])
290     , -445.333    , array([ 0.00571985 ,  0.778743   ])
292     , -445.337    , array([ 0.00571985 ,  0.779522   ])
294     , -445.333    , array([ 0.00572346 ,  0.778723   ])
296     , -445.333    , array([ 0.00572052 ,  0.778739   ])
298     , -445.333    , array([ 0.00571997 ,  0.778742   ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 12 for model 1D.1Bottleneck.TB1gen.TRec2850gen for pop MN
Beginning optimization ************************************************
2       , -20911.2    , array([ 0.0156326  ,  0.178688   ])
4       , -20911.2    , array([ 0.015617   ,  0.178688   ])
6       , -2591.23    , array([ 0.0156132  ,  0.490607   ])
8       , -2581.23    , array([ 0.0156132  ,  0.491098   ])
14      , -2589.72    , array([ 0.0157196  ,  0.490661   ])
16      , -2579.73    , array([ 0.0157196  ,  0.491152   ])
18      , -2569.81    , array([ 0.0172203  ,  0.491382   ])
20      , -2559.85    , array([ 0.0172203  ,  0.491874   ])
26      , -2569.45    , array([ 0.0172487  ,  0.491395   ])
28      , -2559.49    , array([ 0.0172487  ,  0.491887   ])
30      , -2564.69    , array([ 0.0176354  ,  0.491571   ])
32      , -2554.74    , array([ 0.0176354  ,  0.492063   ])
38      , -2564.6     , array([ 0.0176427  ,  0.491574   ])
40      , -2554.65    , array([ 0.0176427  ,  0.492066   ])
42      , -2563.42    , array([ 0.01774    ,  0.491618   ])
44      , -2553.48    , array([ 0.01774    ,  0.49211    ])
50      , -2563.4     , array([ 0.0177419  ,  0.491618   ])
52      , -2553.45    , array([ 0.0177419  ,  0.49211    ])
54      , -2563.11    , array([ 0.0177662  ,  0.491629   ])
56      , -2553.16    , array([ 0.0177662  ,  0.492121   ])
62      , -2563.1     , array([ 0.0177667  ,  0.49163    ])
64      , -2553.16    , array([ 0.0177667  ,  0.492121   ])
66      , -2563.03    , array([ 0.0177728  ,  0.491632   ])
68      , -2553.08    , array([ 0.0177728  ,  0.492124   ])
70      , -1890.23    , array([ 1.22511    ,  0.526342   ])
72      , -1882       , array([ 1.22511    ,  0.526868   ])
74      , -838.489    , array([ 0.0583514  ,  0.625279   ])
76      , -834.362    , array([ 0.0583514  ,  0.625905   ])
78      , -459.778    , array([ 0.0160728  ,  0.736453   ])
80      , -459.046    , array([ 0.0160728  ,  0.737189   ])
82      , -446.048    , array([ 0.0222262  ,  0.760781   ])
84      , -446.009    , array([ 0.0222262  ,  0.761543   ])
86      , -445.979    , array([ 0.0216275  ,  0.76235    ])
88      , -445.976    , array([ 0.0216275  ,  0.763112   ])
90      , -445.952    , array([ 0.0205718  ,  0.762971   ])
92      , -445.957    , array([ 0.0205718  ,  0.763735   ])
94      , -445.882    , array([ 0.0177546  ,  0.764346   ])
96      , -445.898    , array([ 0.0177546  ,  0.765111   ])
98      , -445.579    , array([ 0.00985079 ,  0.769871   ])
100     , -445.593    , array([ 0.00985079 ,  0.770641   ])
102     , -591.535    , array([ 0.00093349 ,  0.792373   ])
104     , -589.718    , array([ 0.00093349 ,  0.793165   ])
106     , -445.578    , array([ 0.00569932 ,  0.775039   ])
108     , -445.492    , array([ 0.00569932 ,  0.775814   ])
110     , -445.482    , array([ 0.00850267 ,  0.771258   ])
112     , -445.48     , array([ 0.00850267 ,  0.772029   ])
114     , -445.427    , array([ 0.00702704 ,  0.773057   ])
116     , -445.392    , array([ 0.00702704 ,  0.77383    ])
118     , -445.555    , array([ 0.00948033 ,  0.770627   ])
120     , -445.575    , array([ 0.00948033 ,  0.771398   ])
122     , -445.425    , array([ 0.00727154 ,  0.772779   ])
124     , -445.399    , array([ 0.00727154 ,  0.773552   ])
126     , -445.421    , array([ 0.00724243 ,  0.772904   ])
128     , -445.396    , array([ 0.00724243 ,  0.773677   ])
130     , -445.404    , array([ 0.00712712 ,  0.773404   ])
132     , -445.385    , array([ 0.00712712 ,  0.774178   ])
134     , -445.351    , array([ 0.00647671 ,  0.775861   ])
136     , -445.348    , array([ 0.00647671 ,  0.776637   ])
138     , -445.345    , array([ 0.00636397 ,  0.776325   ])
140     , -445.345    , array([ 0.00636397 ,  0.777102   ])
142     , -445.345    , array([ 0.00636076 ,  0.776355   ])
144     , -445.345    , array([ 0.00636076 ,  0.777132   ])
146     , -445.345    , array([ 0.00635952 ,  0.776357   ])
148     , -445.345    , array([ 0.00635952 ,  0.777134   ])
150     , -445.345    , array([ 0.00635969 ,  0.776357   ])
152     , -445.345    , array([ 0.00635969 ,  0.777134   ])
154     , -445.345    , array([ 0.00635952 ,  0.776357   ])
156     , -445.345    , array([ 0.00635952 ,  0.777134   ])
158     , -445.345    , array([ 0.00635952 ,  0.776357   ])
160     , -445.345    , array([ 0.00635952 ,  0.777134   ])
162     , -445.345    , array([ 0.00635952 ,  0.776357   ])
164     , -445.345    , array([ 0.00635952 ,  0.777134   ])
166     , -445.345    , array([ 0.00635952 ,  0.776357   ])
168     , -445.345    , array([ 0.00635952 ,  0.777134   ])
170     , -445.345    , array([ 0.00635952 ,  0.776357   ])
172     , -445.345    , array([ 0.00635952 ,  0.777134   ])
174     , -445.345    , array([ 0.00635952 ,  0.776357   ])
176     , -445.345    , array([ 0.00635952 ,  0.777134   ])
178     , -445.345    , array([ 0.00635952 ,  0.776357   ])
180     , -445.345    , array([ 0.00635952 ,  0.777134   ])
182     , -445.345    , array([ 0.00635952 ,  0.776357   ])
184     , -445.345    , array([ 0.00635952 ,  0.777134   ])
186     , -445.345    , array([ 0.00635952 ,  0.776357   ])
188     , -445.345    , array([ 0.00635952 ,  0.777134   ])
190     , -445.345    , array([ 0.00635952 ,  0.776357   ])
192     , -445.345    , array([ 0.00635952 ,  0.777134   ])
194     , -445.345    , array([ 0.00635952 ,  0.776357   ])
196     , -445.345    , array([ 0.00635952 ,  0.777134   ])
198     , -445.345    , array([ 0.00635952 ,  0.776357   ])
200     , -445.345    , array([ 0.00635952 ,  0.777134   ])
202     , -445.345    , array([ 0.00635952 ,  0.776357   ])
204     , -445.345    , array([ 0.00635952 ,  0.777134   ])
206     , -445.345    , array([ 0.00635952 ,  0.776357   ])
208     , -445.345    , array([ 0.00635952 ,  0.777134   ])
210     , -445.345    , array([ 0.00635952 ,  0.776357   ])
212     , -445.345    , array([ 0.00635952 ,  0.777134   ])
214     , -445.345    , array([ 0.00635952 ,  0.776357   ])
216     , -445.345    , array([ 0.00635952 ,  0.777134   ])
218     , -445.345    , array([ 0.00635952 ,  0.776357   ])
220     , -445.345    , array([ 0.00635952 ,  0.777134   ])
222     , -445.345    , array([ 0.00635952 ,  0.776357   ])
224     , -445.345    , array([ 0.00635952 ,  0.777134   ])
226     , -445.345    , array([ 0.00635952 ,  0.776357   ])
228     , -445.345    , array([ 0.00635952 ,  0.777134   ])
230     , -445.345    , array([ 0.00635952 ,  0.776357   ])
232     , -445.345    , array([ 0.00635952 ,  0.777134   ])
234     , -445.345    , array([ 0.00635952 ,  0.776357   ])
236     , -445.345    , array([ 0.00635952 ,  0.777134   ])
238     , -445.345    , array([ 0.00635952 ,  0.776357   ])
240     , -445.345    , array([ 0.00635952 ,  0.777134   ])
242     , -445.345    , array([ 0.00635952 ,  0.776357   ])
244     , -445.345    , array([ 0.00635952 ,  0.777134   ])
246     , -445.345    , array([ 0.00635952 ,  0.776357   ])
248     , -445.345    , array([ 0.00635952 ,  0.777134   ])
250     , -445.345    , array([ 0.00635952 ,  0.776357   ])
252     , -445.345    , array([ 0.00635952 ,  0.777134   ])
254     , -445.345    , array([ 0.00635952 ,  0.776357   ])
256     , -445.345    , array([ 0.00635952 ,  0.777134   ])
258     , -445.345    , array([ 0.00635952 ,  0.776357   ])
260     , -445.345    , array([ 0.00635952 ,  0.777134   ])
262     , -445.345    , array([ 0.00635952 ,  0.776357   ])
264     , -445.345    , array([ 0.00635952 ,  0.777134   ])
266     , -445.345    , array([ 0.00635952 ,  0.776357   ])
268     , -445.345    , array([ 0.00635952 ,  0.777134   ])
270     , -445.345    , array([ 0.00635952 ,  0.776357   ])
272     , -445.345    , array([ 0.00635952 ,  0.777134   ])
274     , -445.345    , array([ 0.0063596  ,  0.776357   ])
276     , -445.345    , array([ 0.00635954 ,  0.776357   ])
278     , -445.345    , array([ 0.00635953 ,  0.776357   ])
280     , -445.345    , array([ 0.00635952 ,  0.776357   ])
282     , -445.345    , array([ 0.00635952 ,  0.776357   ])
284     , -445.345    , array([ 0.00635952 ,  0.776357   ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 13 for model 1D.1Bottleneck.TB1gen.TRec2850gen for pop MN
Beginning optimization ************************************************
2       , -19096      , array([ 0.00527858 ,  0.196306   ])
4       , -19096      , array([ 0.0052733  ,  0.196306   ])
6       , -1858.22    , array([ 0.00527709 ,  0.538977   ])
8       , -1850.27    , array([ 0.00527709 ,  0.539516   ])
14      , -1856.2     , array([ 0.00531659 ,  0.539035   ])
16      , -1848.26    , array([ 0.00531659 ,  0.539574   ])
18      , -1830.1     , array([ 0.00587261 ,  0.539814   ])
20      , -1822.22    , array([ 0.00587261 ,  0.540354   ])
26      , -1829.66    , array([ 0.0058829  ,  0.539828   ])
28      , -1821.77    , array([ 0.0058829  ,  0.540368   ])
30      , -1823.71    , array([ 0.00602274 ,  0.540012   ])
32      , -1815.84    , array([ 0.00602274 ,  0.540552   ])
38      , -1823.6     , array([ 0.00602534 ,  0.540015   ])
40      , -1815.73    , array([ 0.00602534 ,  0.540556   ])
42      , -1822.15    , array([ 0.00606034 ,  0.540061   ])
44      , -1814.28    , array([ 0.00606034 ,  0.540601   ])
50      , -1822.12    , array([ 0.006061   ,  0.540062   ])
52      , -1814.25    , array([ 0.006061   ,  0.540602   ])
54      , -1821.76    , array([ 0.00606975 ,  0.540073   ])
56      , -1813.89    , array([ 0.00606975 ,  0.540613   ])
62      , -1821.75    , array([ 0.00606991 ,  0.540073   ])
64      , -1813.88    , array([ 0.00606991 ,  0.540614   ])
66      , -1821.66    , array([ 0.0060721  ,  0.540076   ])
68      , -1813.79    , array([ 0.0060721  ,  0.540616   ])
70      , -1285.64    , array([ 0.335055   ,  0.572463   ])
72      , -1279.46    , array([ 0.335055   ,  0.573036   ])
74      , -534.914    , array([ 0.110377   ,  0.690539   ])
76      , -532.999    , array([ 0.110377   ,  0.69123    ])
78      , -447.465    , array([ 0.0727081  ,  0.750683   ])
80      , -447.264    , array([ 0.0727081  ,  0.751434   ])
82      , -446.344    , array([ 0.0693298  ,  0.758067   ])
84      , -446.333    , array([ 0.0693298  ,  0.758826   ])
86      , -446.334    , array([ 0.0687934  ,  0.758535   ])
88      , -446.334    , array([ 0.0687934  ,  0.759294   ])
90      , -446.332    , array([ 0.068358   ,  0.7586     ])
92      , -446.334    , array([ 0.068358   ,  0.759359   ])
94      , -446.326    , array([ 0.066644   ,  0.758858   ])
96      , -446.333    , array([ 0.066644   ,  0.759617   ])
98      , -446.306    , array([ 0.0601884  ,  0.759399   ])
100     , -446.323    , array([ 0.0601884  ,  0.760159   ])
102     , -446.247    , array([ 0.0448336  ,  0.760685   ])
104     , -446.278    , array([ 0.0448336  ,  0.761446   ])
106     , -445.753    , array([ 0.0138028  ,  0.765853   ])
108     , -445.756    , array([ 0.0138028  ,  0.76662    ])
110     , -2982.52    , array([ 0.000123999,  0.786879   ])
112     , -2980.02    , array([ 0.000123999,  0.787666   ])
114     , -445.752    , array([ 0.0137904  ,  0.765857   ])
116     , -445.756    , array([ 0.0137904  ,  0.766624   ])
118     , -445.752    , array([ 0.0137811  ,  0.76586    ])
120     , -445.755    , array([ 0.0137811  ,  0.766627   ])
122     , -534.715    , array([ 0.00130723 ,  0.776298   ])
124     , -533.163    , array([ 0.00130723 ,  0.777075   ])
126     , -445.757    , array([ 0.00796777 ,  0.768276   ])
128     , -445.656    , array([ 0.00796777 ,  0.769044   ])
130     , -445.667    , array([ 0.0102531  ,  0.767163   ])
132     , -445.626    , array([ 0.0102531  ,  0.767931   ])
134     , -445.904    , array([ 0.0181056  ,  0.764859   ])
136     , -445.936    , array([ 0.0181056  ,  0.765624   ])
138     , -445.667    , array([ 0.0105695  ,  0.76704    ])
140     , -445.632    , array([ 0.0105695  ,  0.767807   ])
142     , -445.667    , array([ 0.0103554  ,  0.767123   ])
144     , -445.628    , array([ 0.0103554  ,  0.76789    ])
146     , -445.666    , array([ 0.0103502  ,  0.767138   ])
148     , -445.627    , array([ 0.0103502  ,  0.767905   ])
150     , -445.663    , array([ 0.0103294  ,  0.767197   ])
152     , -445.625    , array([ 0.0103294  ,  0.767965   ])
154     , -445.651    , array([ 0.0102464  ,  0.767435   ])
156     , -445.616    , array([ 0.0102464  ,  0.768203   ])
158     , -445.607    , array([ 0.00992122 ,  0.768386   ])
160     , -445.587    , array([ 0.00992122 ,  0.769155   ])
162     , -445.477    , array([ 0.00848189 ,  0.771678   ])
164     , -445.485    , array([ 0.00848189 ,  0.77245    ])
166     , -445.357    , array([ 0.00667834 ,  0.775971   ])
168     , -445.37     , array([ 0.00667834 ,  0.776747   ])
170     , -445.334    , array([ 0.00600535 ,  0.777636   ])
172     , -445.337    , array([ 0.00600535 ,  0.778414   ])
174     , -445.342    , array([ 0.0063392  ,  0.776642   ])
176     , -445.347    , array([ 0.0063392  ,  0.777419   ])
178     , -445.335    , array([ 0.00604142 ,  0.777526   ])
180     , -445.338    , array([ 0.00604142 ,  0.778304   ])
182     , -445.334    , array([ 0.00600992 ,  0.777622   ])
184     , -445.337    , array([ 0.00600992 ,  0.7784     ])
186     , -445.334    , array([ 0.00600594 ,  0.777634   ])
188     , -445.337    , array([ 0.00600594 ,  0.778412   ])
190     , -445.334    , array([ 0.00600542 ,  0.777636   ])
192     , -445.337    , array([ 0.00600542 ,  0.778414   ])
194     , -445.334    , array([ 0.00600536 ,  0.777636   ])
196     , -445.337    , array([ 0.00600536 ,  0.778414   ])
198     , -445.334    , array([ 0.00600535 ,  0.777636   ])
200     , -445.337    , array([ 0.00600535 ,  0.778414   ])
202     , -445.334    , array([ 0.00600535 ,  0.777636   ])
204     , -445.337    , array([ 0.00600535 ,  0.778414   ])
206     , -445.334    , array([ 0.00600535 ,  0.777636   ])
208     , -445.337    , array([ 0.00600535 ,  0.778414   ])
210     , -445.334    , array([ 0.00600535 ,  0.777636   ])
212     , -445.337    , array([ 0.00600535 ,  0.778414   ])
214     , -445.334    , array([ 0.00600535 ,  0.777636   ])
216     , -445.337    , array([ 0.00600535 ,  0.778414   ])
218     , -445.334    , array([ 0.00600535 ,  0.777636   ])
220     , -445.337    , array([ 0.00600535 ,  0.778414   ])
222     , -445.334    , array([ 0.00600535 ,  0.777636   ])
224     , -445.337    , array([ 0.00600535 ,  0.778414   ])
226     , -445.334    , array([ 0.00600535 ,  0.777636   ])
228     , -445.337    , array([ 0.00600535 ,  0.778414   ])
230     , -445.334    , array([ 0.00600535 ,  0.777636   ])
232     , -445.337    , array([ 0.00600535 ,  0.778414   ])
234     , -445.334    , array([ 0.00600535 ,  0.777636   ])
236     , -445.337    , array([ 0.00600535 ,  0.778414   ])
238     , -445.334    , array([ 0.00600535 ,  0.777636   ])
240     , -445.337    , array([ 0.00600535 ,  0.778414   ])
242     , -445.334    , array([ 0.00600535 ,  0.777636   ])
244     , -445.337    , array([ 0.00600535 ,  0.778414   ])
246     , -445.334    , array([ 0.00600535 ,  0.777636   ])
248     , -445.337    , array([ 0.00600535 ,  0.778414   ])
250     , -445.334    , array([ 0.00600535 ,  0.777636   ])
252     , -445.337    , array([ 0.00600535 ,  0.778414   ])
254     , -445.334    , array([ 0.00600535 ,  0.777636   ])
256     , -445.337    , array([ 0.00600535 ,  0.778414   ])
258     , -445.334    , array([ 0.00600535 ,  0.777636   ])
260     , -445.337    , array([ 0.00600535 ,  0.778414   ])
262     , -445.334    , array([ 0.00600535 ,  0.777636   ])
264     , -445.337    , array([ 0.00600535 ,  0.778414   ])
266     , -445.334    , array([ 0.00600535 ,  0.777636   ])
268     , -445.337    , array([ 0.00600535 ,  0.778414   ])
270     , -445.334    , array([ 0.00600535 ,  0.777636   ])
272     , -445.337    , array([ 0.00600535 ,  0.778414   ])
274     , -445.334    , array([ 0.00600535 ,  0.777636   ])
276     , -445.337    , array([ 0.00600535 ,  0.778414   ])
278     , -445.334    , array([ 0.00600535 ,  0.777636   ])
280     , -445.337    , array([ 0.00600535 ,  0.778414   ])
282     , -445.334    , array([ 0.00600535 ,  0.777636   ])
284     , -445.337    , array([ 0.00600535 ,  0.778414   ])
286     , -445.334    , array([ 0.00600535 ,  0.777636   ])
288     , -445.337    , array([ 0.00600535 ,  0.778414   ])
290     , -445.334    , array([ 0.00600535 ,  0.777636   ])
292     , -445.337    , array([ 0.00600535 ,  0.778414   ])
294     , -445.334    , array([ 0.00600535 ,  0.777636   ])
296     , -445.337    , array([ 0.00600535 ,  0.778414   ])
298     , -445.334    , array([ 0.00600535 ,  0.777636   ])
300     , -445.337    , array([ 0.00600535 ,  0.778414   ])
302     , -445.334    , array([ 0.00600535 ,  0.777636   ])
304     , -445.337    , array([ 0.00600535 ,  0.778414   ])
306     , -445.334    , array([ 0.00600535 ,  0.777636   ])
308     , -445.337    , array([ 0.00600535 ,  0.778414   ])
310     , -445.334    , array([ 0.00600535 ,  0.777636   ])
312     , -445.337    , array([ 0.00600535 ,  0.778414   ])
314     , -445.334    , array([ 0.00600535 ,  0.777636   ])
316     , -445.337    , array([ 0.00600535 ,  0.778414   ])
318     , -445.334    , array([ 0.00600535 ,  0.777636   ])
320     , -445.337    , array([ 0.00600535 ,  0.778414   ])
322     , -445.334    , array([ 0.00600535 ,  0.777636   ])
324     , -445.337    , array([ 0.00600535 ,  0.778414   ])
326     , -445.334    , array([ 0.00600535 ,  0.777636   ])
328     , -445.337    , array([ 0.00600535 ,  0.778414   ])
330     , -445.334    , array([ 0.00600535 ,  0.777636   ])
332     , -445.337    , array([ 0.00600535 ,  0.778414   ])
334     , -445.334    , array([ 0.00600535 ,  0.777636   ])
336     , -445.337    , array([ 0.00600535 ,  0.778414   ])
338     , -445.334    , array([ 0.00600535 ,  0.777636   ])
340     , -445.337    , array([ 0.00600535 ,  0.778414   ])
342     , -445.334    , array([ 0.00600535 ,  0.777636   ])
344     , -445.337    , array([ 0.00600535 ,  0.778414   ])
346     , -445.334    , array([ 0.00600535 ,  0.777636   ])
348     , -445.337    , array([ 0.00600535 ,  0.778414   ])
350     , -445.334    , array([ 0.00600535 ,  0.777636   ])
352     , -445.337    , array([ 0.00600535 ,  0.778414   ])
354     , -445.334    , array([ 0.00600535 ,  0.777636   ])
356     , -445.337    , array([ 0.00600535 ,  0.778414   ])
358     , -445.334    , array([ 0.00600535 ,  0.777636   ])
360     , -445.337    , array([ 0.00600535 ,  0.778414   ])
362     , -445.334    , array([ 0.00600535 ,  0.777636   ])
364     , -445.337    , array([ 0.00600535 ,  0.778414   ])
366     , -445.334    , array([ 0.00600535 ,  0.777636   ])
368     , -445.337    , array([ 0.00600535 ,  0.778414   ])
370     , -445.334    , array([ 0.00600535 ,  0.777636   ])
372     , -445.337    , array([ 0.00600535 ,  0.778414   ])
374     , -445.334    , array([ 0.00600535 ,  0.777636   ])
376     , -445.337    , array([ 0.00600535 ,  0.778414   ])
378     , -445.334    , array([ 0.00600535 ,  0.777636   ])
380     , -445.337    , array([ 0.00600535 ,  0.778414   ])
382     , -445.336    , array([ 0.0060867  ,  0.777389   ])
384     , -445.334    , array([ 0.00601164 ,  0.777617   ])
386     , -445.334    , array([ 0.00600587 ,  0.777634   ])
388     , -445.334    , array([ 0.00600539 ,  0.777636   ])
390     , -445.334    , array([ 0.00600535 ,  0.777636   ])
392     , -445.334    , array([ 0.00600535 ,  0.777636   ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 14 for model 1D.1Bottleneck.TB1gen.TRec2850gen for pop MN
Beginning optimization ************************************************
2       , -27450.4    , array([ 0.0142077  ,  0.0696654  ])
4       , -27450.4    , array([ 0.0141935  ,  0.0696654  ])
6       , -5788.92    , array([ 0.0140675  ,  0.0253745  ])
8       , -5814.71    , array([ 0.0140675  ,  0.0253999  ])
10      , -1132.63    , array([ 0.0135746  ,  0.000446597])
12      , -1132.63    , array([ 0.0135746  ,  0.000447044])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 15 for model 1D.1Bottleneck.TB1gen.TRec2850gen for pop MN
Beginning optimization ************************************************
2       , -25440.4    , array([ 0.00621524 ,  0.0567649  ])
4       , -25440.2    , array([ 0.00620903 ,  0.0567649  ])
6       , -1776.08    , array([ 0.00614794 ,  0.0206759  ])
8       , -1788.52    , array([ 0.00614794 ,  0.0206966  ])
10      , -1132.63    , array([ 0.00590956 ,  0.000363913])
12      , -1132.63    , array([ 0.00590956 ,  0.000364278])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 16 for model 1D.1Bottleneck.TB1gen.TRec2850gen for pop MN
Beginning optimization ************************************************
2       , -28111.9    , array([ 0.0131456  ,  0.0852682  ])
4       , -28111.8    , array([ 0.0131325  ,  0.0852682  ])
6       , -11973.9    , array([ 0.0112864  ,  0.0314132  ])
8       , -12004.3    , array([ 0.0112864  ,  0.0314446  ])
10      , -1132.63    , array([ 0.00615737 ,  0.000578642])
12      , -1132.63    , array([ 0.00615737 ,  0.00057922 ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 17 for model 1D.1Bottleneck.TB1gen.TRec2850gen for pop MN
Beginning optimization ************************************************
2       , -27114.9    , array([ 0.0113888  ,  0.0665184  ])
4       , -27114.8    , array([ 0.0113775  ,  0.0665184  ])
6       , -4647.75    , array([ 0.0112747  ,  0.0242283  ])
8       , -4671.06    , array([ 0.0112747  ,  0.0242525  ])
10      , -1132.63    , array([ 0.0108728  ,  0.000426426])
12      , -1132.63    , array([ 0.0108728  ,  0.000426852])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 18 for model 1D.1Bottleneck.TB1gen.TRec2850gen for pop MN
Beginning optimization ************************************************
2       , -20260.5    , array([ 0.0122343  ,  0.184917   ])
4       , -20260.5    , array([ 0.012222   ,  0.184917   ])
6       , -2277.44    , array([ 0.0122213  ,  0.507708   ])
8       , -2268.19    , array([ 0.0122213  ,  0.508216   ])
14      , -2276.05    , array([ 0.0123052  ,  0.507756   ])
16      , -2266.81    , array([ 0.0123052  ,  0.508264   ])
18      , -2258.24    , array([ 0.0134581  ,  0.508391   ])
20      , -2249.03    , array([ 0.0134581  ,  0.5089     ])
26      , -2257.92    , array([ 0.0134802  ,  0.508403   ])
28      , -2248.71    , array([ 0.0134802  ,  0.508911   ])
30      , -2253.71    , array([ 0.0137751  ,  0.508556   ])
32      , -2244.5     , array([ 0.0137751  ,  0.509065   ])
38      , -2253.63    , array([ 0.0137807  ,  0.508559   ])
40      , -2244.43    , array([ 0.0137807  ,  0.509068   ])
42      , -2252.59    , array([ 0.0138548  ,  0.508597   ])
44      , -2243.39    , array([ 0.0138548  ,  0.509106   ])
50      , -2252.57    , array([ 0.0138562  ,  0.508598   ])
52      , -2243.37    , array([ 0.0138562  ,  0.509107   ])
54      , -2252.31    , array([ 0.0138748  ,  0.508607   ])
56      , -2243.11    , array([ 0.0138748  ,  0.509116   ])
62      , -2252.3     , array([ 0.0138751  ,  0.508608   ])
64      , -2243.11    , array([ 0.0138751  ,  0.509116   ])
66      , -2252.24    , array([ 0.0138798  ,  0.50861    ])
68      , -2243.04    , array([ 0.0138798  ,  0.509119   ])
70      , -1671.42    , array([ 1.17784    ,  0.541114   ])
72      , -1663.85    , array([ 1.17784    ,  0.541655   ])
74      , -765.42     , array([ 0.136992   ,  0.636167   ])
76      , -761.692    , array([ 0.136992   ,  0.636804   ])
78      , -452.775    , array([ 0.0284665  ,  0.741834   ])
80      , -452.27     , array([ 0.0284665  ,  0.742576   ])
82      , -446.192    , array([ 0.0268248  ,  0.758992   ])
84      , -446.132    , array([ 0.0268248  ,  0.759752   ])
86      , -446.055    , array([ 0.0259645  ,  0.761493   ])
88      , -446.055    , array([ 0.0259645  ,  0.762255   ])
90      , -446.041    , array([ 0.0251722  ,  0.761795   ])
92      , -446.044    , array([ 0.0251722  ,  0.762557   ])
94      , -445.988    , array([ 0.0222373  ,  0.763001   ])
96      , -446.006    , array([ 0.0222373  ,  0.763765   ])
98      , -445.79     , array([ 0.0146032  ,  0.766325   ])
100     , -445.817    , array([ 0.0146032  ,  0.767092   ])
102     , -454.732    , array([ 0.00271584 ,  0.779765   ])
104     , -454.208    , array([ 0.00271584 ,  0.780545   ])
106     , -445.55     , array([ 0.00940443 ,  0.769818   ])
108     , -445.547    , array([ 0.00940443 ,  0.770589   ])
110     , -445.633    , array([ 0.00606561 ,  0.773316   ])
112     , -445.537    , array([ 0.00606561 ,  0.774089   ])
114     , -445.477    , array([ 0.0077761  ,  0.771333   ])
116     , -445.442    , array([ 0.0077761  ,  0.772104   ])
118     , -445.448    , array([ 0.00718516 ,  0.772468   ])
120     , -445.409    , array([ 0.00718516 ,  0.77324    ])
122     , -445.387    , array([ 0.00690408 ,  0.774097   ])
124     , -445.37     , array([ 0.00690408 ,  0.774871   ])
126     , -445.348    , array([ 0.00639556 ,  0.776145   ])
128     , -445.345    , array([ 0.00639556 ,  0.776921   ])
130     , -445.345    , array([ 0.00637079 ,  0.776329   ])
132     , -445.345    , array([ 0.00637079 ,  0.777106   ])
134     , -445.345    , array([ 0.00635635 ,  0.776366   ])
136     , -445.345    , array([ 0.00635635 ,  0.777142   ])
138     , -445.345    , array([ 0.0063597  ,  0.776357   ])
140     , -445.345    , array([ 0.0063597  ,  0.777134   ])
142     , -445.345    , array([ 0.00635636 ,  0.776366   ])
144     , -445.345    , array([ 0.00635636 ,  0.777142   ])
146     , -445.345    , array([ 0.00635635 ,  0.776366   ])
148     , -445.345    , array([ 0.00635635 ,  0.777142   ])
150     , -445.345    , array([ 0.00635635 ,  0.776366   ])
152     , -445.345    , array([ 0.00635635 ,  0.777142   ])
154     , -445.345    , array([ 0.00635635 ,  0.776366   ])
156     , -445.345    , array([ 0.00635635 ,  0.777142   ])
158     , -445.345    , array([ 0.00635635 ,  0.776366   ])
160     , -445.345    , array([ 0.00635635 ,  0.777142   ])
162     , -445.345    , array([ 0.00635635 ,  0.776366   ])
164     , -445.345    , array([ 0.00635635 ,  0.777142   ])
166     , -445.345    , array([ 0.00635635 ,  0.776366   ])
168     , -445.345    , array([ 0.00635635 ,  0.777142   ])
170     , -445.345    , array([ 0.00635635 ,  0.776366   ])
172     , -445.345    , array([ 0.00635635 ,  0.777142   ])
174     , -445.345    , array([ 0.00635635 ,  0.776366   ])
176     , -445.345    , array([ 0.00635635 ,  0.777142   ])
178     , -445.345    , array([ 0.00635635 ,  0.776366   ])
180     , -445.345    , array([ 0.00635635 ,  0.777142   ])
182     , -445.345    , array([ 0.00635635 ,  0.776366   ])
184     , -445.345    , array([ 0.00635635 ,  0.777142   ])
186     , -445.345    , array([ 0.00635635 ,  0.776366   ])
188     , -445.345    , array([ 0.00635635 ,  0.777142   ])
190     , -445.345    , array([ 0.00635635 ,  0.776366   ])
192     , -445.345    , array([ 0.00635635 ,  0.777142   ])
194     , -445.345    , array([ 0.00635635 ,  0.776366   ])
196     , -445.345    , array([ 0.00635635 ,  0.777142   ])
198     , -445.345    , array([ 0.00635635 ,  0.776366   ])
200     , -445.345    , array([ 0.00635635 ,  0.777142   ])
202     , -445.345    , array([ 0.00635635 ,  0.776366   ])
204     , -445.345    , array([ 0.00635635 ,  0.777142   ])
206     , -445.345    , array([ 0.00635635 ,  0.776366   ])
208     , -445.345    , array([ 0.00635635 ,  0.777142   ])
210     , -445.345    , array([ 0.00635635 ,  0.776366   ])
212     , -445.345    , array([ 0.00635635 ,  0.777142   ])
214     , -445.345    , array([ 0.00635635 ,  0.776366   ])
216     , -445.345    , array([ 0.00635635 ,  0.777142   ])
218     , -445.345    , array([ 0.00635635 ,  0.776366   ])
220     , -445.345    , array([ 0.00635635 ,  0.777142   ])
222     , -445.345    , array([ 0.00635635 ,  0.776366   ])
224     , -445.345    , array([ 0.00635635 ,  0.777142   ])
226     , -445.345    , array([ 0.00635635 ,  0.776366   ])
228     , -445.345    , array([ 0.00635635 ,  0.777142   ])
230     , -445.345    , array([ 0.00635635 ,  0.776366   ])
232     , -445.345    , array([ 0.00635635 ,  0.777142   ])
234     , -445.345    , array([ 0.00635635 ,  0.776366   ])
236     , -445.345    , array([ 0.00635635 ,  0.777142   ])
238     , -445.345    , array([ 0.00635635 ,  0.776366   ])
240     , -445.345    , array([ 0.00635635 ,  0.777142   ])
242     , -445.345    , array([ 0.00635635 ,  0.776366   ])
244     , -445.345    , array([ 0.00635635 ,  0.777142   ])
246     , -445.345    , array([ 0.00635635 ,  0.776366   ])
248     , -445.345    , array([ 0.00635635 ,  0.777142   ])
250     , -445.345    , array([ 0.00635635 ,  0.776366   ])
252     , -445.345    , array([ 0.00635635 ,  0.777142   ])
254     , -445.345    , array([ 0.00635635 ,  0.776366   ])
256     , -445.345    , array([ 0.00635635 ,  0.777142   ])
258     , -445.345    , array([ 0.00635635 ,  0.776366   ])
260     , -445.345    , array([ 0.00635635 ,  0.777142   ])
262     , -445.345    , array([ 0.00635635 ,  0.776366   ])
264     , -445.345    , array([ 0.00635635 ,  0.777142   ])
266     , -445.345    , array([ 0.00635635 ,  0.776366   ])
268     , -445.345    , array([ 0.00635635 ,  0.777142   ])
270     , -445.345    , array([ 0.00635635 ,  0.776366   ])
272     , -445.345    , array([ 0.00635635 ,  0.777142   ])
274     , -445.345    , array([ 0.00635635 ,  0.776366   ])
276     , -445.345    , array([ 0.00635635 ,  0.777142   ])
278     , -445.345    , array([ 0.00635635 ,  0.776366   ])
280     , -445.345    , array([ 0.00635635 ,  0.777142   ])
282     , -445.345    , array([ 0.00635635 ,  0.776366   ])
284     , -445.345    , array([ 0.00635635 ,  0.777142   ])
286     , -445.345    , array([ 0.00635635 ,  0.776366   ])
288     , -445.345    , array([ 0.00635635 ,  0.777142   ])
290     , -445.345    , array([ 0.00635635 ,  0.776366   ])
292     , -445.345    , array([ 0.00635635 ,  0.777142   ])
294     , -445.345    , array([ 0.00635635 ,  0.776366   ])
296     , -445.345    , array([ 0.00635635 ,  0.777142   ])
298     , -445.345    , array([ 0.00635635 ,  0.776366   ])
300     , -445.345    , array([ 0.00635635 ,  0.777142   ])
302     , -445.345    , array([ 0.00635635 ,  0.776366   ])
304     , -445.345    , array([ 0.00635635 ,  0.777142   ])
306     , -445.345    , array([ 0.00635635 ,  0.776366   ])
308     , -445.345    , array([ 0.00635635 ,  0.777142   ])
310     , -445.345    , array([ 0.00635635 ,  0.776366   ])
312     , -445.345    , array([ 0.00635635 ,  0.777142   ])
314     , -445.345    , array([ 0.00635635 ,  0.776366   ])
316     , -445.345    , array([ 0.00635635 ,  0.777142   ])
318     , -445.345    , array([ 0.00635635 ,  0.776366   ])
320     , -445.345    , array([ 0.00635635 ,  0.777142   ])
322     , -445.345    , array([ 0.00635635 ,  0.776366   ])
324     , -445.345    , array([ 0.00635635 ,  0.777142   ])
326     , -445.345    , array([ 0.00635635 ,  0.776366   ])
328     , -445.345    , array([ 0.00635635 ,  0.777142   ])
330     , -445.345    , array([ 0.00635635 ,  0.776366   ])
332     , -445.345    , array([ 0.00635635 ,  0.777142   ])
334     , -445.345    , array([ 0.00635635 ,  0.776366   ])
336     , -445.345    , array([ 0.00635635 ,  0.777142   ])
338     , -445.345    , array([ 0.00635635 ,  0.776366   ])
340     , -445.345    , array([ 0.00635635 ,  0.777142   ])
342     , -445.345    , array([ 0.00635635 ,  0.776366   ])
344     , -445.345    , array([ 0.00635635 ,  0.777142   ])
346     , -445.345    , array([ 0.00635635 ,  0.776366   ])
348     , -445.345    , array([ 0.00635635 ,  0.777142   ])
350     , -445.345    , array([ 0.00635635 ,  0.776366   ])
352     , -445.345    , array([ 0.00635635 ,  0.777142   ])
354     , -445.345    , array([ 0.00635635 ,  0.776366   ])
356     , -445.345    , array([ 0.00635635 ,  0.777142   ])
358     , -445.345    , array([ 0.00635635 ,  0.776366   ])
360     , -445.345    , array([ 0.00635635 ,  0.777142   ])
362     , -445.345    , array([ 0.00635635 ,  0.776366   ])
364     , -445.345    , array([ 0.00635635 ,  0.777142   ])
366     , -445.345    , array([ 0.00635635 ,  0.776366   ])
368     , -445.345    , array([ 0.00635635 ,  0.777142   ])
370     , -445.345    , array([ 0.00635635 ,  0.776366   ])
372     , -445.345    , array([ 0.00635635 ,  0.777142   ])
374     , -445.345    , array([ 0.00635635 ,  0.776366   ])
376     , -445.345    , array([ 0.00635635 ,  0.777142   ])
378     , -445.345    , array([ 0.00635635 ,  0.776366   ])
380     , -445.345    , array([ 0.00635635 ,  0.777142   ])
382     , -445.345    , array([ 0.00635635 ,  0.776366   ])
384     , -445.345    , array([ 0.00635635 ,  0.777142   ])
386     , -445.345    , array([ 0.00635802 ,  0.776361   ])
388     , -445.345    , array([ 0.00635677 ,  0.776365   ])
390     , -445.345    , array([ 0.00635646 ,  0.776365   ])
392     , -445.345    , array([ 0.00635638 ,  0.776366   ])
394     , -445.345    , array([ 0.00635636 ,  0.776366   ])
396     , -445.345    , array([ 0.00635635 ,  0.776366   ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 19 for model 1D.1Bottleneck.TB1gen.TRec2850gen for pop MN
Beginning optimization ************************************************
2       , -26527.3    , array([ 0.00682817 ,  0.120416   ])
4       , -26527.2    , array([ 0.00682134 ,  0.120416   ])
6       , -8424.32    , array([ 0.00675568 ,  0.3306     ])
8       , -8405.84    , array([ 0.00675568 ,  0.330931   ])
14      , -8415.04    , array([ 0.00675565 ,  0.330766   ])
16      , -8396.56    , array([ 0.00675565 ,  0.331097   ])
18      , -7426.25    , array([ 0.00675211 ,  0.349409   ])
20      , -7408.7     , array([ 0.00675211 ,  0.349758   ])
26      , -7424.21    , array([ 0.0067521  ,  0.349449   ])
28      , -7406.67    , array([ 0.0067521  ,  0.349799   ])
30      , -7349.86    , array([ 0.00675182 ,  0.350934   ])
32      , -7332.34    , array([ 0.00675182 ,  0.351285   ])
34      , -793.116    , array([ 0.00668786 ,  0.948177   ])
36      , -796.445    , array([ 0.00668786 ,  0.949125   ])
42      , -792.898    , array([ 0.00667539 ,  0.948169   ])
44      , -796.227    , array([ 0.00667539 ,  0.949117   ])
46      , -792.68     , array([ 0.00666294 ,  0.948161   ])
48      , -796.007    , array([ 0.00666294 ,  0.949109   ])
54      , -792.625    , array([ 0.00665982 ,  0.948159   ])
56      , -795.953    , array([ 0.00665982 ,  0.949107   ])
58      , -792.571    , array([ 0.00665671 ,  0.948157   ])
60      , -795.898    , array([ 0.00665671 ,  0.949105   ])
66      , -792.557    , array([ 0.00665593 ,  0.948156   ])
68      , -795.884    , array([ 0.00665593 ,  0.949105   ])
70      , -792.544    , array([ 0.00665515 ,  0.948156   ])
72      , -795.87     , array([ 0.00665515 ,  0.949104   ])
78      , -792.54     , array([ 0.00665496 ,  0.948156   ])
80      , -795.867    , array([ 0.00665496 ,  0.949104   ])
82      , -792.537    , array([ 0.00665476 ,  0.948155   ])
84      , -795.863    , array([ 0.00665476 ,  0.949104   ])
90      , -792.536    , array([ 0.00665472 ,  0.948155   ])
92      , -795.862    , array([ 0.00665472 ,  0.949104   ])
94      , -792.535    , array([ 0.00665467 ,  0.948155   ])
96      , -795.862    , array([ 0.00665467 ,  0.949104   ])
98      , -1127.68    , array([ 0.000311234,  0.935012   ])
100     , -1125.8     , array([ 0.000311234,  0.935948   ])
102     , -579.606    , array([ 0.00181653 ,  0.942561   ])
104     , -581.543    , array([ 0.00181653 ,  0.943504   ])
106     , -493.128    , array([ 0.00090985 ,  0.939595   ])
108     , -493.664    , array([ 0.00090985 ,  0.940535   ])
110     , -539.922    , array([ 0.0146739  ,  0.846721   ])
112     , -541.763    , array([ 0.0146739  ,  0.847568   ])
114     , -498.632    , array([ 0.00118714 ,  0.930285   ])
116     , -499.621    , array([ 0.00118714 ,  0.931216   ])
118     , -492.435    , array([ 0.000968014,  0.937418   ])
120     , -493.082    , array([ 0.000968014,  0.938356   ])
122     , -491.06     , array([ 0.000975951,  0.935077   ])
124     , -491.694    , array([ 0.000975951,  0.936013   ])
126     , -485.755    , array([ 0.00100836 ,  0.925772   ])
128     , -486.334    , array([ 0.00100836 ,  0.926698   ])
130     , -468.545    , array([ 0.00114909 ,  0.889467   ])
132     , -468.85     , array([ 0.00114909 ,  0.890357   ])
134     , -459.816    , array([ 0.00185869 ,  0.798628   ])
136     , -459.264    , array([ 0.00185869 ,  0.799428   ])
138     , -452.965    , array([ 0.00163132 ,  0.83292    ])
140     , -452.913    , array([ 0.00163132 ,  0.833753   ])
142     , -451.22     , array([ 0.00178493 ,  0.825422   ])
144     , -451.156    , array([ 0.00178493 ,  0.826248   ])
146     , -448.648    , array([ 0.00215708 ,  0.812379   ])
148     , -448.575    , array([ 0.00215708 ,  0.813192   ])
150     , -446.758    , array([ 0.00277375 ,  0.799019   ])
152     , -446.684    , array([ 0.00277375 ,  0.799819   ])
154     , -445.938    , array([ 0.00334199 ,  0.792868   ])
156     , -445.903    , array([ 0.00334199 ,  0.793661   ])
158     , -445.524    , array([ 0.00421138 ,  0.784619   ])
160     , -445.479    , array([ 0.00421138 ,  0.785404   ])
162     , -445.382    , array([ 0.00464909 ,  0.784011   ])
164     , -445.389    , array([ 0.00464909 ,  0.784795   ])
166     , -445.365    , array([ 0.00511396 ,  0.780955   ])
168     , -445.36     , array([ 0.00511396 ,  0.781736   ])
170     , -445.788    , array([ 0.00748709 ,  0.768849   ])
172     , -445.677    , array([ 0.00748709 ,  0.769618   ])
174     , -445.357    , array([ 0.00543042 ,  0.779035   ])
176     , -445.341    , array([ 0.00543042 ,  0.779815   ])
178     , -445.37     , array([ 0.00609049 ,  0.77611    ])
180     , -445.343    , array([ 0.00609049 ,  0.776887   ])
182     , -445.355    , array([ 0.00557665 ,  0.778357   ])
184     , -445.337    , array([ 0.00557665 ,  0.779136   ])
186     , -445.352    , array([ 0.00562272 ,  0.778218   ])
188     , -445.335    , array([ 0.00562272 ,  0.778997   ])
190     , -445.345    , array([ 0.00581085 ,  0.777665   ])
192     , -445.332    , array([ 0.00581085 ,  0.778443   ])
194     , -445.34     , array([ 0.00611015 ,  0.776969   ])
196     , -445.336    , array([ 0.00611015 ,  0.777747   ])
198     , -445.343    , array([ 0.00630577 ,  0.776504   ])
200     , -445.343    , array([ 0.00630577 ,  0.777281   ])
202     , -445.341    , array([ 0.00613681 ,  0.776905   ])
204     , -445.336    , array([ 0.00613681 ,  0.777682   ])
206     , -445.34     , array([ 0.00611436 ,  0.776959   ])
208     , -445.336    , array([ 0.00611436 ,  0.777736   ])
210     , -445.34     , array([ 0.00611083 ,  0.776968   ])
212     , -445.336    , array([ 0.00611083 ,  0.777745   ])
214     , -445.34     , array([ 0.00611026 ,  0.776969   ])
216     , -445.336    , array([ 0.00611026 ,  0.777746   ])
218     , -445.34     , array([ 0.00611017 ,  0.776969   ])
220     , -445.336    , array([ 0.00611017 ,  0.777747   ])
222     , -445.34     , array([ 0.00611015 ,  0.776969   ])
224     , -445.336    , array([ 0.00611015 ,  0.777747   ])
226     , -445.34     , array([ 0.00611015 ,  0.776969   ])
228     , -445.336    , array([ 0.00611015 ,  0.777747   ])
230     , -445.34     , array([ 0.00611015 ,  0.776969   ])
232     , -445.336    , array([ 0.00611015 ,  0.777747   ])
234     , -445.34     , array([ 0.00611015 ,  0.776969   ])
236     , -445.336    , array([ 0.00611015 ,  0.777747   ])
238     , -445.34     , array([ 0.00611015 ,  0.776969   ])
240     , -445.336    , array([ 0.00611015 ,  0.777747   ])
242     , -445.34     , array([ 0.00611015 ,  0.776969   ])
244     , -445.336    , array([ 0.00611015 ,  0.777747   ])
246     , -445.34     , array([ 0.00611015 ,  0.776969   ])
248     , -445.336    , array([ 0.00611015 ,  0.777747   ])
250     , -445.34     , array([ 0.00611015 ,  0.776969   ])
252     , -445.336    , array([ 0.00611015 ,  0.777747   ])
254     , -445.34     , array([ 0.00611015 ,  0.776969   ])
256     , -445.336    , array([ 0.00611015 ,  0.777747   ])
258     , -445.34     , array([ 0.00611015 ,  0.776969   ])
260     , -445.336    , array([ 0.00611015 ,  0.777747   ])
262     , -445.34     , array([ 0.00611015 ,  0.776969   ])
264     , -445.336    , array([ 0.00611015 ,  0.777747   ])
266     , -445.34     , array([ 0.00611015 ,  0.776969   ])
268     , -445.336    , array([ 0.00611015 ,  0.777747   ])
270     , -445.34     , array([ 0.00611015 ,  0.776969   ])
272     , -445.336    , array([ 0.00611015 ,  0.777747   ])
274     , -445.34     , array([ 0.00611015 ,  0.776969   ])
276     , -445.336    , array([ 0.00611015 ,  0.777747   ])
278     , -445.34     , array([ 0.00611015 ,  0.776969   ])
280     , -445.336    , array([ 0.00611015 ,  0.777747   ])
282     , -445.34     , array([ 0.00611015 ,  0.776969   ])
284     , -445.336    , array([ 0.00611015 ,  0.777747   ])
286     , -445.34     , array([ 0.00611015 ,  0.776969   ])
288     , -445.336    , array([ 0.00611015 ,  0.777747   ])
290     , -445.34     , array([ 0.00611015 ,  0.776969   ])
292     , -445.336    , array([ 0.00611015 ,  0.777747   ])
294     , -445.34     , array([ 0.00611015 ,  0.776969   ])
296     , -445.336    , array([ 0.00611015 ,  0.777747   ])
298     , -445.34     , array([ 0.00611015 ,  0.776969   ])
300     , -445.336    , array([ 0.00611015 ,  0.777747   ])
302     , -445.34     , array([ 0.00611015 ,  0.776969   ])
304     , -445.336    , array([ 0.00611015 ,  0.777747   ])
306     , -445.34     , array([ 0.00611015 ,  0.776969   ])
308     , -445.336    , array([ 0.00611015 ,  0.777747   ])
310     , -445.34     , array([ 0.00611015 ,  0.776969   ])
312     , -445.336    , array([ 0.00611015 ,  0.777747   ])
314     , -445.34     , array([ 0.00611015 ,  0.776969   ])
316     , -445.336    , array([ 0.00611015 ,  0.777747   ])
318     , -445.34     , array([ 0.00611015 ,  0.776969   ])
320     , -445.336    , array([ 0.00611015 ,  0.777747   ])
322     , -445.34     , array([ 0.00611015 ,  0.776969   ])
324     , -445.336    , array([ 0.00611015 ,  0.777747   ])
326     , -445.34     , array([ 0.00611015 ,  0.776969   ])
328     , -445.336    , array([ 0.00611015 ,  0.777747   ])
330     , -445.34     , array([ 0.00611015 ,  0.776969   ])
332     , -445.336    , array([ 0.00611015 ,  0.777747   ])
334     , -445.34     , array([ 0.00611015 ,  0.776969   ])
336     , -445.336    , array([ 0.00611015 ,  0.777747   ])
338     , -445.34     , array([ 0.00611015 ,  0.776969   ])
340     , -445.336    , array([ 0.00611015 ,  0.777747   ])
342     , -445.34     , array([ 0.00611015 ,  0.776969   ])
344     , -445.336    , array([ 0.00611015 ,  0.777747   ])
346     , -445.34     , array([ 0.00611015 ,  0.776969   ])
348     , -445.336    , array([ 0.00611015 ,  0.777747   ])
350     , -445.34     , array([ 0.00611015 ,  0.776969   ])
352     , -445.336    , array([ 0.00611015 ,  0.777747   ])
354     , -445.34     , array([ 0.00611015 ,  0.776969   ])
356     , -445.336    , array([ 0.00611015 ,  0.777747   ])
358     , -445.34     , array([ 0.00611015 ,  0.776969   ])
360     , -445.336    , array([ 0.00611015 ,  0.777747   ])
362     , -445.34     , array([ 0.00611015 ,  0.776969   ])
364     , -445.336    , array([ 0.00611015 ,  0.777747   ])
366     , -445.34     , array([ 0.00611015 ,  0.776969   ])
368     , -445.336    , array([ 0.00611015 ,  0.777747   ])
370     , -445.34     , array([ 0.00611015 ,  0.776969   ])
372     , -445.336    , array([ 0.00611015 ,  0.777747   ])
374     , -445.34     , array([ 0.00611015 ,  0.776969   ])
376     , -445.336    , array([ 0.00611015 ,  0.777747   ])
378     , -445.34     , array([ 0.00611015 ,  0.776969   ])
380     , -445.336    , array([ 0.00611015 ,  0.777747   ])
382     , -445.34     , array([ 0.00611015 ,  0.776969   ])
384     , -445.336    , array([ 0.00611015 ,  0.777747   ])
386     , -445.34     , array([ 0.00611015 ,  0.776969   ])
388     , -445.336    , array([ 0.00611015 ,  0.777747   ])
390     , -445.341    , array([ 0.00616871 ,  0.776829   ])
392     , -445.34     , array([ 0.00611656 ,  0.776954   ])
394     , -445.34     , array([ 0.00611092 ,  0.776967   ])
396     , -445.34     , array([ 0.00611024 ,  0.776969   ])
398     , -445.34     , array([ 0.00611016 ,  0.776969   ])
400     , -445.34     , array([ 0.00611015 ,  0.776969   ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 20 for model 1D.1Bottleneck.TB1gen.TRec2850gen for pop MN
Beginning optimization ************************************************
2       , -27819.1    , array([ 0.0146067  ,  0.100052   ])
4       , -27819.1    , array([ 0.0145921  ,  0.100052   ])
6       , -12025.4    , array([ 0.0144187  ,  0.274683   ])
8       , -12004.6    , array([ 0.0144187  ,  0.274958   ])
14      , -12013.7    , array([ 0.0144186  ,  0.274838   ])
16      , -11992.9    , array([ 0.0144186  ,  0.275113   ])
18      , -11911.2    , array([ 0.0144178  ,  0.276198   ])
20      , -11890.4    , array([ 0.0144178  ,  0.276475   ])
26      , -11908.3    , array([ 0.0144178  ,  0.276237   ])
28      , -11887.5    , array([ 0.0144178  ,  0.276514   ])
30      , -11905.4    , array([ 0.0144177  ,  0.276276   ])
32      , -11884.6    , array([ 0.0144177  ,  0.276553   ])
34      , -446.964    , array([ 0.0142467  ,  0.757341   ])
36      , -446.759    , array([ 0.0142467  ,  0.758099   ])
38      , -698.123    , array([ 1.33092    ,  0.892606   ])
40      , -701.088    , array([ 1.33092    ,  0.893499   ])
42      , -445.939    , array([ 0.018832   ,  0.765034   ])
44      , -445.982    , array([ 0.018832   ,  0.7658     ])
46      , -445.811    , array([ 0.015336   ,  0.764702   ])
48      , -445.808    , array([ 0.015336   ,  0.765467   ])
50      , -445.788    , array([ 0.00881572 ,  0.766989   ])
52      , -445.693    , array([ 0.00881572 ,  0.767756   ])
54      , -445.74     , array([ 0.012679   ,  0.765487   ])
56      , -445.714    , array([ 0.012679   ,  0.766253   ])
58      , -445.668    , array([ 0.00828441 ,  0.768539   ])
60      , -445.589    , array([ 0.00828441 ,  0.769308   ])
62      , -445.681    , array([ 0.0104736  ,  0.766856   ])
64      , -445.639    , array([ 0.0104736  ,  0.767623   ])
66      , -445.581    , array([ 0.00891737 ,  0.768936   ])
68      , -445.538    , array([ 0.00891737 ,  0.769705   ])
70      , -446.023    , array([ 0.00468599 ,  0.77731    ])
72      , -445.879    , array([ 0.00468599 ,  0.778088   ])
74      , -445.506    , array([ 0.0073768  ,  0.771395   ])
76      , -445.451    , array([ 0.0073768  ,  0.772167   ])
78      , -445.371    , array([ 0.00674018 ,  0.774764   ])
80      , -445.36     , array([ 0.00674018 ,  0.775539   ])
82      , -445.344    , array([ 0.00621025 ,  0.776563   ])
84      , -445.338    , array([ 0.00621025 ,  0.77734    ])
86      , -445.346    , array([ 0.0064545  ,  0.776474   ])
88      , -445.356    , array([ 0.0064545  ,  0.777251   ])
90      , -445.343    , array([ 0.00630131 ,  0.776529   ])
92      , -445.343    , array([ 0.00630131 ,  0.777306   ])
94      , -445.345    , array([ 0.0063571  ,  0.776362   ])
96      , -445.345    , array([ 0.0063571  ,  0.777139   ])
98      , -445.343    , array([ 0.00630227 ,  0.776527   ])
100     , -445.343    , array([ 0.00630227 ,  0.777303   ])
102     , -445.343    , array([ 0.00630132 ,  0.776529   ])
104     , -445.343    , array([ 0.00630132 ,  0.777306   ])
106     , -445.343    , array([ 0.00630131 ,  0.776529   ])
108     , -445.343    , array([ 0.00630131 ,  0.777306   ])
110     , -445.343    , array([ 0.00630131 ,  0.776529   ])
112     , -445.343    , array([ 0.00630131 ,  0.777306   ])
114     , -445.343    , array([ 0.00630131 ,  0.776529   ])
116     , -445.343    , array([ 0.00630131 ,  0.777306   ])
118     , -445.343    , array([ 0.00630131 ,  0.776529   ])
120     , -445.343    , array([ 0.00630131 ,  0.777306   ])
122     , -445.343    , array([ 0.00630131 ,  0.776529   ])
124     , -445.343    , array([ 0.00630131 ,  0.777306   ])
126     , -445.343    , array([ 0.00630131 ,  0.776529   ])
128     , -445.343    , array([ 0.00630131 ,  0.777306   ])
130     , -445.343    , array([ 0.00630131 ,  0.776529   ])
132     , -445.343    , array([ 0.00630131 ,  0.777306   ])
134     , -445.343    , array([ 0.00630131 ,  0.776529   ])
136     , -445.343    , array([ 0.00630131 ,  0.777306   ])
138     , -445.343    , array([ 0.00630131 ,  0.776529   ])
140     , -445.343    , array([ 0.00630131 ,  0.777306   ])
142     , -445.343    , array([ 0.00630131 ,  0.776529   ])
144     , -445.343    , array([ 0.00630131 ,  0.777306   ])
146     , -445.343    , array([ 0.00630131 ,  0.776529   ])
148     , -445.343    , array([ 0.00630131 ,  0.777306   ])
150     , -445.343    , array([ 0.00630131 ,  0.776529   ])
152     , -445.343    , array([ 0.00630131 ,  0.777306   ])
154     , -445.343    , array([ 0.00630131 ,  0.776529   ])
156     , -445.343    , array([ 0.00630131 ,  0.777306   ])
158     , -445.343    , array([ 0.00630131 ,  0.776529   ])
160     , -445.343    , array([ 0.00630131 ,  0.777306   ])
162     , -445.343    , array([ 0.00630131 ,  0.776529   ])
164     , -445.343    , array([ 0.00630131 ,  0.777306   ])
166     , -445.343    , array([ 0.00630131 ,  0.776529   ])
168     , -445.343    , array([ 0.00630131 ,  0.777306   ])
170     , -445.343    , array([ 0.00630131 ,  0.776529   ])
172     , -445.343    , array([ 0.00630131 ,  0.777306   ])
174     , -445.343    , array([ 0.00630131 ,  0.776529   ])
176     , -445.343    , array([ 0.00630131 ,  0.777306   ])
178     , -445.343    , array([ 0.00630131 ,  0.776529   ])
180     , -445.343    , array([ 0.00630131 ,  0.777306   ])
182     , -445.343    , array([ 0.00630131 ,  0.776529   ])
184     , -445.343    , array([ 0.00630131 ,  0.777306   ])
186     , -445.343    , array([ 0.00630131 ,  0.776529   ])
188     , -445.343    , array([ 0.00630131 ,  0.777306   ])
190     , -445.343    , array([ 0.00630131 ,  0.776529   ])
192     , -445.343    , array([ 0.00630131 ,  0.777306   ])
194     , -445.343    , array([ 0.00630131 ,  0.776529   ])
196     , -445.343    , array([ 0.00630131 ,  0.777306   ])
198     , -445.343    , array([ 0.00630131 ,  0.776529   ])
200     , -445.343    , array([ 0.00630131 ,  0.777306   ])
202     , -445.343    , array([ 0.00630131 ,  0.776529   ])
204     , -445.343    , array([ 0.00630131 ,  0.777306   ])
206     , -445.343    , array([ 0.00630131 ,  0.776529   ])
208     , -445.343    , array([ 0.00630131 ,  0.777306   ])
210     , -445.343    , array([ 0.00630131 ,  0.776529   ])
212     , -445.343    , array([ 0.00630131 ,  0.777306   ])
214     , -445.343    , array([ 0.00630131 ,  0.776529   ])
216     , -445.343    , array([ 0.00630131 ,  0.777306   ])
218     , -445.343    , array([ 0.00630131 ,  0.776529   ])
220     , -445.343    , array([ 0.00630131 ,  0.777306   ])
222     , -445.343    , array([ 0.00630131 ,  0.776529   ])
224     , -445.343    , array([ 0.00630131 ,  0.777306   ])
226     , -445.343    , array([ 0.00630131 ,  0.776529   ])
228     , -445.343    , array([ 0.00630131 ,  0.777306   ])
230     , -445.343    , array([ 0.00630131 ,  0.776529   ])
232     , -445.343    , array([ 0.00630131 ,  0.777306   ])
234     , -445.343    , array([ 0.00630131 ,  0.776529   ])
236     , -445.343    , array([ 0.00630131 ,  0.777306   ])
238     , -445.344    , array([ 0.00632914 ,  0.776446   ])
240     , -445.343    , array([ 0.00630825 ,  0.776509   ])
242     , -445.343    , array([ 0.00630304 ,  0.776524   ])
244     , -445.343    , array([ 0.00630174 ,  0.776528   ])
246     , -445.343    , array([ 0.00630141 ,  0.776529   ])
248     , -445.343    , array([ 0.00630133 ,  0.776529   ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 21 for model 1D.1Bottleneck.TB1gen.TRec2850gen for pop MN
Beginning optimization ************************************************
2       , -26757.4    , array([ 0.00953203 ,  0.063823   ])
4       , -26757.3    , array([ 0.0095225  ,  0.063823   ])
6       , -3732.52    , array([ 0.00943444 ,  0.0232465  ])
8       , -3753.24    , array([ 0.00943444 ,  0.0232698  ])
10      , -1132.63    , array([ 0.00909027 ,  0.00040915 ])
12      , -1132.63    , array([ 0.00909027 ,  0.000409559])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 22 for model 1D.1Bottleneck.TB1gen.TRec2850gen for pop MN
Beginning optimization ************************************************
2       , -27122.4    , array([ 0.0139416  ,  0.11278    ])
4       , -27122.3    , array([ 0.0139277  ,  0.11278    ])
6       , -9601.45    , array([ 0.0138403  ,  0.309643   ])
8       , -9581.95    , array([ 0.0138403  ,  0.309952   ])
14      , -9591.11    , array([ 0.0138403  ,  0.309807   ])
16      , -9571.6     , array([ 0.0138403  ,  0.310117   ])
18      , -9580.77    , array([ 0.0138402  ,  0.309971   ])
20      , -9561.26    , array([ 0.0138402  ,  0.310281   ])
26      , -9578.18    , array([ 0.0138402  ,  0.310012   ])
28      , -9558.67    , array([ 0.0138402  ,  0.310322   ])
30      , -9575.6     , array([ 0.0138402  ,  0.310053   ])
32      , -9556.09    , array([ 0.0138402  ,  0.310364   ])
34      , -547.597    , array([ 0.0137534  ,  0.850928   ])
36      , -549.508    , array([ 0.0137534  ,  0.851779   ])
42      , -547.593    , array([ 0.0137523  ,  0.850926   ])
44      , -549.503    , array([ 0.0137523  ,  0.851778   ])
46      , -547.588    , array([ 0.0137511  ,  0.850925   ])
48      , -549.499    , array([ 0.0137511  ,  0.851777   ])
54      , -547.587    , array([ 0.0137508  ,  0.850925   ])
56      , -549.497    , array([ 0.0137508  ,  0.851776   ])
58      , -547.586    , array([ 0.0137506  ,  0.850925   ])
60      , -549.496    , array([ 0.0137506  ,  0.851776   ])
66      , -547.585    , array([ 0.0137505  ,  0.850925   ])
68      , -549.496    , array([ 0.0137505  ,  0.851776   ])
70      , -547.585    , array([ 0.0137504  ,  0.850925   ])
72      , -549.496    , array([ 0.0137504  ,  0.851776   ])
74      , -1469.55    , array([ 0.000327302,  0.80162    ])
76      , -1466       , array([ 0.000327302,  0.802422   ])
78      , -480.272    , array([ 0.00449008 ,  0.835852   ])
80      , -481.379    , array([ 0.00449008 ,  0.836688   ])
82      , -451.774    , array([ 0.00176394 ,  0.823474   ])
84      , -451.654    , array([ 0.00176394 ,  0.824298   ])
86      , -482.085    , array([ 1.10875    ,  0.713422   ])
88      , -480.885    , array([ 1.10875    ,  0.714136   ])
90      , -450.589    , array([ 0.0197507  ,  0.780355   ])
92      , -451.021    , array([ 0.0197507  ,  0.781136   ])
94      , -448.531    , array([ 0.0235301  ,  0.774782   ])
96      , -448.852    , array([ 0.0235301  ,  0.775557   ])
98      , -446.219    , array([ 0.0367546  ,  0.762041   ])
100     , -446.269    , array([ 0.0367546  ,  0.762804   ])
102     , -446.201    , array([ 0.0394833  ,  0.759913   ])
104     , -446.202    , array([ 0.0394833  ,  0.760673   ])
106     , -446.194    , array([ 0.0387593  ,  0.760214   ])
108     , -446.201    , array([ 0.0387593  ,  0.760975   ])
110     , -446.181    , array([ 0.0370398  ,  0.760676   ])
112     , -446.196    , array([ 0.0370398  ,  0.761437   ])
114     , -446.142    , array([ 0.0320142  ,  0.761787   ])
116     , -446.173    , array([ 0.0320142  ,  0.762549   ])
118     , -446.006    , array([ 0.0210042  ,  0.764672   ])
120     , -446.058    , array([ 0.0210042  ,  0.765437   ])
122     , -448.087    , array([ 0.00389188 ,  0.776321   ])
124     , -447.792    , array([ 0.00389188 ,  0.777097   ])
126     , -445.694    , array([ 0.0119379  ,  0.768556   ])
128     , -445.73     , array([ 0.0119379  ,  0.769325   ])
130     , -445.476    , array([ 0.00718756 ,  0.772061   ])
132     , -445.427    , array([ 0.00718756 ,  0.772834   ])
134     , -445.516    , array([ 0.00896288 ,  0.770534   ])
136     , -445.515    , array([ 0.00896288 ,  0.771305   ])
138     , -445.466    , array([ 0.00762974 ,  0.771648   ])
140     , -445.432    , array([ 0.00762974 ,  0.77242    ])
142     , -445.7      , array([ 0.01198    ,  0.768617   ])
144     , -445.738    , array([ 0.01198    ,  0.769386   ])
146     , -445.466    , array([ 0.0077807  ,  0.771516   ])
148     , -445.437    , array([ 0.0077807  ,  0.772288   ])
150     , -445.466    , array([ 0.00766211 ,  0.771619   ])
152     , -445.433    , array([ 0.00766211 ,  0.772391   ])
154     , -445.466    , array([ 0.00766223 ,  0.771622   ])
156     , -445.432    , array([ 0.00766223 ,  0.772394   ])
158     , -445.465    , array([ 0.0076627  ,  0.771631   ])
160     , -445.432    , array([ 0.0076627  ,  0.772403   ])
162     , -445.463    , array([ 0.00766458 ,  0.771666   ])
164     , -445.431    , array([ 0.00766458 ,  0.772438   ])
166     , -445.456    , array([ 0.00767212 ,  0.771809   ])
168     , -445.427    , array([ 0.00767212 ,  0.772582   ])
170     , -445.429    , array([ 0.00750924 ,  0.772531   ])
172     , -445.409    , array([ 0.00750924 ,  0.773304   ])
174     , -445.363    , array([ 0.00675343 ,  0.775164   ])
176     , -445.362    , array([ 0.00675343 ,  0.77594    ])
178     , -445.345    , array([ 0.00636785 ,  0.776333   ])
180     , -445.345    , array([ 0.00636785 ,  0.77711    ])
182     , -445.345    , array([ 0.00635891 ,  0.776359   ])
184     , -445.345    , array([ 0.00635891 ,  0.777136   ])
186     , -445.345    , array([ 0.00635968 ,  0.776357   ])
188     , -445.345    , array([ 0.00635968 ,  0.777134   ])
190     , -445.345    , array([ 0.00635891 ,  0.776359   ])
192     , -445.345    , array([ 0.00635891 ,  0.777136   ])
194     , -445.345    , array([ 0.00635891 ,  0.776359   ])
196     , -445.345    , array([ 0.00635891 ,  0.777136   ])
198     , -445.345    , array([ 0.00635891 ,  0.776359   ])
200     , -445.345    , array([ 0.00635891 ,  0.777136   ])
202     , -445.345    , array([ 0.00635891 ,  0.776359   ])
204     , -445.345    , array([ 0.00635891 ,  0.777136   ])
206     , -445.345    , array([ 0.00635891 ,  0.776359   ])
208     , -445.345    , array([ 0.00635891 ,  0.777136   ])
210     , -445.345    , array([ 0.00635891 ,  0.776359   ])
212     , -445.345    , array([ 0.00635891 ,  0.777136   ])
214     , -445.345    , array([ 0.00635891 ,  0.776359   ])
216     , -445.345    , array([ 0.00635891 ,  0.777136   ])
218     , -445.345    , array([ 0.00635891 ,  0.776359   ])
220     , -445.345    , array([ 0.00635891 ,  0.777136   ])
222     , -445.345    , array([ 0.00635891 ,  0.776359   ])
224     , -445.345    , array([ 0.00635891 ,  0.777136   ])
226     , -445.345    , array([ 0.00635891 ,  0.776359   ])
228     , -445.345    , array([ 0.00635891 ,  0.777136   ])
230     , -445.345    , array([ 0.00635891 ,  0.776359   ])
232     , -445.345    , array([ 0.00635891 ,  0.777136   ])
234     , -445.345    , array([ 0.00635891 ,  0.776359   ])
236     , -445.345    , array([ 0.00635891 ,  0.777136   ])
238     , -445.345    , array([ 0.00635891 ,  0.776359   ])
240     , -445.345    , array([ 0.00635891 ,  0.777136   ])
242     , -445.345    , array([ 0.00635891 ,  0.776359   ])
244     , -445.345    , array([ 0.00635891 ,  0.777136   ])
246     , -445.345    , array([ 0.00635891 ,  0.776359   ])
248     , -445.345    , array([ 0.00635891 ,  0.777136   ])
250     , -445.345    , array([ 0.00635891 ,  0.776359   ])
252     , -445.345    , array([ 0.00635891 ,  0.777136   ])
254     , -445.345    , array([ 0.00635891 ,  0.776359   ])
256     , -445.345    , array([ 0.00635891 ,  0.777136   ])
258     , -445.345    , array([ 0.00635891 ,  0.776359   ])
260     , -445.345    , array([ 0.00635891 ,  0.777136   ])
262     , -445.345    , array([ 0.00635891 ,  0.776359   ])
264     , -445.345    , array([ 0.00635891 ,  0.777136   ])
266     , -445.345    , array([ 0.00635891 ,  0.776359   ])
268     , -445.345    , array([ 0.00635891 ,  0.777136   ])
270     , -445.345    , array([ 0.00635891 ,  0.776359   ])
272     , -445.345    , array([ 0.00635891 ,  0.777136   ])
274     , -445.345    , array([ 0.00635891 ,  0.776359   ])
276     , -445.345    , array([ 0.00635891 ,  0.777136   ])
278     , -445.345    , array([ 0.00635891 ,  0.776359   ])
280     , -445.345    , array([ 0.00635891 ,  0.777136   ])
282     , -445.345    , array([ 0.00635891 ,  0.776359   ])
284     , -445.345    , array([ 0.00635891 ,  0.777136   ])
286     , -445.345    , array([ 0.00635891 ,  0.776359   ])
288     , -445.345    , array([ 0.00635891 ,  0.777136   ])
290     , -445.345    , array([ 0.00635891 ,  0.776359   ])
292     , -445.345    , array([ 0.00635891 ,  0.777136   ])
294     , -445.345    , array([ 0.00635891 ,  0.776359   ])
296     , -445.345    , array([ 0.00635891 ,  0.777136   ])
298     , -445.345    , array([ 0.00635891 ,  0.776359   ])
300     , -445.345    , array([ 0.00635891 ,  0.777136   ])
302     , -445.345    , array([ 0.00635891 ,  0.776359   ])
304     , -445.345    , array([ 0.00635891 ,  0.777136   ])
306     , -445.345    , array([ 0.00635891 ,  0.776359   ])
308     , -445.345    , array([ 0.00635891 ,  0.777136   ])
310     , -445.345    , array([ 0.00635891 ,  0.776359   ])
312     , -445.345    , array([ 0.00635891 ,  0.777136   ])
314     , -445.345    , array([ 0.00635891 ,  0.776359   ])
316     , -445.345    , array([ 0.00635891 ,  0.777136   ])
318     , -445.345    , array([ 0.00635891 ,  0.776359   ])
320     , -445.345    , array([ 0.00635891 ,  0.777136   ])
322     , -445.345    , array([ 0.00635891 ,  0.776359   ])
324     , -445.345    , array([ 0.00635891 ,  0.777136   ])
326     , -445.345    , array([ 0.00635891 ,  0.776359   ])
328     , -445.345    , array([ 0.00635891 ,  0.777136   ])
330     , -445.345    , array([ 0.00635891 ,  0.776359   ])
332     , -445.345    , array([ 0.00635891 ,  0.777136   ])
334     , -445.345    , array([ 0.00635891 ,  0.776359   ])
336     , -445.345    , array([ 0.00635891 ,  0.777136   ])
338     , -445.345    , array([ 0.00635891 ,  0.776359   ])
340     , -445.345    , array([ 0.00635891 ,  0.777136   ])
342     , -445.345    , array([ 0.00635891 ,  0.776359   ])
344     , -445.345    , array([ 0.00635891 ,  0.777136   ])
346     , -445.345    , array([ 0.00635891 ,  0.776359   ])
348     , -445.345    , array([ 0.00635891 ,  0.777136   ])
350     , -445.345    , array([ 0.00635891 ,  0.776359   ])
352     , -445.345    , array([ 0.00635891 ,  0.777136   ])
354     , -445.345    , array([ 0.00635891 ,  0.776359   ])
356     , -445.345    , array([ 0.00635891 ,  0.777136   ])
358     , -445.345    , array([ 0.00635891 ,  0.776359   ])
360     , -445.345    , array([ 0.00635891 ,  0.777136   ])
362     , -445.345    , array([ 0.00635891 ,  0.776359   ])
364     , -445.345    , array([ 0.00635891 ,  0.777136   ])
366     , -445.345    , array([ 0.00635891 ,  0.776359   ])
368     , -445.345    , array([ 0.00635891 ,  0.777136   ])
370     , -445.345    , array([ 0.00635891 ,  0.776359   ])
372     , -445.345    , array([ 0.00635891 ,  0.777136   ])
374     , -445.345    , array([ 0.00635891 ,  0.776359   ])
376     , -445.345    , array([ 0.00635891 ,  0.777136   ])
378     , -445.345    , array([ 0.00635891 ,  0.776359   ])
380     , -445.345    , array([ 0.00635891 ,  0.777136   ])
382     , -445.345    , array([ 0.00635891 ,  0.776359   ])
384     , -445.345    , array([ 0.00635891 ,  0.777136   ])
386     , -445.345    , array([ 0.00635891 ,  0.776359   ])
388     , -445.345    , array([ 0.00635891 ,  0.777136   ])
390     , -445.345    , array([ 0.00635891 ,  0.776359   ])
392     , -445.345    , array([ 0.00635891 ,  0.777136   ])
394     , -445.345    , array([ 0.00635891 ,  0.776359   ])
396     , -445.345    , array([ 0.00635891 ,  0.777136   ])
398     , -445.345    , array([ 0.00635891 ,  0.776359   ])
400     , -445.345    , array([ 0.00635891 ,  0.777136   ])
402     , -445.345    , array([ 0.00635891 ,  0.776359   ])
404     , -445.345    , array([ 0.00635891 ,  0.777136   ])
406     , -445.345    , array([ 0.00635891 ,  0.776359   ])
408     , -445.345    , array([ 0.00635891 ,  0.777136   ])
410     , -445.345    , array([ 0.00635891 ,  0.776359   ])
412     , -445.345    , array([ 0.00635891 ,  0.777136   ])
414     , -445.345    , array([ 0.00635891 ,  0.776359   ])
416     , -445.345    , array([ 0.00635891 ,  0.777136   ])
418     , -445.345    , array([ 0.00635891 ,  0.776359   ])
420     , -445.345    , array([ 0.00635891 ,  0.777136   ])
422     , -445.345    , array([ 0.00635891 ,  0.776359   ])
424     , -445.345    , array([ 0.00635891 ,  0.777136   ])
426     , -445.345    , array([ 0.00635891 ,  0.776359   ])
428     , -445.345    , array([ 0.00635891 ,  0.777136   ])
430     , -445.345    , array([ 0.0063593  ,  0.776358   ])
432     , -445.345    , array([ 0.00635901 ,  0.776359   ])
434     , -445.345    , array([ 0.00635894 ,  0.776359   ])
436     , -445.345    , array([ 0.00635892 ,  0.776359   ])
438     , -445.345    , array([ 0.00635891 ,  0.776359   ])
440     , -445.345    , array([ 0.00635891 ,  0.776359   ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 23 for model 1D.1Bottleneck.TB1gen.TRec2850gen for pop MN
Beginning optimization ************************************************
2       , -26987.9    , array([ 0.0107499  ,  0.0654936  ])
4       , -26987.8    , array([ 0.0107392  ,  0.0654936  ])
6       , -4291.98    , array([ 0.0106427  ,  0.023855   ])
8       , -4314.35    , array([ 0.0106427  ,  0.0238789  ])
10      , -1132.63    , array([ 0.0102651  ,  0.000419855])
12      , -1132.63    , array([ 0.0102651  ,  0.000420275])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 24 for model 1D.1Bottleneck.TB1gen.TRec2850gen for pop MN
Beginning optimization ************************************************
2       , -23642.8    , array([ 0.0151515  ,  0.0500993  ])
4       , -23642.8    , array([ 0.0151363  ,  0.0500993  ])
6       , -751.133    , array([ 0.0150911  ,  0.0182472  ])
8       , -755.665    , array([ 0.0150911  ,  0.0182654  ])
14      , -751.127    , array([ 0.0150918  ,  0.0182472  ])
16      , -755.66     , array([ 0.0150918  ,  0.0182654  ])
18      , -527.7      , array([ 1.56252    ,  0.015969   ])
20      , -527.265    , array([ 1.56252    ,  0.015985   ])
22      , -523.983    , array([ 0.838049   ,  0.0161621  ])
24      , -523.827    , array([ 0.838049   ,  0.0161782  ])
26      , -523.419    , array([ 0.593246   ,  0.0162705  ])
28      , -523.433    , array([ 0.593246   ,  0.0162867  ])
30      , -523.422    , array([ 0.610174   ,  0.0162616  ])
32      , -523.422    , array([ 0.610174   ,  0.0162779  ])
34      , -523.419    , array([ 0.596172   ,  0.0162689  ])
36      , -523.43     , array([ 0.596172   ,  0.0162852  ])
38      , -523.419    , array([ 0.593874   ,  0.0162701  ])
40      , -523.432    , array([ 0.593874   ,  0.0162864  ])
42      , -523.419    , array([ 0.59539    ,  0.0162693  ])
44      , -523.431    , array([ 0.59539    ,  0.0162856  ])
46      , -523.419    , array([ 0.594191   ,  0.01627    ])
48      , -523.432    , array([ 0.594191   ,  0.0162862  ])
50      , -523.419    , array([ 0.594982   ,  0.0162695  ])
52      , -523.431    , array([ 0.594982   ,  0.0162858  ])
54      , -523.419    , array([ 0.594354   ,  0.0162699  ])
56      , -523.432    , array([ 0.594354   ,  0.0162861  ])
58      , -523.419    , array([ 0.594225   ,  0.0162699  ])
60      , -523.432    , array([ 0.594225   ,  0.0162862  ])
62      , -523.419    , array([ 0.594198   ,  0.01627    ])
64      , -523.432    , array([ 0.594198   ,  0.0162862  ])
66      , -523.419    , array([ 0.594192   ,  0.01627    ])
68      , -523.432    , array([ 0.594192   ,  0.0162862  ])
70      , -523.419    , array([ 0.594191   ,  0.01627    ])
72      , -523.432    , array([ 0.594191   ,  0.0162862  ])
74      , -523.419    , array([ 0.594191   ,  0.01627    ])
76      , -523.432    , array([ 0.594191   ,  0.0162862  ])
78      , -523.419    , array([ 0.594191   ,  0.01627    ])
80      , -523.432    , array([ 0.594191   ,  0.0162862  ])
82      , -523.419    , array([ 0.594191   ,  0.01627    ])
84      , -523.432    , array([ 0.594191   ,  0.0162862  ])
86      , -523.419    , array([ 0.594191   ,  0.01627    ])
88      , -523.432    , array([ 0.594191   ,  0.0162862  ])
90      , -523.419    , array([ 0.594191   ,  0.01627    ])
92      , -523.432    , array([ 0.594191   ,  0.0162862  ])
94      , -523.419    , array([ 0.594191   ,  0.01627    ])
96      , -523.432    , array([ 0.594191   ,  0.0162862  ])
98      , -523.419    , array([ 0.594191   ,  0.01627    ])
100     , -523.432    , array([ 0.594191   ,  0.0162862  ])
102     , -523.419    , array([ 0.594191   ,  0.01627    ])
104     , -523.432    , array([ 0.594191   ,  0.0162862  ])
106     , -523.419    , array([ 0.594191   ,  0.01627    ])
108     , -523.432    , array([ 0.594191   ,  0.0162862  ])
110     , -523.419    , array([ 0.594191   ,  0.01627    ])
112     , -523.432    , array([ 0.594191   ,  0.0162862  ])
114     , -523.419    , array([ 0.594191   ,  0.01627    ])
116     , -523.432    , array([ 0.594191   ,  0.0162862  ])
118     , -523.419    , array([ 0.594191   ,  0.01627    ])
120     , -523.432    , array([ 0.594191   ,  0.0162862  ])
122     , -523.419    , array([ 0.594191   ,  0.01627    ])
124     , -523.432    , array([ 0.594191   ,  0.0162862  ])
126     , -523.419    , array([ 0.594191   ,  0.01627    ])
128     , -523.432    , array([ 0.594191   ,  0.0162862  ])
130     , -523.419    , array([ 0.594191   ,  0.01627    ])
132     , -523.432    , array([ 0.594191   ,  0.0162862  ])
134     , -523.419    , array([ 0.594191   ,  0.01627    ])
136     , -523.432    , array([ 0.594191   ,  0.0162862  ])
138     , -523.419    , array([ 0.594191   ,  0.01627    ])
140     , -523.432    , array([ 0.594191   ,  0.0162862  ])
142     , -523.419    , array([ 0.594191   ,  0.01627    ])
144     , -523.432    , array([ 0.594191   ,  0.0162862  ])
146     , -523.419    , array([ 0.594191   ,  0.01627    ])
148     , -523.432    , array([ 0.594191   ,  0.0162862  ])
150     , -523.419    , array([ 0.594191   ,  0.01627    ])
152     , -523.432    , array([ 0.594191   ,  0.0162862  ])
154     , -523.419    , array([ 0.594191   ,  0.01627    ])
156     , -523.432    , array([ 0.594191   ,  0.0162862  ])
158     , -523.419    , array([ 0.594191   ,  0.01627    ])
160     , -523.432    , array([ 0.594191   ,  0.0162862  ])
162     , -523.419    , array([ 0.594191   ,  0.01627    ])
164     , -523.432    , array([ 0.594191   ,  0.0162862  ])
166     , -523.419    , array([ 0.594191   ,  0.01627    ])
168     , -523.432    , array([ 0.594191   ,  0.0162862  ])
170     , -523.419    , array([ 0.598984   ,  0.0162674  ])
172     , -523.419    , array([ 0.594235   ,  0.0162699  ])
174     , -523.419    , array([ 0.594829   ,  0.0162699  ])
176     , -523.419    , array([ 0.594975   ,  0.0162695  ])
178     , -523.419    , array([ 0.59436    ,  0.0162699  ])
180     , -523.419    , array([ 0.594257   ,  0.0162699  ])
182     , -523.419    , array([ 0.594239   ,  0.0162699  ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 25 for model 1D.1Bottleneck.TB1gen.TRec2850gen for pop MN
Beginning optimization ************************************************
2       , -25468      , array([ 0.0146122  ,  0.056569   ])
4       , -25468      , array([ 0.0145976  ,  0.056569   ])
6       , -1745.36    , array([ 0.0145367  ,  0.0206037  ])
8       , -1757.64    , array([ 0.0145367  ,  0.0206243  ])
10      , -1132.63    , array([ 0.0142956  ,  0.000362586])
12      , -1132.63    , array([ 0.0142956  ,  0.000362948])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 26 for model 1D.1Bottleneck.TB1gen.TRec2850gen for pop MN
Beginning optimization ************************************************
2       , -24081.7    , array([ 0.0158765  ,  0.0514239  ])
4       , -24081.7    , array([ 0.0158607  ,  0.0514239  ])
6       , -887.585    , array([ 0.0158127  ,  0.0187296  ])
8       , -893.577    , array([ 0.0158127  ,  0.0187484  ])
14      , -887.558    , array([ 0.0158151  ,  0.0187295  ])
16      , -893.549    , array([ 0.0158151  ,  0.0187483  ])
18      , -554.464    , array([ 0.363689   ,  0.0170336  ])
20      , -555.92     , array([ 0.363689   ,  0.0170506  ])
22      , -526.02     , array([ 2.68952    ,  0.0164971  ])
24      , -526.417    , array([ 2.68952    ,  0.0165136  ])
26      , -523.464    , array([ 5.75501    ,  0.0162999  ])
28      , -523.525    , array([ 5.75501    ,  0.0163162  ])
30      , -523.421    , array([ 6.61877    ,  0.016264   ])
32      , -523.424    , array([ 6.61877    ,  0.0162802  ])
34      , -523.422    , array([ 6.67701    ,  0.0162617  ])
36      , -523.422    , array([ 6.67701    ,  0.016278   ])
38      , -523.421    , array([ 6.62147    ,  0.0162638  ])
40      , -523.424    , array([ 6.62147    ,  0.0162801  ])
42      , -523.421    , array([ 6.6189     ,  0.0162639  ])
44      , -523.424    , array([ 6.6189     ,  0.0162802  ])
46      , -523.421    , array([ 6.61878    ,  0.016264   ])
48      , -523.424    , array([ 6.61878    ,  0.0162802  ])
50      , -523.421    , array([ 6.61877    ,  0.016264   ])
52      , -523.424    , array([ 6.61877    ,  0.0162802  ])
54      , -523.421    , array([ 6.61877    ,  0.016264   ])
56      , -523.424    , array([ 6.61877    ,  0.0162802  ])
58      , -523.421    , array([ 6.61877    ,  0.016264   ])
60      , -523.424    , array([ 6.61877    ,  0.0162802  ])
62      , -523.421    , array([ 6.61877    ,  0.016264   ])
64      , -523.424    , array([ 6.61877    ,  0.0162802  ])
66      , -523.421    , array([ 6.61877    ,  0.016264   ])
68      , -523.424    , array([ 6.61877    ,  0.0162802  ])
70      , -523.421    , array([ 6.61877    ,  0.016264   ])
72      , -523.424    , array([ 6.61877    ,  0.0162802  ])
74      , -523.421    , array([ 6.61877    ,  0.016264   ])
76      , -523.424    , array([ 6.61877    ,  0.0162802  ])
78      , -523.421    , array([ 6.61877    ,  0.016264   ])
80      , -523.424    , array([ 6.61877    ,  0.0162802  ])
82      , -523.421    , array([ 6.61877    ,  0.016264   ])
84      , -523.424    , array([ 6.61877    ,  0.0162802  ])
86      , -523.421    , array([ 6.61877    ,  0.016264   ])
88      , -523.424    , array([ 6.61877    ,  0.0162802  ])
90      , -523.421    , array([ 6.61877    ,  0.016264   ])
92      , -523.424    , array([ 6.61877    ,  0.0162802  ])
94      , -523.421    , array([ 6.61877    ,  0.016264   ])
96      , -523.424    , array([ 6.61877    ,  0.0162802  ])
98      , -523.421    , array([ 6.61877    ,  0.016264   ])
100     , -523.424    , array([ 6.61877    ,  0.0162802  ])
102     , -523.421    , array([ 6.61877    ,  0.016264   ])
104     , -523.424    , array([ 6.61877    ,  0.0162802  ])
106     , -523.421    , array([ 6.61877    ,  0.016264   ])
108     , -523.424    , array([ 6.61877    ,  0.0162802  ])
110     , -523.421    , array([ 6.61877    ,  0.016264   ])
112     , -523.424    , array([ 6.61877    ,  0.0162802  ])
114     , -523.421    , array([ 6.61877    ,  0.016264   ])
116     , -523.424    , array([ 6.61877    ,  0.0162802  ])
118     , -523.421    , array([ 6.61877    ,  0.016264   ])
120     , -523.424    , array([ 6.61877    ,  0.0162802  ])
122     , -523.421    , array([ 6.61877    ,  0.016264   ])
124     , -523.424    , array([ 6.61877    ,  0.0162802  ])
126     , -523.421    , array([ 6.61877    ,  0.016264   ])
128     , -523.424    , array([ 6.61877    ,  0.0162802  ])
130     , -523.421    , array([ 6.61877    ,  0.016264   ])
132     , -523.424    , array([ 6.61877    ,  0.0162802  ])
134     , -523.421    , array([ 6.61877    ,  0.016264   ])
136     , -523.424    , array([ 6.61877    ,  0.0162802  ])
138     , -523.421    , array([ 6.61877    ,  0.016264   ])
140     , -523.424    , array([ 6.61877    ,  0.0162802  ])
142     , -523.421    , array([ 6.61877    ,  0.016264   ])
144     , -523.424    , array([ 6.61877    ,  0.0162802  ])
146     , -523.421    , array([ 6.61877    ,  0.016264   ])
148     , -523.424    , array([ 6.61877    ,  0.0162802  ])
150     , -523.421    , array([ 6.61877    ,  0.016264   ])
152     , -523.424    , array([ 6.61877    ,  0.0162802  ])
154     , -523.421    , array([ 6.61877    ,  0.016264   ])
156     , -523.424    , array([ 6.61877    ,  0.0162802  ])
158     , -523.421    , array([ 6.61877    ,  0.016264   ])
160     , -523.424    , array([ 6.61877    ,  0.0162802  ])
162     , -523.421    , array([ 6.61877    ,  0.016264   ])
164     , -523.424    , array([ 6.61877    ,  0.0162802  ])
166     , -523.421    , array([ 6.61877    ,  0.016264   ])
168     , -523.424    , array([ 6.61877    ,  0.0162802  ])
170     , -523.421    , array([ 6.61877    ,  0.016264   ])
172     , -523.424    , array([ 6.61877    ,  0.0162802  ])
174     , -523.421    , array([ 6.61877    ,  0.016264   ])
176     , -523.424    , array([ 6.61877    ,  0.0162802  ])
178     , -523.421    , array([ 6.61877    ,  0.016264   ])
180     , -523.424    , array([ 6.61877    ,  0.0162802  ])
182     , -523.421    , array([ 6.61877    ,  0.016264   ])
184     , -523.424    , array([ 6.61877    ,  0.0162802  ])
186     , -523.421    , array([ 6.61877    ,  0.016264   ])
188     , -523.424    , array([ 6.61877    ,  0.0162802  ])
190     , -523.421    , array([ 6.61877    ,  0.016264   ])
192     , -523.424    , array([ 6.61877    ,  0.0162802  ])
194     , -523.421    , array([ 6.61877    ,  0.016264   ])
196     , -523.424    , array([ 6.61877    ,  0.0162802  ])
198     , -523.421    , array([ 6.61877    ,  0.016264   ])
200     , -523.424    , array([ 6.61877    ,  0.0162802  ])
202     , -523.421    , array([ 6.61877    ,  0.016264   ])
204     , -523.424    , array([ 6.61877    ,  0.0162802  ])
206     , -523.421    , array([ 6.61877    ,  0.016264   ])
208     , -523.424    , array([ 6.61877    ,  0.0162802  ])
210     , -523.421    , array([ 6.61877    ,  0.016264   ])
212     , -523.424    , array([ 6.61877    ,  0.0162802  ])
214     , -523.421    , array([ 6.61877    ,  0.016264   ])
216     , -523.424    , array([ 6.61877    ,  0.0162802  ])
218     , -523.421    , array([ 6.61877    ,  0.016264   ])
220     , -523.424    , array([ 6.61877    ,  0.0162802  ])
222     , -523.421    , array([ 6.61877    ,  0.016264   ])
224     , -523.424    , array([ 6.61877    ,  0.0162802  ])
226     , -523.421    , array([ 6.61877    ,  0.016264   ])
228     , -523.424    , array([ 6.61877    ,  0.0162802  ])
230     , -523.421    , array([ 6.61877    ,  0.016264   ])
232     , -523.424    , array([ 6.61877    ,  0.0162802  ])
234     , -523.421    , array([ 6.61877    ,  0.016264   ])
236     , -523.424    , array([ 6.61877    ,  0.0162802  ])
238     , -523.421    , array([ 6.61877    ,  0.016264   ])
240     , -523.424    , array([ 6.61877    ,  0.0162802  ])
242     , -523.421    , array([ 6.61877    ,  0.016264   ])
244     , -523.424    , array([ 6.61877    ,  0.0162802  ])
246     , -523.421    , array([ 6.61877    ,  0.016264   ])
248     , -523.424    , array([ 6.61877    ,  0.0162802  ])
250     , -523.421    , array([ 6.61877    ,  0.016264   ])
252     , -523.424    , array([ 6.61877    ,  0.0162802  ])
254     , -523.421    , array([ 6.61877    ,  0.016264   ])
256     , -523.424    , array([ 6.61877    ,  0.0162802  ])
258     , -523.421    , array([ 6.61877    ,  0.016264   ])
260     , -523.424    , array([ 6.61877    ,  0.0162802  ])
262     , -523.421    , array([ 6.61877    ,  0.016264   ])
264     , -523.424    , array([ 6.61877    ,  0.0162802  ])
266     , -523.421    , array([ 6.61877    ,  0.016264   ])
268     , -523.424    , array([ 6.61877    ,  0.0162802  ])
270     , -523.421    , array([ 6.61877    ,  0.016264   ])
272     , -523.424    , array([ 6.61877    ,  0.0162802  ])
274     , -523.421    , array([ 6.61877    ,  0.016264   ])
276     , -523.424    , array([ 6.61877    ,  0.0162802  ])
278     , -523.421    , array([ 6.61877    ,  0.016264   ])
280     , -523.424    , array([ 6.61877    ,  0.0162802  ])
282     , -523.421    , array([ 6.61877    ,  0.016264   ])
284     , -523.424    , array([ 6.61877    ,  0.0162802  ])
286     , -523.421    , array([ 6.61877    ,  0.016264   ])
288     , -523.424    , array([ 6.61877    ,  0.0162802  ])
290     , -523.421    , array([ 6.61877    ,  0.016264   ])
292     , -523.424    , array([ 6.61877    ,  0.0162802  ])
294     , -523.421    , array([ 6.61877    ,  0.016264   ])
296     , -523.424    , array([ 6.61877    ,  0.0162802  ])
298     , -523.421    , array([ 6.61877    ,  0.016264   ])
300     , -523.424    , array([ 6.61877    ,  0.0162802  ])
302     , -523.421    , array([ 6.61877    ,  0.016264   ])
304     , -523.424    , array([ 6.61877    ,  0.0162802  ])
306     , -523.421    , array([ 6.61877    ,  0.016264   ])
308     , -523.424    , array([ 6.61877    ,  0.0162802  ])
310     , -523.421    , array([ 6.62589    ,  0.0162637  ])
312     , -523.421    , array([ 6.61891    ,  0.0162639  ])
314     , -523.421    , array([ 6.61878    ,  0.016264   ])
316     , -523.421    , array([ 6.61877    ,  0.016264   ])
318     , -523.421    , array([ 6.61877    ,  0.016264   ])
320     , -523.424    , array([ 6.61877    ,  0.0162802  ])
322     , -523.421    , array([ 6.61877    ,  0.016264   ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 27 for model 1D.1Bottleneck.TB1gen.TRec2850gen for pop MN
Beginning optimization ************************************************
2       , -19929      , array([ 0.00949693 ,  0.188115   ])
4       , -19929      , array([ 0.00948744 ,  0.188115   ])
6       , -2143.5     , array([ 0.0094889  ,  0.516488   ])
8       , -2134.65    , array([ 0.0094889  ,  0.517005   ])
14      , -2141.35    , array([ 0.0095837  ,  0.516558   ])
16      , -2132.5     , array([ 0.0095837  ,  0.517075   ])
18      , -2114.46    , array([ 0.0109116  ,  0.517476   ])
20      , -2105.67    , array([ 0.0109116  ,  0.517994   ])
26      , -2114       , array([ 0.0109367  ,  0.517492   ])
28      , -2105.21    , array([ 0.0109367  ,  0.51801    ])
30      , -2108.02    , array([ 0.0112703  ,  0.517705   ])
32      , -2099.24    , array([ 0.0112703  ,  0.518223   ])
38      , -2107.91    , array([ 0.0112767  ,  0.517709   ])
40      , -2099.13    , array([ 0.0112767  ,  0.518227   ])
42      , -2106.44    , array([ 0.0113606  ,  0.517762   ])
44      , -2097.67    , array([ 0.0113606  ,  0.51828    ])
50      , -2106.41    , array([ 0.0113622  ,  0.517763   ])
52      , -2097.64    , array([ 0.0113622  ,  0.518281   ])
54      , -2106.05    , array([ 0.0113832  ,  0.517776   ])
56      , -2097.28    , array([ 0.0113832  ,  0.518294   ])
62      , -2106.04    , array([ 0.0113836  ,  0.517776   ])
64      , -2097.27    , array([ 0.0113836  ,  0.518294   ])
66      , -2105.95    , array([ 0.0113889  ,  0.517779   ])
68      , -2097.18    , array([ 0.0113889  ,  0.518297   ])
70      , -1477.18    , array([ 2.02488    ,  0.555805   ])
72      , -1470.31    , array([ 2.02488    ,  0.556361   ])
74      , -578.557    , array([ 0.22434    ,  0.676169   ])
76      , -576.21     , array([ 0.22434    ,  0.676845   ])
78      , -448.349    , array([ 0.0826987  ,  0.747853   ])
80      , -448.078    , array([ 0.0826987  ,  0.748601   ])
82      , -446.365    , array([ 0.0739337  ,  0.757657   ])
84      , -446.346    , array([ 0.0739337  ,  0.758415   ])
86      , -446.343    , array([ 0.0725504  ,  0.758454   ])
88      , -446.344    , array([ 0.0725504  ,  0.759213   ])
90      , -446.34     , array([ 0.0716061  ,  0.758547   ])
92      , -446.343    , array([ 0.0716061  ,  0.759306   ])
94      , -446.329    , array([ 0.0679502  ,  0.758921   ])
96      , -446.339    , array([ 0.0679502  ,  0.75968    ])
98      , -446.289    , array([ 0.0547981  ,  0.759859   ])
100     , -446.312    , array([ 0.0547981  ,  0.760619   ])
102     , -446.027    , array([ 0.0231775  ,  0.763625   ])
104     , -446.067    , array([ 0.0231775  ,  0.764389   ])
106     , -732.616    , array([ 0.000741771,  0.778874   ])
108     , -730.086    , array([ 0.000741771,  0.779653   ])
110     , -445.664    , array([ 0.00941737 ,  0.767586   ])
112     , -445.607    , array([ 0.00941737 ,  0.768354   ])
114     , -445.689    , array([ 0.0118657  ,  0.766567   ])
116     , -445.674    , array([ 0.0118657  ,  0.767334   ])
118     , -445.664    , array([ 0.00993    ,  0.767352   ])
120     , -445.619    , array([ 0.00993    ,  0.76812    ])
122     , -948.739    , array([ 0.000541106,  0.781824   ])
124     , -945.639    , array([ 0.000541106,  0.782606   ])
126     , -447.113    , array([ 0.00517302 ,  0.770572   ])
128     , -446.867    , array([ 0.00517302 ,  0.771343   ])
130     , -445.661    , array([ 0.00960228 ,  0.767518   ])
132     , -445.609    , array([ 0.00960228 ,  0.768285   ])
134     , -445.654    , array([ 0.00954437 ,  0.767638   ])
136     , -445.603    , array([ 0.00954437 ,  0.768406   ])
138     , -445.625    , array([ 0.00931618 ,  0.768122   ])
140     , -445.577    , array([ 0.00931618 ,  0.768891   ])
142     , -445.525    , array([ 0.00845669 ,  0.77006    ])
144     , -445.491    , array([ 0.00845669 ,  0.77083    ])
146     , -445.37     , array([ 0.00631981 ,  0.775497   ])
148     , -445.347    , array([ 0.00631981 ,  0.776273   ])
150     , -445.359    , array([ 0.00668313 ,  0.776222   ])
152     , -445.379    , array([ 0.00668313 ,  0.776998   ])
154     , -445.351    , array([ 0.00650746 ,  0.775876   ])
156     , -445.35     , array([ 0.00650746 ,  0.776653   ])
158     , -445.345    , array([ 0.00636942 ,  0.77633    ])
160     , -445.345    , array([ 0.00636942 ,  0.777107   ])
162     , -445.345    , array([ 0.00635933 ,  0.776358   ])
164     , -445.345    , array([ 0.00635933 ,  0.777135   ])
166     , -445.345    , array([ 0.00635968 ,  0.776357   ])
168     , -445.345    , array([ 0.00635968 ,  0.777134   ])
170     , -445.345    , array([ 0.00635933 ,  0.776358   ])
172     , -445.345    , array([ 0.00635933 ,  0.777135   ])
174     , -445.345    , array([ 0.00635933 ,  0.776358   ])
176     , -445.345    , array([ 0.00635933 ,  0.777135   ])
178     , -445.345    , array([ 0.00635933 ,  0.776358   ])
180     , -445.345    , array([ 0.00635933 ,  0.777135   ])
182     , -445.345    , array([ 0.00635933 ,  0.776358   ])
184     , -445.345    , array([ 0.00635933 ,  0.777135   ])
186     , -445.345    , array([ 0.00635933 ,  0.776358   ])
188     , -445.345    , array([ 0.00635933 ,  0.777135   ])
190     , -445.345    , array([ 0.00635933 ,  0.776358   ])
192     , -445.345    , array([ 0.00635933 ,  0.777135   ])
194     , -445.345    , array([ 0.00635933 ,  0.776358   ])
196     , -445.345    , array([ 0.00635933 ,  0.777135   ])
198     , -445.345    , array([ 0.00635933 ,  0.776358   ])
200     , -445.345    , array([ 0.00635933 ,  0.777135   ])
202     , -445.345    , array([ 0.00635933 ,  0.776358   ])
204     , -445.345    , array([ 0.00635933 ,  0.777135   ])
206     , -445.345    , array([ 0.00635933 ,  0.776358   ])
208     , -445.345    , array([ 0.00635933 ,  0.777135   ])
210     , -445.345    , array([ 0.00635933 ,  0.776358   ])
212     , -445.345    , array([ 0.00635933 ,  0.777135   ])
214     , -445.345    , array([ 0.00635933 ,  0.776358   ])
216     , -445.345    , array([ 0.00635933 ,  0.777135   ])
218     , -445.345    , array([ 0.00635933 ,  0.776358   ])
220     , -445.345    , array([ 0.00635933 ,  0.777135   ])
222     , -445.345    , array([ 0.00635933 ,  0.776358   ])
224     , -445.345    , array([ 0.00635933 ,  0.777135   ])
226     , -445.345    , array([ 0.00635933 ,  0.776358   ])
228     , -445.345    , array([ 0.00635933 ,  0.777135   ])
230     , -445.345    , array([ 0.00635933 ,  0.776358   ])
232     , -445.345    , array([ 0.00635933 ,  0.777135   ])
234     , -445.345    , array([ 0.00635933 ,  0.776358   ])
236     , -445.345    , array([ 0.00635933 ,  0.777135   ])
238     , -445.345    , array([ 0.00635933 ,  0.776358   ])
240     , -445.345    , array([ 0.00635933 ,  0.777135   ])
242     , -445.345    , array([ 0.00635933 ,  0.776358   ])
244     , -445.345    , array([ 0.00635933 ,  0.777135   ])
246     , -445.345    , array([ 0.00635933 ,  0.776358   ])
248     , -445.345    , array([ 0.00635933 ,  0.777135   ])
250     , -445.345    , array([ 0.00635933 ,  0.776358   ])
252     , -445.345    , array([ 0.00635933 ,  0.777135   ])
254     , -445.345    , array([ 0.00635933 ,  0.776358   ])
256     , -445.345    , array([ 0.00635933 ,  0.777135   ])
258     , -445.345    , array([ 0.00635933 ,  0.776358   ])
260     , -445.345    , array([ 0.00635933 ,  0.777135   ])
262     , -445.345    , array([ 0.00635933 ,  0.776358   ])
264     , -445.345    , array([ 0.00635933 ,  0.777135   ])
266     , -445.345    , array([ 0.00635933 ,  0.776358   ])
268     , -445.345    , array([ 0.00635933 ,  0.777135   ])
270     , -445.345    , array([ 0.00635933 ,  0.776358   ])
272     , -445.345    , array([ 0.00635933 ,  0.777135   ])
274     , -445.345    , array([ 0.00635933 ,  0.776358   ])
276     , -445.345    , array([ 0.00635933 ,  0.777135   ])
278     , -445.345    , array([ 0.00635933 ,  0.776358   ])
280     , -445.345    , array([ 0.00635933 ,  0.777135   ])
282     , -445.345    , array([ 0.00635933 ,  0.776358   ])
284     , -445.345    , array([ 0.00635933 ,  0.777135   ])
286     , -445.345    , array([ 0.00635933 ,  0.776358   ])
288     , -445.345    , array([ 0.00635933 ,  0.777135   ])
290     , -445.345    , array([ 0.00635933 ,  0.776358   ])
292     , -445.345    , array([ 0.00635933 ,  0.777135   ])
294     , -445.345    , array([ 0.00635933 ,  0.776358   ])
296     , -445.345    , array([ 0.00635933 ,  0.777135   ])
298     , -445.345    , array([ 0.00635933 ,  0.776358   ])
300     , -445.345    , array([ 0.00635933 ,  0.777135   ])
302     , -445.345    , array([ 0.00635933 ,  0.776358   ])
304     , -445.345    , array([ 0.00635933 ,  0.777135   ])
306     , -445.345    , array([ 0.00635933 ,  0.776358   ])
308     , -445.345    , array([ 0.00635933 ,  0.777135   ])
310     , -445.345    , array([ 0.00635933 ,  0.776358   ])
312     , -445.345    , array([ 0.00635933 ,  0.777135   ])
314     , -445.345    , array([ 0.00635933 ,  0.776358   ])
316     , -445.345    , array([ 0.00635933 ,  0.777135   ])
318     , -445.345    , array([ 0.00635933 ,  0.776358   ])
320     , -445.345    , array([ 0.00635933 ,  0.777135   ])
322     , -445.345    , array([ 0.00635933 ,  0.776358   ])
324     , -445.345    , array([ 0.00635933 ,  0.777135   ])
326     , -445.345    , array([ 0.00635933 ,  0.776358   ])
328     , -445.345    , array([ 0.00635933 ,  0.777135   ])
330     , -445.345    , array([ 0.00635933 ,  0.776358   ])
332     , -445.345    , array([ 0.00635933 ,  0.777135   ])
334     , -445.345    , array([ 0.00635933 ,  0.776358   ])
336     , -445.345    , array([ 0.00635933 ,  0.777135   ])
338     , -445.345    , array([ 0.00635933 ,  0.776358   ])
340     , -445.345    , array([ 0.00635933 ,  0.777135   ])
342     , -445.345    , array([ 0.00635933 ,  0.776358   ])
344     , -445.345    , array([ 0.00635933 ,  0.777135   ])
346     , -445.345    , array([ 0.00635933 ,  0.776358   ])
348     , -445.345    , array([ 0.00635933 ,  0.777135   ])
350     , -445.345    , array([ 0.00635933 ,  0.776358   ])
352     , -445.345    , array([ 0.00635933 ,  0.777135   ])
354     , -445.345    , array([ 0.00635933 ,  0.776358   ])
356     , -445.345    , array([ 0.00635933 ,  0.777135   ])
358     , -445.345    , array([ 0.00635933 ,  0.776358   ])
360     , -445.345    , array([ 0.00635933 ,  0.777135   ])
362     , -445.345    , array([ 0.00635933 ,  0.776358   ])
364     , -445.345    , array([ 0.00635933 ,  0.777135   ])
366     , -445.345    , array([ 0.00635933 ,  0.776358   ])
368     , -445.345    , array([ 0.00635933 ,  0.777135   ])
370     , -445.345    , array([ 0.00635933 ,  0.776358   ])
372     , -445.345    , array([ 0.00635933 ,  0.777135   ])
374     , -445.345    , array([ 0.00635933 ,  0.776358   ])
376     , -445.345    , array([ 0.00635933 ,  0.777135   ])
378     , -445.345    , array([ 0.00635951 ,  0.776357   ])
380     , -445.345    , array([ 0.00635937 ,  0.776358   ])
382     , -445.345    , array([ 0.00635934 ,  0.776358   ])
384     , -445.345    , array([ 0.00635933 ,  0.776358   ])
386     , -445.345    , array([ 0.00635933 ,  0.776358   ])
388     , -445.345    , array([ 0.00635933 ,  0.776358   ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 28 for model 1D.1Bottleneck.TB1gen.TRec2850gen for pop MN
Beginning optimization ************************************************
2       , -24357.7    , array([ 0.00673164 ,  0.144889   ])
4       , -24357.6    , array([ 0.00672491 ,  0.144889   ])
6       , -5312.81    , array([ 0.00669577 ,  0.397802   ])
8       , -5297.9     , array([ 0.00669577 ,  0.3982     ])
14      , -5306.76    , array([ 0.00669576 ,  0.397964   ])
16      , -5291.86    , array([ 0.00669576 ,  0.398362   ])
18      , -5186.41    , array([ 0.00669552 ,  0.401199   ])
20      , -5171.6     , array([ 0.00669552 ,  0.401601   ])
26      , -5184.93    , array([ 0.00669552 ,  0.40124    ])
28      , -5170.12    , array([ 0.00669552 ,  0.401641   ])
30      , -5155.74    , array([ 0.00669546 ,  0.402032   ])
32      , -5140.96    , array([ 0.00669546 ,  0.402434   ])
34      , -1434.15    , array([ 0.00666654 ,  1.10032    ])
36      , -1439.38    , array([ 0.00666654 ,  1.10142    ])
42      , -1432.99    , array([ 0.00662208 ,  1.10035    ])
44      , -1438.22    , array([ 0.00662208 ,  1.10145    ])
46      , -1431.83    , array([ 0.00657766 ,  1.10037    ])
48      , -1437.05    , array([ 0.00657766 ,  1.10147    ])
54      , -1431.53    , array([ 0.00656654 ,  1.10037    ])
56      , -1436.75    , array([ 0.00656654 ,  1.10147    ])
58      , -1431.24    , array([ 0.00655542 ,  1.10038    ])
60      , -1436.46    , array([ 0.00655542 ,  1.10148    ])
66      , -1431.17    , array([ 0.00655264 ,  1.10038    ])
68      , -1436.38    , array([ 0.00655264 ,  1.10148    ])
70      , -1431.09    , array([ 0.00654986 ,  1.10038    ])
72      , -1436.31    , array([ 0.00654986 ,  1.10148    ])
78      , -1431.07    , array([ 0.00654917 ,  1.10038    ])
80      , -1436.29    , array([ 0.00654917 ,  1.10148    ])
82      , -1431.05    , array([ 0.00654847 ,  1.10038    ])
84      , -1436.27    , array([ 0.00654847 ,  1.10148    ])
90      , -1431.05    , array([ 0.0065483  ,  1.10038    ])
92      , -1436.27    , array([ 0.0065483  ,  1.10148    ])
94      , -1431.05    , array([ 0.00654813 ,  1.10038    ])
96      , -1436.26    , array([ 0.00654813 ,  1.10148    ])
102     , -1431.04    , array([ 0.00654808 ,  1.10038    ])
104     , -1436.26    , array([ 0.00654808 ,  1.10148    ])
106     , -1431.04    , array([ 0.00654804 ,  1.10038    ])
108     , -1436.26    , array([ 0.00654804 ,  1.10148    ])
110     , -629.694    , array([ 0.000600379,  1.10815    ])
112     , -630.951    , array([ 0.000600379,  1.10926    ])
118     , -629.694    , array([ 0.000600377,  1.10815    ])
120     , -630.951    , array([ 0.000600377,  1.10926    ])
122     , -629.082    , array([ 0.000583997,  1.10888    ])
124     , -630.27     , array([ 0.000583997,  1.10999    ])
126     , -627.851    , array([ 0.000585339,  1.10764    ])
128     , -629.036    , array([ 0.000585339,  1.10874    ])
130     , -622.904    , array([ 0.00059074 ,  1.10266    ])
132     , -624.077    , array([ 0.00059074 ,  1.10377    ])
134     , -603.664    , array([ 0.000612847,  1.08299    ])
136     , -604.742    , array([ 0.000612847,  1.08407    ])
138     , -538.918    , array([ 0.000709863,  1.00774    ])
140     , -539.675    , array([ 0.000709863,  1.00875    ])
142     , -500.384    , array([ 0.00131713 ,  0.795454   ])
144     , -499.248    , array([ 0.00131713 ,  0.796249   ])
146     , -475.812    , array([ 0.000979603,  0.890883   ])
148     , -475.808    , array([ 0.000979603,  0.891774   ])
150     , -463.989    , array([ 0.00128176 ,  0.8396     ])
152     , -463.66     , array([ 0.00128176 ,  0.84044    ])
154     , -456.45     , array([ 0.00148852 ,  0.833059   ])
156     , -456.255    , array([ 0.00148852 ,  0.833892   ])
158     , -450.147    , array([ 0.00190884 ,  0.820642   ])
160     , -450.084    , array([ 0.00190884 ,  0.821463   ])
162     , -447.783    , array([ 0.00237408 ,  0.806721   ])
164     , -447.708    , array([ 0.00237408 ,  0.807528   ])
166     , -446.285    , array([ 0.00295692 ,  0.798826   ])
168     , -446.269    , array([ 0.00295692 ,  0.799625   ])
170     , -445.778    , array([ 0.00372591 ,  0.787547   ])
172     , -445.71     , array([ 0.00372591 ,  0.788335   ])
174     , -445.414    , array([ 0.00445524 ,  0.784375   ])
176     , -445.401    , array([ 0.00445524 ,  0.785159   ])
178     , -445.382    , array([ 0.00491688 ,  0.781701   ])
180     , -445.371    , array([ 0.00491688 ,  0.782484   ])
182     , -445.353    , array([ 0.00522283 ,  0.780702   ])
184     , -445.354    , array([ 0.00522283 ,  0.781483   ])
186     , -445.366    , array([ 0.0066492  ,  0.776716   ])
188     , -445.395    , array([ 0.0066492  ,  0.777494   ])
190     , -445.362    , array([ 0.00678308 ,  0.775408   ])
192     , -445.369    , array([ 0.00678308 ,  0.776184   ])
194     , -445.348    , array([ 0.00648061 ,  0.776122   ])
196     , -445.351    , array([ 0.00648061 ,  0.776899   ])
198     , -445.344    , array([ 0.00633487 ,  0.77642    ])
200     , -445.344    , array([ 0.00633487 ,  0.777197   ])
202     , -445.345    , array([ 0.00636104 ,  0.776353   ])
204     , -445.345    , array([ 0.00636104 ,  0.77713    ])
206     , -445.344    , array([ 0.00633513 ,  0.776419   ])
208     , -445.344    , array([ 0.00633513 ,  0.777196   ])
210     , -445.344    , array([ 0.00633487 ,  0.77642    ])
212     , -445.344    , array([ 0.00633487 ,  0.777197   ])
214     , -445.344    , array([ 0.00633487 ,  0.77642    ])
216     , -445.344    , array([ 0.00633487 ,  0.777197   ])
218     , -445.344    , array([ 0.00633487 ,  0.77642    ])
220     , -445.344    , array([ 0.00633487 ,  0.777197   ])
222     , -445.344    , array([ 0.00633487 ,  0.77642    ])
224     , -445.344    , array([ 0.00633487 ,  0.777197   ])
226     , -445.344    , array([ 0.00633487 ,  0.77642    ])
228     , -445.344    , array([ 0.00633487 ,  0.777197   ])
230     , -445.344    , array([ 0.00633487 ,  0.77642    ])
232     , -445.344    , array([ 0.00633487 ,  0.777197   ])
234     , -445.344    , array([ 0.00633487 ,  0.77642    ])
236     , -445.344    , array([ 0.00633487 ,  0.777197   ])
238     , -445.344    , array([ 0.00633487 ,  0.77642    ])
240     , -445.344    , array([ 0.00633487 ,  0.777197   ])
242     , -445.344    , array([ 0.00633487 ,  0.77642    ])
244     , -445.344    , array([ 0.00633487 ,  0.777197   ])
246     , -445.344    , array([ 0.00633487 ,  0.77642    ])
248     , -445.344    , array([ 0.00633487 ,  0.777197   ])
250     , -445.344    , array([ 0.00633487 ,  0.77642    ])
252     , -445.344    , array([ 0.00633487 ,  0.777197   ])
254     , -445.344    , array([ 0.00633487 ,  0.77642    ])
256     , -445.344    , array([ 0.00633487 ,  0.777197   ])
258     , -445.344    , array([ 0.00633487 ,  0.77642    ])
260     , -445.344    , array([ 0.00633487 ,  0.777197   ])
262     , -445.344    , array([ 0.00633487 ,  0.77642    ])
264     , -445.344    , array([ 0.00633487 ,  0.777197   ])
266     , -445.344    , array([ 0.00633487 ,  0.77642    ])
268     , -445.344    , array([ 0.00633487 ,  0.777197   ])
270     , -445.344    , array([ 0.00633487 ,  0.77642    ])
272     , -445.344    , array([ 0.00633487 ,  0.777197   ])
274     , -445.344    , array([ 0.00633487 ,  0.77642    ])
276     , -445.344    , array([ 0.00633487 ,  0.777197   ])
278     , -445.344    , array([ 0.00633487 ,  0.77642    ])
280     , -445.344    , array([ 0.00633487 ,  0.777197   ])
282     , -445.344    , array([ 0.00633487 ,  0.77642    ])
284     , -445.344    , array([ 0.00633487 ,  0.777197   ])
286     , -445.344    , array([ 0.00633487 ,  0.77642    ])
288     , -445.344    , array([ 0.00633487 ,  0.777197   ])
290     , -445.344    , array([ 0.00633487 ,  0.77642    ])
292     , -445.344    , array([ 0.00633487 ,  0.777197   ])
294     , -445.344    , array([ 0.00633487 ,  0.77642    ])
296     , -445.344    , array([ 0.00633487 ,  0.777197   ])
298     , -445.344    , array([ 0.00633487 ,  0.77642    ])
300     , -445.344    , array([ 0.00633487 ,  0.777197   ])
302     , -445.344    , array([ 0.00633487 ,  0.77642    ])
304     , -445.344    , array([ 0.00633487 ,  0.777197   ])
306     , -445.344    , array([ 0.00633487 ,  0.77642    ])
308     , -445.344    , array([ 0.00633487 ,  0.777197   ])
310     , -445.344    , array([ 0.00633487 ,  0.77642    ])
312     , -445.344    , array([ 0.00633487 ,  0.777197   ])
314     , -445.344    , array([ 0.00633487 ,  0.77642    ])
316     , -445.344    , array([ 0.00633487 ,  0.777197   ])
318     , -445.344    , array([ 0.00633487 ,  0.77642    ])
320     , -445.344    , array([ 0.00633487 ,  0.777197   ])
322     , -445.344    , array([ 0.00633487 ,  0.77642    ])
324     , -445.344    , array([ 0.00633487 ,  0.777197   ])
326     , -445.344    , array([ 0.00633487 ,  0.77642    ])
328     , -445.344    , array([ 0.00633487 ,  0.777197   ])
330     , -445.344    , array([ 0.00633487 ,  0.77642    ])
332     , -445.344    , array([ 0.00633487 ,  0.777197   ])
334     , -445.344    , array([ 0.00633487 ,  0.77642    ])
336     , -445.344    , array([ 0.00633487 ,  0.777197   ])
338     , -445.344    , array([ 0.00633487 ,  0.77642    ])
340     , -445.344    , array([ 0.00633487 ,  0.777197   ])
342     , -445.344    , array([ 0.00633487 ,  0.77642    ])
344     , -445.344    , array([ 0.00633487 ,  0.777197   ])
346     , -445.344    , array([ 0.00633487 ,  0.77642    ])
348     , -445.344    , array([ 0.00633487 ,  0.777197   ])
350     , -445.344    , array([ 0.00633487 ,  0.77642    ])
352     , -445.344    , array([ 0.00633487 ,  0.777197   ])
354     , -445.344    , array([ 0.00633487 ,  0.77642    ])
356     , -445.344    , array([ 0.00633487 ,  0.777197   ])
358     , -445.344    , array([ 0.00633487 ,  0.77642    ])
360     , -445.344    , array([ 0.00633487 ,  0.777197   ])
362     , -445.344    , array([ 0.00633487 ,  0.77642    ])
364     , -445.344    , array([ 0.00633487 ,  0.777197   ])
366     , -445.344    , array([ 0.00633487 ,  0.77642    ])
368     , -445.344    , array([ 0.00633487 ,  0.777197   ])
370     , -445.344    , array([ 0.00633487 ,  0.77642    ])
372     , -445.344    , array([ 0.00633487 ,  0.777197   ])
374     , -445.344    , array([ 0.00633487 ,  0.77642    ])
376     , -445.344    , array([ 0.00633487 ,  0.777197   ])
378     , -445.344    , array([ 0.00633487 ,  0.77642    ])
380     , -445.344    , array([ 0.00633487 ,  0.777197   ])
382     , -445.344    , array([ 0.00633487 ,  0.77642    ])
384     , -445.344    , array([ 0.00633487 ,  0.777197   ])
386     , -445.344    , array([ 0.00633487 ,  0.77642    ])
388     , -445.344    , array([ 0.00633487 ,  0.777197   ])
390     , -445.344    , array([ 0.00633487 ,  0.77642    ])
392     , -445.344    , array([ 0.00633487 ,  0.777197   ])
394     , -445.344    , array([ 0.00633487 ,  0.77642    ])
396     , -445.344    , array([ 0.00633487 ,  0.777197   ])
398     , -445.344    , array([ 0.00633487 ,  0.77642    ])
400     , -445.344    , array([ 0.00633487 ,  0.777197   ])
402     , -445.344    , array([ 0.00633487 ,  0.77642    ])
404     , -445.344    , array([ 0.00633487 ,  0.777197   ])
406     , -445.344    , array([ 0.00633487 ,  0.77642    ])
408     , -445.344    , array([ 0.00633487 ,  0.777197   ])
410     , -445.344    , array([ 0.00633487 ,  0.77642    ])
412     , -445.344    , array([ 0.00633487 ,  0.777197   ])
414     , -445.344    , array([ 0.00633487 ,  0.77642    ])
416     , -445.344    , array([ 0.00633487 ,  0.777197   ])
418     , -445.344    , array([ 0.00633487 ,  0.77642    ])
420     , -445.344    , array([ 0.00633487 ,  0.777197   ])
422     , -445.344    , array([ 0.00633487 ,  0.77642    ])
424     , -445.344    , array([ 0.00633487 ,  0.777197   ])
426     , -445.344    , array([ 0.00633487 ,  0.77642    ])
428     , -445.344    , array([ 0.00633487 ,  0.777197   ])
430     , -445.344    , array([ 0.00633487 ,  0.77642    ])
432     , -445.344    , array([ 0.00633487 ,  0.777197   ])
434     , -445.344    , array([ 0.00633487 ,  0.77642    ])
436     , -445.344    , array([ 0.00633487 ,  0.777197   ])
438     , -445.344    , array([ 0.00633487 ,  0.77642    ])
440     , -445.344    , array([ 0.00633487 ,  0.777197   ])
442     , -445.344    , array([ 0.00633487 ,  0.77642    ])
444     , -445.344    , array([ 0.00633487 ,  0.777197   ])
446     , -445.344    , array([ 0.00633487 ,  0.77642    ])
448     , -445.344    , array([ 0.00633487 ,  0.777197   ])
450     , -445.344    , array([ 0.00633487 ,  0.77642    ])
452     , -445.344    , array([ 0.00633487 ,  0.777197   ])
454     , -445.344    , array([ 0.00633487 ,  0.77642    ])
456     , -445.344    , array([ 0.00633487 ,  0.777197   ])
458     , -445.344    , array([ 0.00633487 ,  0.77642    ])
460     , -445.344    , array([ 0.00633487 ,  0.777197   ])
462     , -445.344    , array([ 0.00633487 ,  0.77642    ])
464     , -445.344    , array([ 0.00633487 ,  0.777197   ])
466     , -445.344    , array([ 0.00633487 ,  0.77642    ])
468     , -445.344    , array([ 0.00633487 ,  0.777197   ])
470     , -445.344    , array([ 0.00633487 ,  0.77642    ])
472     , -445.344    , array([ 0.00633487 ,  0.777197   ])
474     , -445.344    , array([ 0.00633487 ,  0.77642    ])
476     , -445.344    , array([ 0.00633487 ,  0.777197   ])
478     , -445.344    , array([ 0.00633487 ,  0.77642    ])
480     , -445.344    , array([ 0.00633487 ,  0.777197   ])
482     , -445.344    , array([ 0.00633487 ,  0.77642    ])
484     , -445.344    , array([ 0.00633487 ,  0.777197   ])
486     , -445.344    , array([ 0.00633487 ,  0.77642    ])
488     , -445.344    , array([ 0.00633487 ,  0.777197   ])
490     , -445.344    , array([ 0.00633487 ,  0.77642    ])
492     , -445.344    , array([ 0.00633487 ,  0.777197   ])
494     , -445.344    , array([ 0.00633487 ,  0.77642    ])
496     , -445.344    , array([ 0.00633487 ,  0.777197   ])
498     , -445.344    , array([ 0.00633487 ,  0.77642    ])
500     , -445.344    , array([ 0.00633487 ,  0.777197   ])
502     , -445.344    , array([ 0.00633487 ,  0.77642    ])
504     , -445.344    , array([ 0.00633487 ,  0.777197   ])
506     , -445.344    , array([ 0.00633487 ,  0.77642    ])
508     , -445.344    , array([ 0.00633487 ,  0.777197   ])
510     , -445.344    , array([ 0.00633487 ,  0.77642    ])
512     , -445.344    , array([ 0.00633487 ,  0.777197   ])
514     , -445.344    , array([ 0.00633487 ,  0.77642    ])
516     , -445.344    , array([ 0.00633487 ,  0.777197   ])
518     , -445.344    , array([ 0.00633487 ,  0.77642    ])
520     , -445.344    , array([ 0.00633487 ,  0.777197   ])
522     , -445.344    , array([ 0.00633487 ,  0.77642    ])
524     , -445.344    , array([ 0.00633487 ,  0.777197   ])
526     , -445.344    , array([ 0.00633487 ,  0.77642    ])
528     , -445.344    , array([ 0.00633487 ,  0.777197   ])
530     , -445.344    , array([ 0.00633487 ,  0.77642    ])
532     , -445.344    , array([ 0.00633487 ,  0.777197   ])
534     , -445.344    , array([ 0.00633487 ,  0.77642    ])
536     , -445.344    , array([ 0.00633487 ,  0.777197   ])
538     , -445.344    , array([ 0.00633487 ,  0.77642    ])
540     , -445.344    , array([ 0.00633487 ,  0.777197   ])
542     , -445.344    , array([ 0.00633487 ,  0.77642    ])
544     , -445.344    , array([ 0.00633487 ,  0.777197   ])
546     , -445.344    , array([ 0.00633487 ,  0.77642    ])
548     , -445.344    , array([ 0.00633487 ,  0.777197   ])
550     , -445.344    , array([ 0.00633487 ,  0.77642    ])
552     , -445.344    , array([ 0.00633487 ,  0.777197   ])
554     , -445.344    , array([ 0.00633487 ,  0.77642    ])
556     , -445.344    , array([ 0.00633487 ,  0.777197   ])
558     , -445.344    , array([ 0.00633487 ,  0.77642    ])
560     , -445.344    , array([ 0.00633487 ,  0.777197   ])
562     , -445.344    , array([ 0.00634794 ,  0.776387   ])
564     , -445.344    , array([ 0.00633813 ,  0.776412   ])
566     , -445.344    , array([ 0.00633568 ,  0.776418   ])
568     , -445.344    , array([ 0.00633507 ,  0.776419   ])
570     , -445.344    , array([ 0.00633492 ,  0.77642    ])
572     , -445.344    , array([ 0.00633488 ,  0.77642    ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 29 for model 1D.1Bottleneck.TB1gen.TRec2850gen for pop MN
Beginning optimization ************************************************
2       , -21781.1    , array([ 0.0127306  ,  0.170362   ])
4       , -21781.1    , array([ 0.0127179  ,  0.170362   ])
6       , -3112.96    , array([ 0.0127089  ,  0.467747   ])
8       , -3101.74    , array([ 0.0127089  ,  0.468215   ])
14      , -3110.59    , array([ 0.0128051  ,  0.467822   ])
16      , -3099.38    , array([ 0.0128051  ,  0.46829    ])
18      , -3077.04    , array([ 0.0142722  ,  0.468895   ])
20      , -3065.88    , array([ 0.0142722  ,  0.469364   ])
26      , -3076.48    , array([ 0.0142983  ,  0.468913   ])
28      , -3065.32    , array([ 0.0142983  ,  0.469382   ])
30      , -3068.49    , array([ 0.0146794  ,  0.469173   ])
32      , -3057.34    , array([ 0.0146794  ,  0.469643   ])
38      , -3068.35    , array([ 0.0146861  ,  0.469178   ])
40      , -3057.2     , array([ 0.0146861  ,  0.469647   ])
42      , -3066.38    , array([ 0.0147822  ,  0.469242   ])
44      , -3055.23    , array([ 0.0147822  ,  0.469712   ])
50      , -3066.34    , array([ 0.0147839  ,  0.469244   ])
52      , -3055.2     , array([ 0.0147839  ,  0.469713   ])
54      , -3065.85    , array([ 0.014808   ,  0.46926    ])
56      , -3054.71    , array([ 0.014808   ,  0.469729   ])
62      , -3065.84    , array([ 0.0148084  ,  0.46926    ])
64      , -3054.7     , array([ 0.0148084  ,  0.469729   ])
66      , -3065.72    , array([ 0.0148145  ,  0.469264   ])
68      , -3054.57    , array([ 0.0148145  ,  0.469734   ])
70      , -2200.93    , array([ 0.626232   ,  0.507881   ])
72      , -2191.79    , array([ 0.626232   ,  0.508389   ])
74      , -877.143    , array([ 0.0234883  ,  0.621648   ])
76      , -872.8      , array([ 0.0234883  ,  0.62227    ])
78      , -458.932    , array([ 0.0253172  ,  0.734901   ])
80      , -458.225    , array([ 0.0253172  ,  0.735636   ])
82      , -446.182    , array([ 0.0261809  ,  0.759114   ])
84      , -446.122    , array([ 0.0261809  ,  0.759873   ])
86      , -446.051    , array([ 0.0256436  ,  0.761511   ])
88      , -446.049    , array([ 0.0256436  ,  0.762273   ])
90      , -446.038    , array([ 0.0249685  ,  0.761788   ])
92      , -446.04     , array([ 0.0249685  ,  0.76255    ])
94      , -445.992    , array([ 0.0224412  ,  0.762894   ])
96      , -446.008    , array([ 0.0224412  ,  0.763657   ])
98      , -445.821    , array([ 0.0154843  ,  0.765865   ])
100     , -445.849    , array([ 0.0154843  ,  0.766631   ])
102     , -449.084    , array([ 0.00350968 ,  0.777866   ])
104     , -448.746    , array([ 0.00350968 ,  0.778644   ])
106     , -445.588    , array([ 0.00997205 ,  0.769403   ])
108     , -445.594    , array([ 0.00997205 ,  0.770173   ])
110     , -445.505    , array([ 0.00675707 ,  0.772546   ])
112     , -445.44     , array([ 0.00675707 ,  0.773319   ])
114     , -445.49     , array([ 0.00837109 ,  0.770815   ])
116     , -445.471    , array([ 0.00837109 ,  0.771586   ])
118     , -2126.03    , array([ 0.000222283,  0.802239   ])
120     , -2122.38    , array([ 0.000222283,  0.803041   ])
122     , -446.065    , array([ 0.00503803 ,  0.775137   ])
124     , -445.914    , array([ 0.00503803 ,  0.775913   ])
126     , -445.469    , array([ 0.00767092 ,  0.771557   ])
128     , -445.435    , array([ 0.00767092 ,  0.772329   ])
130     , -445.447    , array([ 0.0074986  ,  0.772122   ])
132     , -445.417    , array([ 0.0074986  ,  0.772895   ])
134     , -445.391    , array([ 0.00697529 ,  0.773909   ])
136     , -445.374    , array([ 0.00697529 ,  0.774684   ])
138     , -445.348    , array([ 0.00641025 ,  0.776098   ])
140     , -445.346    , array([ 0.00641025 ,  0.776875   ])
142     , -445.345    , array([ 0.00637724 ,  0.776319   ])
144     , -445.346    , array([ 0.00637724 ,  0.777096   ])
146     , -445.344    , array([ 0.00634657 ,  0.77639    ])
148     , -445.344    , array([ 0.00634657 ,  0.777167   ])
150     , -445.345    , array([ 0.00635979 ,  0.776357   ])
152     , -445.345    , array([ 0.00635979 ,  0.777133   ])
154     , -445.344    , array([ 0.00634664 ,  0.77639    ])
156     , -445.344    , array([ 0.00634664 ,  0.777167   ])
158     , -445.344    , array([ 0.00634657 ,  0.77639    ])
160     , -445.344    , array([ 0.00634657 ,  0.777167   ])
162     , -445.344    , array([ 0.00634657 ,  0.77639    ])
164     , -445.344    , array([ 0.00634657 ,  0.777167   ])
166     , -445.344    , array([ 0.00634657 ,  0.77639    ])
168     , -445.344    , array([ 0.00634657 ,  0.777167   ])
170     , -445.344    , array([ 0.00634657 ,  0.77639    ])
172     , -445.344    , array([ 0.00634657 ,  0.777167   ])
174     , -445.344    , array([ 0.00634657 ,  0.77639    ])
176     , -445.344    , array([ 0.00634657 ,  0.777167   ])
178     , -445.344    , array([ 0.00634657 ,  0.77639    ])
180     , -445.344    , array([ 0.00634657 ,  0.777167   ])
182     , -445.344    , array([ 0.00634657 ,  0.77639    ])
184     , -445.344    , array([ 0.00634657 ,  0.777167   ])
186     , -445.344    , array([ 0.00634657 ,  0.77639    ])
188     , -445.344    , array([ 0.00634657 ,  0.777167   ])
190     , -445.344    , array([ 0.00634657 ,  0.77639    ])
192     , -445.344    , array([ 0.00634657 ,  0.777167   ])
194     , -445.344    , array([ 0.00634657 ,  0.77639    ])
196     , -445.344    , array([ 0.00634657 ,  0.777167   ])
198     , -445.344    , array([ 0.00634657 ,  0.77639    ])
200     , -445.344    , array([ 0.00634657 ,  0.777167   ])
202     , -445.344    , array([ 0.00634657 ,  0.77639    ])
204     , -445.344    , array([ 0.00634657 ,  0.777167   ])
206     , -445.344    , array([ 0.00634657 ,  0.77639    ])
208     , -445.344    , array([ 0.00634657 ,  0.777167   ])
210     , -445.344    , array([ 0.00634657 ,  0.77639    ])
212     , -445.344    , array([ 0.00634657 ,  0.777167   ])
214     , -445.344    , array([ 0.00634657 ,  0.77639    ])
216     , -445.344    , array([ 0.00634657 ,  0.777167   ])
218     , -445.344    , array([ 0.00634657 ,  0.77639    ])
220     , -445.344    , array([ 0.00634657 ,  0.777167   ])
222     , -445.344    , array([ 0.00634657 ,  0.77639    ])
224     , -445.344    , array([ 0.00634657 ,  0.777167   ])
226     , -445.344    , array([ 0.00634657 ,  0.77639    ])
228     , -445.344    , array([ 0.00634657 ,  0.777167   ])
230     , -445.344    , array([ 0.00634657 ,  0.77639    ])
232     , -445.344    , array([ 0.00634657 ,  0.777167   ])
234     , -445.344    , array([ 0.00634657 ,  0.77639    ])
236     , -445.344    , array([ 0.00634657 ,  0.777167   ])
238     , -445.344    , array([ 0.00634657 ,  0.77639    ])
240     , -445.344    , array([ 0.00634657 ,  0.777167   ])
242     , -445.344    , array([ 0.00634657 ,  0.77639    ])
244     , -445.344    , array([ 0.00634657 ,  0.777167   ])
246     , -445.344    , array([ 0.00634657 ,  0.77639    ])
248     , -445.344    , array([ 0.00634657 ,  0.777167   ])
250     , -445.344    , array([ 0.00634657 ,  0.77639    ])
252     , -445.344    , array([ 0.00634657 ,  0.777167   ])
254     , -445.344    , array([ 0.00634657 ,  0.77639    ])
256     , -445.344    , array([ 0.00634657 ,  0.777167   ])
258     , -445.344    , array([ 0.00634657 ,  0.77639    ])
260     , -445.344    , array([ 0.00634657 ,  0.777167   ])
262     , -445.344    , array([ 0.00634657 ,  0.77639    ])
264     , -445.344    , array([ 0.00634657 ,  0.777167   ])
266     , -445.344    , array([ 0.00634657 ,  0.77639    ])
268     , -445.344    , array([ 0.00634657 ,  0.777167   ])
270     , -445.344    , array([ 0.00634657 ,  0.77639    ])
272     , -445.344    , array([ 0.00634657 ,  0.777167   ])
274     , -445.344    , array([ 0.00634657 ,  0.77639    ])
276     , -445.344    , array([ 0.00634657 ,  0.777167   ])
278     , -445.344    , array([ 0.00634657 ,  0.77639    ])
280     , -445.344    , array([ 0.00634657 ,  0.777167   ])
282     , -445.344    , array([ 0.00634657 ,  0.77639    ])
284     , -445.344    , array([ 0.00634657 ,  0.777167   ])
286     , -445.344    , array([ 0.00634657 ,  0.77639    ])
288     , -445.344    , array([ 0.00634657 ,  0.777167   ])
290     , -445.345    , array([ 0.00635317 ,  0.776374   ])
292     , -445.344    , array([ 0.00634822 ,  0.776386   ])
294     , -445.344    , array([ 0.00634698 ,  0.776389   ])
296     , -445.344    , array([ 0.00634667 ,  0.77639    ])
298     , -445.344    , array([ 0.00634659 ,  0.77639    ])
300     , -445.344    , array([ 0.00634657 ,  0.77639    ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 30 for model 1D.1Bottleneck.TB1gen.TRec2850gen for pop MN
Beginning optimization ************************************************
2       , -26983.9    , array([ 0.013932   ,  0.114817   ])
4       , -26983.9    , array([ 0.0139181  ,  0.114817   ])
6       , -9253.62    , array([ 0.0138377  ,  0.315236   ])
8       , -9234.27    , array([ 0.0138377  ,  0.315551   ])
14      , -9243.44    , array([ 0.0138377  ,  0.315402   ])
16      , -9224.09    , array([ 0.0138377  ,  0.315718   ])
18      , -9233.26    , array([ 0.0138377  ,  0.315568   ])
20      , -9213.91    , array([ 0.0138377  ,  0.315884   ])
26      , -9230.72    , array([ 0.0138376  ,  0.315609   ])
28      , -9211.36    , array([ 0.0138376  ,  0.315925   ])
30      , -9228.17    , array([ 0.0138376  ,  0.315651   ])
32      , -9208.82    , array([ 0.0138376  ,  0.315967   ])
34      , -584.352    , array([ 0.0137578  ,  0.866295   ])
36      , -586.561    , array([ 0.0137578  ,  0.867162   ])
42      , -584.345    , array([ 0.0137562  ,  0.866294   ])
44      , -586.553    , array([ 0.0137562  ,  0.86716    ])
46      , -584.338    , array([ 0.0137545  ,  0.866292   ])
48      , -586.546    , array([ 0.0137545  ,  0.867159   ])
54      , -584.336    , array([ 0.0137541  ,  0.866292   ])
56      , -586.544    , array([ 0.0137541  ,  0.867159   ])
58      , -584.334    , array([ 0.0137537  ,  0.866292   ])
60      , -586.542    , array([ 0.0137537  ,  0.867158   ])
66      , -584.334    , array([ 0.0137536  ,  0.866291   ])
68      , -586.542    , array([ 0.0137536  ,  0.867158   ])
70      , -584.333    , array([ 0.0137535  ,  0.866291   ])
72      , -586.541    , array([ 0.0137535  ,  0.867158   ])
74      , -2195.81    , array([ 0.000207282,  0.814929   ])
76      , -2192.35    , array([ 0.000207282,  0.815744   ])
78      , -510.938    , array([ 0.00485698 ,  0.853253   ])
80      , -512.446    , array([ 0.00485698 ,  0.854106   ])
82      , -458.456    , array([ 0.00223157 ,  0.843639   ])
84      , -459.044    , array([ 0.00223157 ,  0.844483   ])
90      , -458.456    , array([ 0.00223156 ,  0.843639   ])
92      , -459.044    , array([ 0.00223156 ,  0.844483   ])
94      , -453.801    , array([ 0.00157585 ,  0.84277    ])
96      , -453.879    , array([ 0.00157585 ,  0.843613   ])
98      , -452.597    , array([ 0.00181314 ,  0.840477   ])
100     , -452.845    , array([ 0.00181314 ,  0.841317   ])
102     , -451.938    , array([ 0.00186226 ,  0.83767    ])
104     , -452.171    , array([ 0.00186226 ,  0.838508   ])
106     , -449.64     , array([ 0.00207245 ,  0.826535   ])
108     , -449.802    , array([ 0.00207245 ,  0.827362   ])
110     , -446.501    , array([ 0.00291619 ,  0.796974   ])
112     , -446.431    , array([ 0.00291619 ,  0.797771   ])
114     , -446.197    , array([ 0.00318788 ,  0.793063   ])
116     , -446.124    , array([ 0.00318788 ,  0.793857   ])
118     , -445.728    , array([ 0.00360201 ,  0.790348   ])
120     , -445.697    , array([ 0.00360201 ,  0.791139   ])
122     , -445.436    , array([ 0.004759   ,  0.781437   ])
124     , -445.398    , array([ 0.004759   ,  0.782219   ])
126     , -445.373    , array([ 0.00495132 ,  0.78195    ])
128     , -445.372    , array([ 0.00495132 ,  0.782732   ])
130     , -445.354    , array([ 0.00520382 ,  0.780743   ])
132     , -445.354    , array([ 0.00520382 ,  0.781524   ])
134     , -445.353    , array([ 0.00634933 ,  0.775931   ])
136     , -445.342    , array([ 0.00634933 ,  0.776708   ])
138     , -445.339    , array([ 0.00619789 ,  0.776913   ])
140     , -445.34     , array([ 0.00619789 ,  0.77769    ])
142     , -445.345    , array([ 0.00638465 ,  0.776301   ])
144     , -445.346    , array([ 0.00638465 ,  0.777078   ])
146     , -445.339    , array([ 0.0062062  ,  0.776885   ])
148     , -445.34     , array([ 0.0062062  ,  0.777662   ])
150     , -445.339    , array([ 0.00619829 ,  0.776911   ])
152     , -445.34     , array([ 0.00619829 ,  0.777689   ])
154     , -445.339    , array([ 0.00619791 ,  0.776913   ])
156     , -445.34     , array([ 0.00619791 ,  0.77769    ])
158     , -445.339    , array([ 0.00619789 ,  0.776913   ])
160     , -445.34     , array([ 0.00619789 ,  0.77769    ])
162     , -445.339    , array([ 0.00619789 ,  0.776913   ])
164     , -445.34     , array([ 0.00619789 ,  0.77769    ])
166     , -445.339    , array([ 0.00619789 ,  0.776913   ])
168     , -445.34     , array([ 0.00619789 ,  0.77769    ])
170     , -445.339    , array([ 0.00619789 ,  0.776913   ])
172     , -445.34     , array([ 0.00619789 ,  0.77769    ])
174     , -445.339    , array([ 0.00619789 ,  0.776913   ])
176     , -445.34     , array([ 0.00619789 ,  0.77769    ])
178     , -445.339    , array([ 0.00619789 ,  0.776913   ])
180     , -445.34     , array([ 0.00619789 ,  0.77769    ])
182     , -445.339    , array([ 0.00619789 ,  0.776913   ])
184     , -445.34     , array([ 0.00619789 ,  0.77769    ])
186     , -445.339    , array([ 0.00619789 ,  0.776913   ])
188     , -445.34     , array([ 0.00619789 ,  0.77769    ])
190     , -445.339    , array([ 0.00619789 ,  0.776913   ])
192     , -445.34     , array([ 0.00619789 ,  0.77769    ])
194     , -445.339    , array([ 0.00619789 ,  0.776913   ])
196     , -445.34     , array([ 0.00619789 ,  0.77769    ])
198     , -445.339    , array([ 0.00619789 ,  0.776913   ])
200     , -445.34     , array([ 0.00619789 ,  0.77769    ])
202     , -445.339    , array([ 0.00619789 ,  0.776913   ])
204     , -445.34     , array([ 0.00619789 ,  0.77769    ])
206     , -445.339    , array([ 0.00619789 ,  0.776913   ])
208     , -445.34     , array([ 0.00619789 ,  0.77769    ])
210     , -445.339    , array([ 0.00619789 ,  0.776913   ])
212     , -445.34     , array([ 0.00619789 ,  0.77769    ])
214     , -445.339    , array([ 0.00619789 ,  0.776913   ])
216     , -445.34     , array([ 0.00619789 ,  0.77769    ])
218     , -445.339    , array([ 0.00619789 ,  0.776913   ])
220     , -445.34     , array([ 0.00619789 ,  0.77769    ])
222     , -445.339    , array([ 0.00619789 ,  0.776913   ])
224     , -445.34     , array([ 0.00619789 ,  0.77769    ])
226     , -445.339    , array([ 0.00619789 ,  0.776913   ])
228     , -445.34     , array([ 0.00619789 ,  0.77769    ])
230     , -445.339    , array([ 0.00619789 ,  0.776913   ])
232     , -445.34     , array([ 0.00619789 ,  0.77769    ])
234     , -445.339    , array([ 0.00619789 ,  0.776913   ])
236     , -445.34     , array([ 0.00619789 ,  0.77769    ])
238     , -445.339    , array([ 0.00619789 ,  0.776913   ])
240     , -445.34     , array([ 0.00619789 ,  0.77769    ])
242     , -445.339    , array([ 0.00619789 ,  0.776913   ])
244     , -445.34     , array([ 0.00619789 ,  0.77769    ])
246     , -445.339    , array([ 0.00619789 ,  0.776913   ])
248     , -445.34     , array([ 0.00619789 ,  0.77769    ])
250     , -445.339    , array([ 0.00619789 ,  0.776913   ])
252     , -445.34     , array([ 0.00619789 ,  0.77769    ])
254     , -445.339    , array([ 0.00619789 ,  0.776913   ])
256     , -445.34     , array([ 0.00619789 ,  0.77769    ])
258     , -445.339    , array([ 0.00619789 ,  0.776913   ])
260     , -445.34     , array([ 0.00619789 ,  0.77769    ])
262     , -445.339    , array([ 0.00619789 ,  0.776913   ])
264     , -445.34     , array([ 0.00619789 ,  0.77769    ])
266     , -445.339    , array([ 0.00619789 ,  0.776913   ])
268     , -445.34     , array([ 0.00619789 ,  0.77769    ])
270     , -445.339    , array([ 0.00619789 ,  0.776913   ])
272     , -445.34     , array([ 0.00619789 ,  0.77769    ])
274     , -445.339    , array([ 0.00619789 ,  0.776913   ])
276     , -445.34     , array([ 0.00619789 ,  0.77769    ])
278     , -445.339    , array([ 0.00619789 ,  0.776913   ])
280     , -445.34     , array([ 0.00619789 ,  0.77769    ])
282     , -445.339    , array([ 0.00619789 ,  0.776913   ])
284     , -445.34     , array([ 0.00619789 ,  0.77769    ])
286     , -445.339    , array([ 0.00619789 ,  0.776913   ])
288     , -445.34     , array([ 0.00619789 ,  0.77769    ])
290     , -445.339    , array([ 0.00619789 ,  0.776913   ])
292     , -445.34     , array([ 0.00619789 ,  0.77769    ])
294     , -445.339    , array([ 0.00619789 ,  0.776913   ])
296     , -445.34     , array([ 0.00619789 ,  0.77769    ])
298     , -445.339    , array([ 0.00619789 ,  0.776913   ])
300     , -445.34     , array([ 0.00619789 ,  0.77769    ])
302     , -445.339    , array([ 0.00619789 ,  0.776913   ])
304     , -445.34     , array([ 0.00619789 ,  0.77769    ])
306     , -445.339    , array([ 0.00619789 ,  0.776913   ])
308     , -445.34     , array([ 0.00619789 ,  0.77769    ])
310     , -445.339    , array([ 0.00619789 ,  0.776913   ])
312     , -445.34     , array([ 0.00619789 ,  0.77769    ])
314     , -445.339    , array([ 0.00619789 ,  0.776913   ])
316     , -445.34     , array([ 0.00619789 ,  0.77769    ])
318     , -445.339    , array([ 0.00619789 ,  0.776913   ])
320     , -445.34     , array([ 0.00619789 ,  0.77769    ])
322     , -445.339    , array([ 0.00619789 ,  0.776913   ])
324     , -445.34     , array([ 0.00619789 ,  0.77769    ])
326     , -445.339    , array([ 0.00619789 ,  0.776913   ])
328     , -445.34     , array([ 0.00619789 ,  0.77769    ])
330     , -445.339    , array([ 0.00619789 ,  0.776913   ])
332     , -445.34     , array([ 0.00619789 ,  0.77769    ])
334     , -445.339    , array([ 0.00619789 ,  0.776913   ])
336     , -445.34     , array([ 0.00619789 ,  0.77769    ])
338     , -445.339    , array([ 0.00619789 ,  0.776913   ])
340     , -445.34     , array([ 0.00619789 ,  0.77769    ])
342     , -445.339    , array([ 0.00619789 ,  0.776913   ])
344     , -445.34     , array([ 0.00619789 ,  0.77769    ])
346     , -445.339    , array([ 0.00619789 ,  0.776913   ])
348     , -445.34     , array([ 0.00619789 ,  0.77769    ])
350     , -445.339    , array([ 0.00619789 ,  0.776913   ])
352     , -445.34     , array([ 0.00619789 ,  0.77769    ])
354     , -445.339    , array([ 0.00619789 ,  0.776913   ])
356     , -445.34     , array([ 0.00619789 ,  0.77769    ])
358     , -445.339    , array([ 0.00619789 ,  0.776913   ])
360     , -445.34     , array([ 0.00619789 ,  0.77769    ])
362     , -445.339    , array([ 0.00619789 ,  0.776913   ])
364     , -445.34     , array([ 0.00619789 ,  0.77769    ])
366     , -445.339    , array([ 0.00619789 ,  0.776913   ])
368     , -445.34     , array([ 0.00619789 ,  0.77769    ])
370     , -445.339    , array([ 0.00619789 ,  0.776913   ])
372     , -445.34     , array([ 0.00619789 ,  0.77769    ])
374     , -445.339    , array([ 0.00619789 ,  0.776913   ])
376     , -445.34     , array([ 0.00619789 ,  0.77769    ])
378     , -445.339    , array([ 0.00619789 ,  0.776913   ])
380     , -445.34     , array([ 0.00619789 ,  0.77769    ])
382     , -445.339    , array([ 0.00619789 ,  0.776913   ])
384     , -445.34     , array([ 0.00619789 ,  0.77769    ])
386     , -445.339    , array([ 0.00619789 ,  0.776913   ])
388     , -445.34     , array([ 0.00619789 ,  0.77769    ])
390     , -445.339    , array([ 0.00619789 ,  0.776913   ])
392     , -445.34     , array([ 0.00619789 ,  0.77769    ])
394     , -445.339    , array([ 0.00619789 ,  0.776913   ])
396     , -445.34     , array([ 0.00619789 ,  0.77769    ])
398     , -445.339    , array([ 0.00619789 ,  0.776913   ])
400     , -445.34     , array([ 0.00619789 ,  0.77769    ])
402     , -445.339    , array([ 0.00619789 ,  0.776913   ])
404     , -445.34     , array([ 0.00619789 ,  0.77769    ])
406     , -445.339    , array([ 0.00619789 ,  0.776913   ])
408     , -445.34     , array([ 0.00619789 ,  0.77769    ])
410     , -445.339    , array([ 0.00619789 ,  0.776913   ])
412     , -445.34     , array([ 0.00619789 ,  0.77769    ])
414     , -445.339    , array([ 0.00619789 ,  0.776913   ])
416     , -445.34     , array([ 0.00619789 ,  0.77769    ])
418     , -445.339    , array([ 0.00619789 ,  0.776913   ])
420     , -445.34     , array([ 0.00619789 ,  0.77769    ])
422     , -445.339    , array([ 0.00619789 ,  0.776913   ])
424     , -445.34     , array([ 0.00619789 ,  0.77769    ])
426     , -445.339    , array([ 0.00619789 ,  0.776913   ])
428     , -445.34     , array([ 0.00619789 ,  0.77769    ])
430     , -445.339    , array([ 0.00619789 ,  0.776913   ])
432     , -445.34     , array([ 0.00619789 ,  0.77769    ])
434     , -445.34     , array([ 0.00621965 ,  0.77684    ])
436     , -445.339    , array([ 0.00619829 ,  0.776911   ])
438     , -445.339    , array([ 0.0061979  ,  0.776913   ])
440     , -445.339    , array([ 0.00619789 ,  0.776913   ])
442     , -445.339    , array([ 0.00619789 ,  0.776913   ])
444     , -445.339    , array([ 0.00619789 ,  0.776913   ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 31 for model 1D.1Bottleneck.TB1gen.TRec2850gen for pop MN
Beginning optimization ************************************************
2       , -23779.3    , array([ 0.0088747  ,  0.0506095  ])
4       , -23779.2    , array([ 0.00886583 ,  0.0506095  ])
6       , -797.41     , array([ 0.00881948 ,  0.0184332  ])
8       , -802.467    , array([ 0.00881948 ,  0.0184516  ])
14      , -797.394    , array([ 0.00882085 ,  0.0184331  ])
16      , -802.451    , array([ 0.00882085 ,  0.0184516  ])
22      , -797.392    , array([ 0.00882101 ,  0.0184331  ])
24      , -802.449    , array([ 0.00882101 ,  0.0184516  ])
26      , -528.624    , array([ 7.6569     ,  0.0159374  ])
28      , -528.146    , array([ 7.6569     ,  0.0159534  ])
30      , -524.077    , array([ 3.01531    ,  0.0161532  ])
32      , -523.908    , array([ 3.01531    ,  0.0161694  ])
34      , -523.419    , array([ 1.81328    ,  0.0162723  ])
36      , -523.436    , array([ 1.81328    ,  0.0162886  ])
38      , -523.422    , array([ 1.89926    ,  0.0162614  ])
40      , -523.422    , array([ 1.89926    ,  0.0162777  ])
42      , -523.419    , array([ 1.83141    ,  0.01627    ])
44      , -523.432    , array([ 1.83141    ,  0.0162862  ])
46      , -523.419    , array([ 1.83701    ,  0.0162692  ])
48      , -523.431    , array([ 1.83701    ,  0.0162855  ])
50      , -523.419    , array([ 1.83258    ,  0.0162698  ])
52      , -523.432    , array([ 1.83258    ,  0.0162861  ])
54      , -523.419    , array([ 1.83551    ,  0.0162694  ])
56      , -523.431    , array([ 1.83551    ,  0.0162857  ])
58      , -523.419    , array([ 1.83319    ,  0.0162697  ])
60      , -523.432    , array([ 1.83319    ,  0.016286   ])
62      , -523.419    , array([ 1.83271    ,  0.0162698  ])
64      , -523.432    , array([ 1.83271    ,  0.0162861  ])
66      , -523.419    , array([ 1.83261    ,  0.0162698  ])
68      , -523.432    , array([ 1.83261    ,  0.0162861  ])
70      , -523.419    , array([ 1.83259    ,  0.0162698  ])
72      , -523.432    , array([ 1.83259    ,  0.0162861  ])
74      , -523.419    , array([ 1.83258    ,  0.0162698  ])
76      , -523.432    , array([ 1.83258    ,  0.0162861  ])
78      , -523.419    , array([ 1.83258    ,  0.0162698  ])
80      , -523.432    , array([ 1.83258    ,  0.0162861  ])
82      , -523.419    , array([ 1.83258    ,  0.0162698  ])
84      , -523.432    , array([ 1.83258    ,  0.0162861  ])
86      , -523.419    , array([ 1.83258    ,  0.0162698  ])
88      , -523.432    , array([ 1.83258    ,  0.0162861  ])
90      , -523.419    , array([ 1.83258    ,  0.0162698  ])
92      , -523.432    , array([ 1.83258    ,  0.0162861  ])
94      , -523.419    , array([ 1.83258    ,  0.0162698  ])
96      , -523.432    , array([ 1.83258    ,  0.0162861  ])
98      , -523.419    , array([ 1.83258    ,  0.0162698  ])
100     , -523.432    , array([ 1.83258    ,  0.0162861  ])
102     , -523.419    , array([ 1.83258    ,  0.0162698  ])
104     , -523.432    , array([ 1.83258    ,  0.0162861  ])
106     , -523.419    , array([ 1.83258    ,  0.0162698  ])
108     , -523.432    , array([ 1.83258    ,  0.0162861  ])
110     , -523.419    , array([ 1.83412    ,  0.0162696  ])
112     , -523.419    , array([ 1.83255    ,  0.0162698  ])
114     , -523.432    , array([ 1.83255    ,  0.0162861  ])
116     , -523.419    , array([ 1.83292    ,  0.0162698  ])
118     , -523.419    , array([ 1.83262    ,  0.0162698  ])
120     , -523.419    , array([ 1.83257    ,  0.0162698  ])
122     , -523.419    , array([ 1.83256    ,  0.0162698  ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 32 for model 1D.1Bottleneck.TB1gen.TRec2850gen for pop MN
Beginning optimization ************************************************
2       , -27242.2    , array([ 0.013165   ,  0.110887   ])
4       , -27242.1    , array([ 0.0131519  ,  0.110887   ])
6       , -9938.16    , array([ 0.0130571  ,  0.304443   ])
8       , -9918.29    , array([ 0.0130571  ,  0.304747   ])
14      , -9927.43    , array([ 0.013057   ,  0.304607   ])
16      , -9907.59    , array([ 0.013057   ,  0.304912   ])
18      , -9736.18    , array([ 0.0130561  ,  0.307581   ])
20      , -9716.49    , array([ 0.0130561  ,  0.307889   ])
26      , -9733.56    , array([ 0.0130561  ,  0.307622   ])
28      , -9713.87    , array([ 0.0130561  ,  0.30793    ])
30      , -9730.94    , array([ 0.0130561  ,  0.307663   ])
32      , -9711.25    , array([ 0.0130561  ,  0.307971   ])
34      , -527.959    , array([ 0.0129623  ,  0.842423   ])
36      , -529.681    , array([ 0.0129623  ,  0.843266   ])
42      , -527.955    , array([ 0.0129613  ,  0.842422   ])
44      , -529.677    , array([ 0.0129613  ,  0.843265   ])
46      , -527.951    , array([ 0.0129603  ,  0.842421   ])
48      , -529.673    , array([ 0.0129603  ,  0.843264   ])
54      , -527.95     , array([ 0.0129601  ,  0.842421   ])
56      , -529.672    , array([ 0.0129601  ,  0.843263   ])
58      , -527.949    , array([ 0.0129598  ,  0.84242    ])
60      , -529.671    , array([ 0.0129598  ,  0.843263   ])
66      , -527.948    , array([ 0.0129598  ,  0.84242    ])
68      , -529.67     , array([ 0.0129598  ,  0.843263   ])
70      , -527.948    , array([ 0.0129597  ,  0.84242    ])
72      , -529.67     , array([ 0.0129597  ,  0.843263   ])
74      , -1493.77    , array([ 0.000330838,  0.792681   ])
76      , -1490.09    , array([ 0.000330838,  0.793474   ])
78      , -470.328    , array([ 0.00448844 ,  0.827729   ])
80      , -471.271    , array([ 0.00448844 ,  0.828557   ])
82      , -560.26     , array([ 0.000937831,  0.806504   ])
84      , -558.725    , array([ 0.000937831,  0.807311   ])
86      , -449.617    , array([ 0.00260662 ,  0.820299   ])
88      , -449.928    , array([ 0.00260662 ,  0.82112    ])
94      , -449.617    , array([ 0.00260662 ,  0.820299   ])
96      , -449.928    , array([ 0.00260662 ,  0.82112    ])
98      , -449.617    , array([ 0.00260659 ,  0.8203     ])
100     , -449.928    , array([ 0.00260659 ,  0.82112    ])
106     , -449.617    , array([ 0.00260659 ,  0.8203     ])
108     , -449.928    , array([ 0.00260659 ,  0.82112    ])
110     , -449.617    , array([ 0.00260658 ,  0.8203     ])
112     , -449.928    , array([ 0.00260658 ,  0.82112    ])
114     , -1053.91    , array([ 0.000411611,  0.828906   ])
116     , -1051.1     , array([ 0.000411611,  0.829736   ])
118     , -448.972    , array([ 0.00207724 ,  0.821353   ])
120     , -449.035    , array([ 0.00207724 ,  0.822175   ])
122     , -448.172    , array([ 0.00236551 ,  0.817641   ])
124     , -448.318    , array([ 0.00236551 ,  0.818459   ])
126     , -447.338    , array([ 0.0026411  ,  0.811364   ])
128     , -447.478    , array([ 0.0026411  ,  0.812175   ])
130     , -445.485    , array([ 0.00410414 ,  0.786731   ])
132     , -445.47     , array([ 0.00410414 ,  0.787518   ])
134     , -445.495    , array([ 0.00452592 ,  0.782232   ])
136     , -445.443    , array([ 0.00452592 ,  0.783015   ])
138     , -445.471    , array([ 0.00423782 ,  0.785254   ])
140     , -445.445    , array([ 0.00423782 ,  0.786039   ])
142     , -445.456    , array([ 0.00434169 ,  0.784438   ])
144     , -445.428    , array([ 0.00434169 ,  0.785223   ])
146     , -445.436    , array([ 0.00445927 ,  0.783716   ])
148     , -445.409    , array([ 0.00445927 ,  0.7845     ])
150     , -445.411    , array([ 0.00462714 ,  0.782871   ])
152     , -445.388    , array([ 0.00462714 ,  0.783654   ])
154     , -445.384    , array([ 0.00490715 ,  0.781674   ])
156     , -445.371    , array([ 0.00490715 ,  0.782456   ])
158     , -445.354    , array([ 0.00524208 ,  0.780418   ])
160     , -445.351    , array([ 0.00524208 ,  0.781199   ])
162     , -445.364    , array([ 0.00682649 ,  0.775418   ])
164     , -445.374    , array([ 0.00682649 ,  0.776194   ])
166     , -445.343    , array([ 0.00637473 ,  0.776546   ])
168     , -445.349    , array([ 0.00637473 ,  0.777323   ])
170     , -445.344    , array([ 0.00634547 ,  0.776389   ])
172     , -445.344    , array([ 0.00634547 ,  0.777166   ])
174     , -445.343    , array([ 0.00637012 ,  0.776521   ])
176     , -445.348    , array([ 0.00637012 ,  0.777298   ])
178     , -445.343    , array([ 0.00637385 ,  0.776541   ])
180     , -445.349    , array([ 0.00637385 ,  0.777318   ])
182     , -445.343    , array([ 0.00637455 ,  0.776545   ])
184     , -445.349    , array([ 0.00637455 ,  0.777322   ])
186     , -445.343    , array([ 0.00637469 ,  0.776545   ])
188     , -445.349    , array([ 0.00637469 ,  0.777322   ])
190     , -445.343    , array([ 0.00637472 ,  0.776546   ])
192     , -445.349    , array([ 0.00637472 ,  0.777323   ])
194     , -445.343    , array([ 0.00637473 ,  0.776546   ])
196     , -445.349    , array([ 0.00637473 ,  0.777323   ])
198     , -445.343    , array([ 0.00637473 ,  0.776546   ])
200     , -445.349    , array([ 0.00637473 ,  0.777323   ])
202     , -445.343    , array([ 0.00637473 ,  0.776546   ])
204     , -445.349    , array([ 0.00637473 ,  0.777323   ])
206     , -445.343    , array([ 0.00637473 ,  0.776546   ])
208     , -445.349    , array([ 0.00637473 ,  0.777323   ])
210     , -445.343    , array([ 0.00637473 ,  0.776546   ])
212     , -445.349    , array([ 0.00637473 ,  0.777323   ])
214     , -445.343    , array([ 0.00637473 ,  0.776546   ])
216     , -445.349    , array([ 0.00637473 ,  0.777323   ])
218     , -445.343    , array([ 0.00637473 ,  0.776546   ])
220     , -445.349    , array([ 0.00637473 ,  0.777323   ])
222     , -445.343    , array([ 0.00637473 ,  0.776546   ])
224     , -445.349    , array([ 0.00637473 ,  0.777323   ])
226     , -445.343    , array([ 0.00637473 ,  0.776546   ])
228     , -445.349    , array([ 0.00637473 ,  0.777323   ])
230     , -445.343    , array([ 0.00637473 ,  0.776546   ])
232     , -445.349    , array([ 0.00637473 ,  0.777323   ])
234     , -445.343    , array([ 0.00637473 ,  0.776546   ])
236     , -445.349    , array([ 0.00637473 ,  0.777323   ])
238     , -445.343    , array([ 0.00637473 ,  0.776546   ])
240     , -445.349    , array([ 0.00637473 ,  0.777323   ])
242     , -445.343    , array([ 0.00637473 ,  0.776546   ])
244     , -445.349    , array([ 0.00637473 ,  0.777323   ])
246     , -445.343    , array([ 0.00637473 ,  0.776546   ])
248     , -445.349    , array([ 0.00637473 ,  0.777323   ])
250     , -445.343    , array([ 0.00637473 ,  0.776546   ])
252     , -445.349    , array([ 0.00637473 ,  0.777323   ])
254     , -445.343    , array([ 0.00637473 ,  0.776546   ])
256     , -445.349    , array([ 0.00637473 ,  0.777323   ])
258     , -445.343    , array([ 0.00637473 ,  0.776546   ])
260     , -445.349    , array([ 0.00637473 ,  0.777323   ])
262     , -445.343    , array([ 0.00637473 ,  0.776546   ])
264     , -445.349    , array([ 0.00637473 ,  0.777323   ])
266     , -445.343    , array([ 0.00637473 ,  0.776546   ])
268     , -445.349    , array([ 0.00637473 ,  0.777323   ])
270     , -445.343    , array([ 0.00637473 ,  0.776546   ])
272     , -445.349    , array([ 0.00637473 ,  0.777323   ])
274     , -445.343    , array([ 0.00637473 ,  0.776546   ])
276     , -445.349    , array([ 0.00637473 ,  0.777323   ])
278     , -445.343    , array([ 0.00637473 ,  0.776546   ])
280     , -445.349    , array([ 0.00637473 ,  0.777323   ])
282     , -445.343    , array([ 0.00637473 ,  0.776546   ])
284     , -445.349    , array([ 0.00637473 ,  0.777323   ])
286     , -445.343    , array([ 0.00637473 ,  0.776546   ])
288     , -445.349    , array([ 0.00637473 ,  0.777323   ])
290     , -445.343    , array([ 0.00637473 ,  0.776546   ])
292     , -445.349    , array([ 0.00637473 ,  0.777323   ])
294     , -445.343    , array([ 0.00637473 ,  0.776546   ])
296     , -445.349    , array([ 0.00637473 ,  0.777323   ])
298     , -445.343    , array([ 0.00637473 ,  0.776546   ])
300     , -445.349    , array([ 0.00637473 ,  0.777323   ])
302     , -445.343    , array([ 0.00637473 ,  0.776546   ])
304     , -445.349    , array([ 0.00637473 ,  0.777323   ])
306     , -445.343    , array([ 0.00636546 ,  0.776496   ])
308     , -445.343    , array([ 0.00637339 ,  0.776538   ])
310     , -445.343    , array([ 0.0063745  ,  0.776544   ])
312     , -445.343    , array([ 0.00637469 ,  0.776545   ])
314     , -445.343    , array([ 0.00637472 ,  0.776546   ])
316     , -445.343    , array([ 0.00637473 ,  0.776546   ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 33 for model 1D.1Bottleneck.TB1gen.TRec2850gen for pop MN
Beginning optimization ************************************************
2       , -26048.7    , array([ 0.0193074  ,  0.0592772  ])
4       , -26048.7    , array([ 0.0192881  ,  0.0592772  ])
6       , -2399.14    , array([ 0.0192186  ,  0.02159    ])
8       , -2414.79    , array([ 0.0192186  ,  0.0216116  ])
10      , -1132.63    , array([ 0.0189433  ,  0.000379939])
12      , -1132.63    , array([ 0.0189433  ,  0.00038032 ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 34 for model 1D.1Bottleneck.TB1gen.TRec2850gen for pop MN
Beginning optimization ************************************************
2       , -21113.6    , array([ 0.0076158  ,  0.176696   ])
4       , -21113.6    , array([ 0.00760819 ,  0.176696   ])
6       , -2770.42    , array([ 0.00760294 ,  0.485136   ])
8       , -2760.05    , array([ 0.00760294 ,  0.485622   ])
14      , -2768.13    , array([ 0.00765266 ,  0.485205   ])
16      , -2757.76    , array([ 0.00765266 ,  0.48569    ])
18      , -2736.46    , array([ 0.0083898  ,  0.486169   ])
20      , -2726.14    , array([ 0.0083898  ,  0.486656   ])
26      , -2735.93    , array([ 0.00840297 ,  0.486186   ])
28      , -2725.61    , array([ 0.00840297 ,  0.486672   ])
30      , -2728.45    , array([ 0.00859149 ,  0.486419   ])
32      , -2718.14    , array([ 0.00859149 ,  0.486906   ])
38      , -2728.32    , array([ 0.00859483 ,  0.486423   ])
40      , -2718.01    , array([ 0.00859483 ,  0.48691    ])
42      , -2726.48    , array([ 0.00864221 ,  0.486481   ])
44      , -2716.17    , array([ 0.00864221 ,  0.486967   ])
50      , -2726.45    , array([ 0.00864305 ,  0.486482   ])
52      , -2716.14    , array([ 0.00864305 ,  0.486968   ])
54      , -2725.99    , array([ 0.00865491 ,  0.486496   ])
56      , -2715.68    , array([ 0.00865491 ,  0.486983   ])
58      , -1415.36    , array([ 6.28166    ,  0.560872   ])
60      , -1408.69    , array([ 6.28166    ,  0.561433   ])
62      , -550.975    , array([ 0.0353388  ,  0.845322   ])
64      , -552.929    , array([ 0.0353388  ,  0.846168   ])
66      , -450.339    , array([ 0.0609956  ,  0.774706   ])
68      , -450.745    , array([ 0.0609956  ,  0.775481   ])
70      , -446.43     , array([ 0.0767988  ,  0.756508   ])
72      , -446.385    , array([ 0.0767988  ,  0.757265   ])
74      , -446.347    , array([ 0.0740596  ,  0.758406   ])
76      , -446.348    , array([ 0.0740596  ,  0.759165   ])
78      , -446.344    , array([ 0.0731635  ,  0.758488   ])
80      , -446.346    , array([ 0.0731635  ,  0.759247   ])
82      , -446.334    , array([ 0.0696863  ,  0.758815   ])
84      , -446.343    , array([ 0.0696863  ,  0.759574   ])
86      , -446.297    , array([ 0.0572729  ,  0.759642   ])
88      , -446.317    , array([ 0.0572729  ,  0.760402   ])
90      , -446.075    , array([ 0.0261309  ,  0.762958   ])
92      , -446.113    , array([ 0.0261309  ,  0.763722   ])
94      , -568.827    , array([ 0.00113233 ,  0.776371   ])
96      , -567.037    , array([ 0.00113233 ,  0.777147   ])
98      , -445.69     , array([ 0.0114173  ,  0.766474   ])
100     , -445.662    , array([ 0.0114173  ,  0.767241   ])
102     , -445.682    , array([ 0.0106294  ,  0.766778   ])
104     , -445.642    , array([ 0.0106294  ,  0.767545   ])
106     , -445.713    , array([ 0.0127775  ,  0.766516   ])
108     , -445.715    , array([ 0.0127775  ,  0.767283   ])
110     , -445.679    , array([ 0.01107    ,  0.76672    ])
112     , -445.649    , array([ 0.01107    ,  0.767487   ])
114     , -445.67     , array([ 0.0109201  ,  0.766916   ])
116     , -445.641    , array([ 0.0109201  ,  0.767683   ])
118     , -445.636    , array([ 0.0103404  ,  0.767698   ])
120     , -445.611    , array([ 0.0103404  ,  0.768466   ])
122     , -445.494    , array([ 0.00836544 ,  0.770722   ])
124     , -445.472    , array([ 0.00836544 ,  0.771493   ])
126     , -446.957    , array([ 0.00358345 ,  0.78294    ])
128     , -446.753    , array([ 0.00358345 ,  0.783723   ])
130     , -445.411    , array([ 0.0067804  ,  0.773732   ])
132     , -445.378    , array([ 0.0067804  ,  0.774506   ])
134     , -445.359    , array([ 0.00673107 ,  0.77558    ])
136     , -445.367    , array([ 0.00673107 ,  0.776356   ])
138     , -445.337    , array([ 0.00591478 ,  0.777651   ])
140     , -445.333    , array([ 0.00591478 ,  0.778429   ])
142     , -445.344    , array([ 0.00638907 ,  0.776415   ])
144     , -445.348    , array([ 0.00638907 ,  0.777192   ])
146     , -445.345    , array([ 0.00634972 ,  0.776382   ])
148     , -445.344    , array([ 0.00634972 ,  0.777159   ])
150     , -445.344    , array([ 0.0063777  ,  0.776405   ])
152     , -445.347    , array([ 0.0063777  ,  0.777182   ])
154     , -445.344    , array([ 0.00637109 ,  0.776388   ])
156     , -445.346    , array([ 0.00637109 ,  0.777165   ])
158     , -445.344    , array([ 0.00637699 ,  0.776404   ])
160     , -445.347    , array([ 0.00637699 ,  0.77718    ])
162     , -445.344    , array([ 0.00637762 ,  0.776405   ])
164     , -445.347    , array([ 0.00637762 ,  0.777182   ])
166     , -445.344    , array([ 0.00637769 ,  0.776405   ])
168     , -445.347    , array([ 0.00637769 ,  0.777182   ])
170     , -445.344    , array([ 0.0063777  ,  0.776405   ])
172     , -445.347    , array([ 0.0063777  ,  0.777182   ])
174     , -445.344    , array([ 0.0063777  ,  0.776405   ])
176     , -445.347    , array([ 0.0063777  ,  0.777182   ])
178     , -445.344    , array([ 0.0063777  ,  0.776405   ])
180     , -445.347    , array([ 0.0063777  ,  0.777182   ])
182     , -445.344    , array([ 0.0063777  ,  0.776405   ])
184     , -445.347    , array([ 0.0063777  ,  0.777182   ])
186     , -445.344    , array([ 0.0063777  ,  0.776405   ])
188     , -445.347    , array([ 0.0063777  ,  0.777182   ])
190     , -445.344    , array([ 0.0063777  ,  0.776405   ])
192     , -445.347    , array([ 0.0063777  ,  0.777182   ])
194     , -445.344    , array([ 0.0063777  ,  0.776405   ])
196     , -445.347    , array([ 0.0063777  ,  0.777182   ])
198     , -445.344    , array([ 0.0063777  ,  0.776405   ])
200     , -445.347    , array([ 0.0063777  ,  0.777182   ])
202     , -445.344    , array([ 0.0063777  ,  0.776405   ])
204     , -445.347    , array([ 0.0063777  ,  0.777182   ])
206     , -445.344    , array([ 0.0063777  ,  0.776405   ])
208     , -445.347    , array([ 0.0063777  ,  0.777182   ])
210     , -445.344    , array([ 0.0063777  ,  0.776405   ])
212     , -445.347    , array([ 0.0063777  ,  0.777182   ])
214     , -445.344    , array([ 0.0063777  ,  0.776405   ])
216     , -445.347    , array([ 0.0063777  ,  0.777182   ])
218     , -445.344    , array([ 0.0063777  ,  0.776405   ])
220     , -445.347    , array([ 0.0063777  ,  0.777182   ])
222     , -445.344    , array([ 0.0063777  ,  0.776405   ])
224     , -445.347    , array([ 0.0063777  ,  0.777182   ])
226     , -445.344    , array([ 0.0063777  ,  0.776405   ])
228     , -445.347    , array([ 0.0063777  ,  0.777182   ])
230     , -445.344    , array([ 0.0063777  ,  0.776405   ])
232     , -445.347    , array([ 0.0063777  ,  0.777182   ])
234     , -445.344    , array([ 0.0063777  ,  0.776405   ])
236     , -445.347    , array([ 0.0063777  ,  0.777182   ])
238     , -445.344    , array([ 0.0063777  ,  0.776405   ])
240     , -445.347    , array([ 0.0063777  ,  0.777182   ])
242     , -445.344    , array([ 0.0063777  ,  0.776405   ])
244     , -445.347    , array([ 0.0063777  ,  0.777182   ])
246     , -445.344    , array([ 0.0063777  ,  0.776405   ])
248     , -445.347    , array([ 0.0063777  ,  0.777182   ])
250     , -445.344    , array([ 0.0063777  ,  0.776405   ])
252     , -445.347    , array([ 0.0063777  ,  0.777182   ])
254     , -445.344    , array([ 0.0063777  ,  0.776405   ])
256     , -445.347    , array([ 0.0063777  ,  0.777182   ])
258     , -445.344    , array([ 0.0063777  ,  0.776405   ])
260     , -445.347    , array([ 0.0063777  ,  0.777182   ])
262     , -445.344    , array([ 0.0063777  ,  0.776405   ])
264     , -445.347    , array([ 0.0063777  ,  0.777182   ])
266     , -445.344    , array([ 0.0063777  ,  0.776405   ])
268     , -445.347    , array([ 0.0063777  ,  0.777182   ])
270     , -445.344    , array([ 0.0063777  ,  0.776405   ])
272     , -445.347    , array([ 0.0063777  ,  0.777182   ])
274     , -445.344    , array([ 0.0063777  ,  0.776405   ])
276     , -445.347    , array([ 0.0063777  ,  0.777182   ])
278     , -445.344    , array([ 0.0063777  ,  0.776405   ])
280     , -445.347    , array([ 0.0063777  ,  0.777182   ])
282     , -445.344    , array([ 0.0063777  ,  0.776405   ])
284     , -445.347    , array([ 0.0063777  ,  0.777182   ])
286     , -445.344    , array([ 0.0063777  ,  0.776405   ])
288     , -445.347    , array([ 0.0063777  ,  0.777182   ])
290     , -445.344    , array([ 0.0063777  ,  0.776405   ])
292     , -445.347    , array([ 0.0063777  ,  0.777182   ])
294     , -445.344    , array([ 0.0063777  ,  0.776405   ])
296     , -445.347    , array([ 0.0063777  ,  0.777182   ])
298     , -445.344    , array([ 0.0063777  ,  0.776405   ])
300     , -445.347    , array([ 0.0063777  ,  0.777182   ])
302     , -445.344    , array([ 0.0063777  ,  0.776405   ])
304     , -445.347    , array([ 0.0063777  ,  0.777182   ])
306     , -445.344    , array([ 0.0063777  ,  0.776405   ])
308     , -445.347    , array([ 0.0063777  ,  0.777182   ])
310     , -445.344    , array([ 0.0063777  ,  0.776405   ])
312     , -445.347    , array([ 0.0063777  ,  0.777182   ])
314     , -445.344    , array([ 0.0063777  ,  0.776405   ])
316     , -445.347    , array([ 0.0063777  ,  0.777182   ])
318     , -445.344    , array([ 0.0063777  ,  0.776405   ])
320     , -445.347    , array([ 0.0063777  ,  0.777182   ])
322     , -445.344    , array([ 0.0063777  ,  0.776405   ])
324     , -445.347    , array([ 0.0063777  ,  0.777182   ])
326     , -445.344    , array([ 0.0063777  ,  0.776405   ])
328     , -445.347    , array([ 0.0063777  ,  0.777182   ])
330     , -445.344    , array([ 0.0063777  ,  0.776405   ])
332     , -445.347    , array([ 0.0063777  ,  0.777182   ])
334     , -445.344    , array([ 0.0063777  ,  0.776405   ])
336     , -445.347    , array([ 0.0063777  ,  0.777182   ])
338     , -445.344    , array([ 0.0063777  ,  0.776405   ])
340     , -445.347    , array([ 0.0063777  ,  0.777182   ])
342     , -445.344    , array([ 0.0063777  ,  0.776405   ])
344     , -445.347    , array([ 0.0063777  ,  0.777182   ])
346     , -445.344    , array([ 0.0063777  ,  0.776405   ])
348     , -445.347    , array([ 0.0063777  ,  0.777182   ])
350     , -445.344    , array([ 0.0063777  ,  0.776405   ])
352     , -445.347    , array([ 0.0063777  ,  0.777182   ])
354     , -445.344    , array([ 0.0063777  ,  0.776405   ])
356     , -445.347    , array([ 0.0063777  ,  0.777182   ])
358     , -445.344    , array([ 0.0063777  ,  0.776405   ])
360     , -445.347    , array([ 0.0063777  ,  0.777182   ])
362     , -445.344    , array([ 0.0063777  ,  0.776405   ])
364     , -445.347    , array([ 0.0063777  ,  0.777182   ])
366     , -445.344    , array([ 0.0063777  ,  0.776405   ])
368     , -445.347    , array([ 0.0063777  ,  0.777182   ])
370     , -445.344    , array([ 0.0063777  ,  0.776405   ])
372     , -445.347    , array([ 0.0063777  ,  0.777182   ])
374     , -445.344    , array([ 0.0063777  ,  0.776405   ])
376     , -445.347    , array([ 0.0063777  ,  0.777182   ])
378     , -445.344    , array([ 0.0063777  ,  0.776405   ])
380     , -445.347    , array([ 0.0063777  ,  0.777182   ])
382     , -445.344    , array([ 0.0063777  ,  0.776405   ])
384     , -445.347    , array([ 0.0063777  ,  0.777182   ])
386     , -445.344    , array([ 0.0063777  ,  0.776405   ])
388     , -445.347    , array([ 0.0063777  ,  0.777182   ])
390     , -445.344    , array([ 0.0063777  ,  0.776405   ])
392     , -445.347    , array([ 0.0063777  ,  0.777182   ])
394     , -445.344    , array([ 0.0063777  ,  0.776405   ])
396     , -445.347    , array([ 0.0063777  ,  0.777182   ])
398     , -445.344    , array([ 0.0063777  ,  0.776405   ])
400     , -445.347    , array([ 0.0063777  ,  0.777182   ])
402     , -445.344    , array([ 0.0063777  ,  0.776405   ])
404     , -445.347    , array([ 0.0063777  ,  0.777182   ])
406     , -445.344    , array([ 0.0063777  ,  0.776405   ])
408     , -445.347    , array([ 0.0063777  ,  0.777182   ])
410     , -445.344    , array([ 0.0063777  ,  0.776405   ])
412     , -445.347    , array([ 0.0063777  ,  0.777182   ])
414     , -445.344    , array([ 0.00637592 ,  0.776401   ])
416     , -445.344    , array([ 0.00637758 ,  0.776405   ])
418     , -445.344    , array([ 0.00637769 ,  0.776405   ])
420     , -445.344    , array([ 0.0063777  ,  0.776405   ])
422     , -445.344    , array([ 0.0063777  ,  0.776405   ])
424     , -445.344    , array([ 0.0063777  ,  0.776405   ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 35 for model 1D.1Bottleneck.TB1gen.TRec2850gen for pop MN
Beginning optimization ************************************************
2       , -27785.3    , array([ 0.00903948 ,  0.0747342  ])
4       , -27785.2    , array([ 0.00903045 ,  0.0747342  ])
6       , -7689.89    , array([ 0.00884408 ,  0.0272255  ])
8       , -7718.4     , array([ 0.00884408 ,  0.0272527  ])
10      , -1132.63    , array([ 0.00813626 ,  0.000479513])
12      , -1132.63    , array([ 0.00813626 ,  0.000479992])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 36 for model 1D.1Bottleneck.TB1gen.TRec2850gen for pop MN
Beginning optimization ************************************************
2       , -27971.8    , array([ 0.0185997  ,  0.0961379  ])
4       , -27971.8    , array([ 0.0185811  ,  0.0961379  ])
6       , -12853      , array([ 0.0183389  ,  0.263934   ])
8       , -12832      , array([ 0.0183389  ,  0.264198   ])
14      , -12841      , array([ 0.0183387  ,  0.264085   ])
16      , -12819.9    , array([ 0.0183387  ,  0.264349   ])
18      , -12828.9    , array([ 0.0183386  ,  0.264236   ])
20      , -12807.8    , array([ 0.0183386  ,  0.264501   ])
22      , -6170.59    , array([ 0.0178638  ,  1.99042    ])
24      , -6179.53    , array([ 0.0178638  ,  1.99241    ])
26      , -507.762    , array([ 0.0180683  ,  0.828582   ])
28      , -509.274    , array([ 0.0180683  ,  0.829411   ])
34      , -507.758    , array([ 0.0180672  ,  0.82858    ])
36      , -509.27     , array([ 0.0180672  ,  0.829409   ])
38      , -681.818    , array([ 0.00103645 ,  0.747249   ])
40      , -679.24     , array([ 0.00103645 ,  0.747997   ])
42      , -449.701    , array([ 0.00587009 ,  0.795585   ])
44      , -450.11     , array([ 0.00587009 ,  0.796381   ])
50      , -449.701    , array([ 0.00587008 ,  0.795585   ])
52      , -450.11     , array([ 0.00587008 ,  0.796381   ])
54      , -449.701    , array([ 0.00586988 ,  0.795585   ])
56      , -450.109    , array([ 0.00586988 ,  0.796381   ])
62      , -449.701    , array([ 0.00586988 ,  0.795585   ])
64      , -450.109    , array([ 0.00586988 ,  0.796381   ])
66      , -449.701    , array([ 0.00586983 ,  0.795585   ])
68      , -450.109    , array([ 0.00586983 ,  0.796381   ])
70      , -890.543    , array([ 0.000541433,  0.797175   ])
72      , -887.724    , array([ 0.000541433,  0.797972   ])
74      , -445.861    , array([ 0.00348934 ,  0.795932   ])
76      , -445.93     , array([ 0.00348934 ,  0.796728   ])
78      , -445.737    , array([ 0.00377888 ,  0.793708   ])
80      , -445.82     , array([ 0.00377888 ,  0.794502   ])
82      , -445.552    , array([ 0.0040747  ,  0.790294   ])
84      , -445.614    , array([ 0.0040747  ,  0.791085   ])
86      , -445.375    , array([ 0.00475592 ,  0.783611   ])
88      , -445.388    , array([ 0.00475592 ,  0.784395   ])
90      , -445.363    , array([ 0.00522188 ,  0.780145   ])
92      , -445.351    , array([ 0.00522188 ,  0.780925   ])
94      , -445.364    , array([ 0.00548471 ,  0.77855    ])
96      , -445.342    , array([ 0.00548471 ,  0.779329   ])
98      , -445.362    , array([ 0.00528786 ,  0.779737   ])
100     , -445.347    , array([ 0.00528786 ,  0.780517   ])
102     , -445.361    , array([ 0.00531258 ,  0.779611   ])
104     , -445.346    , array([ 0.00531258 ,  0.780391   ])
106     , -445.358    , array([ 0.00541263 ,  0.77911    ])
108     , -445.341    , array([ 0.00541263 ,  0.779889   ])
110     , -445.355    , array([ 0.00549782 ,  0.778752   ])
112     , -445.338    , array([ 0.00549782 ,  0.779531   ])
114     , -445.352    , array([ 0.00557039 ,  0.778487   ])
116     , -445.336    , array([ 0.00557039 ,  0.779266   ])
118     , -445.348    , array([ 0.00564376 ,  0.778248   ])
120     , -445.334    , array([ 0.00564376 ,  0.779027   ])
122     , -445.345    , array([ 0.00572519 ,  0.778005   ])
124     , -445.332    , array([ 0.00572519 ,  0.778784   ])
126     , -445.342    , array([ 0.00581788 ,  0.777746   ])
128     , -445.332    , array([ 0.00581788 ,  0.778524   ])
130     , -445.341    , array([ 0.00591791 ,  0.777478   ])
132     , -445.332    , array([ 0.00591791 ,  0.778256   ])
134     , -445.34     , array([ 0.00600663 ,  0.777248   ])
136     , -445.333    , array([ 0.00600663 ,  0.778025   ])
138     , -445.34     , array([ 0.00605143 ,  0.777133   ])
140     , -445.334    , array([ 0.00605143 ,  0.77791    ])
142     , -445.34     , array([ 0.00605413 ,  0.777126   ])
144     , -445.334    , array([ 0.00605413 ,  0.777903   ])
146     , -445.34     , array([ 0.00605196 ,  0.777132   ])
148     , -445.334    , array([ 0.00605196 ,  0.777909   ])
150     , -445.34     , array([ 0.00605153 ,  0.777133   ])
152     , -445.334    , array([ 0.00605153 ,  0.77791    ])
154     , -445.34     , array([ 0.00605145 ,  0.777133   ])
156     , -445.334    , array([ 0.00605145 ,  0.77791    ])
158     , -445.34     , array([ 0.00605143 ,  0.777133   ])
160     , -445.334    , array([ 0.00605143 ,  0.77791    ])
162     , -445.34     , array([ 0.00605143 ,  0.777133   ])
164     , -445.334    , array([ 0.00605143 ,  0.77791    ])
166     , -445.34     , array([ 0.00605143 ,  0.777133   ])
168     , -445.334    , array([ 0.00605143 ,  0.77791    ])
170     , -445.34     , array([ 0.00605143 ,  0.777133   ])
172     , -445.334    , array([ 0.00605143 ,  0.77791    ])
174     , -445.34     , array([ 0.00605143 ,  0.777133   ])
176     , -445.334    , array([ 0.00605143 ,  0.77791    ])
178     , -445.34     , array([ 0.00605143 ,  0.777133   ])
180     , -445.334    , array([ 0.00605143 ,  0.77791    ])
182     , -445.34     , array([ 0.00605143 ,  0.777133   ])
184     , -445.334    , array([ 0.00605143 ,  0.77791    ])
186     , -445.34     , array([ 0.00605143 ,  0.777133   ])
188     , -445.334    , array([ 0.00605143 ,  0.77791    ])
190     , -445.34     , array([ 0.00605143 ,  0.777133   ])
192     , -445.334    , array([ 0.00605143 ,  0.77791    ])
194     , -445.34     , array([ 0.00605143 ,  0.777133   ])
196     , -445.334    , array([ 0.00605143 ,  0.77791    ])
198     , -445.34     , array([ 0.00605143 ,  0.777133   ])
200     , -445.334    , array([ 0.00605143 ,  0.77791    ])
202     , -445.34     , array([ 0.00605143 ,  0.777133   ])
204     , -445.334    , array([ 0.00605143 ,  0.77791    ])
206     , -445.34     , array([ 0.00605143 ,  0.777133   ])
208     , -445.334    , array([ 0.00605143 ,  0.77791    ])
210     , -445.34     , array([ 0.00605143 ,  0.777133   ])
212     , -445.334    , array([ 0.00605143 ,  0.77791    ])
214     , -445.34     , array([ 0.00605143 ,  0.777133   ])
216     , -445.334    , array([ 0.00605143 ,  0.77791    ])
218     , -445.34     , array([ 0.0060527  ,  0.77713    ])
220     , -445.34     , array([ 0.00605163 ,  0.777132   ])
222     , -445.34     , array([ 0.00605146 ,  0.777133   ])
224     , -445.34     , array([ 0.00605143 ,  0.777133   ])
226     , -445.34     , array([ 0.00605143 ,  0.777133   ])
228     , -445.34     , array([ 0.00605143 ,  0.777133   ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 37 for model 1D.1Bottleneck.TB1gen.TRec2850gen for pop MN
Beginning optimization ************************************************
2       , -24236.5    , array([ 0.0158949  ,  0.0519208  ])
4       , -24236.4    , array([ 0.0158791  ,  0.0519208  ])
6       , -947.672    , array([ 0.0158301  ,  0.0189106  ])
8       , -954.233    , array([ 0.0158301  ,  0.0189296  ])
14      , -947.623    , array([ 0.015834   ,  0.0189105  ])
16      , -954.184    , array([ 0.015834   ,  0.0189294  ])
22      , -947.62     , array([ 0.0158343  ,  0.0189105  ])
24      , -954.181    , array([ 0.0158343  ,  0.0189294  ])
26      , -526.578    , array([ 1.31173    ,  0.01652    ])
28      , -527.016    , array([ 1.31173    ,  0.0165366  ])
30      , -523.78     , array([ 2.30443    ,  0.0163552  ])
32      , -523.933    , array([ 2.30443    ,  0.0163716  ])
34      , -523.419    , array([ 3.11827    ,  0.0162676  ])
36      , -523.429    , array([ 3.11827    ,  0.0162839  ])
38      , -523.422    , array([ 3.18122    ,  0.0162618  ])
40      , -523.422    , array([ 3.18122    ,  0.0162781  ])
42      , -523.419    , array([ 3.12586    ,  0.0162669  ])
44      , -523.428    , array([ 3.12586    ,  0.0162832  ])
46      , -523.419    , array([ 3.11932    ,  0.0162675  ])
48      , -523.429    , array([ 3.11932    ,  0.0162838  ])
50      , -523.419    , array([ 3.11842    ,  0.0162676  ])
52      , -523.429    , array([ 3.11842    ,  0.0162839  ])
54      , -523.419    , array([ 3.11829    ,  0.0162676  ])
56      , -523.429    , array([ 3.11829    ,  0.0162839  ])
58      , -523.419    , array([ 3.11827    ,  0.0162676  ])
60      , -523.429    , array([ 3.11827    ,  0.0162839  ])
62      , -523.419    , array([ 3.11827    ,  0.0162676  ])
64      , -523.429    , array([ 3.11827    ,  0.0162839  ])
66      , -523.419    , array([ 3.11827    ,  0.0162676  ])
68      , -523.429    , array([ 3.11827    ,  0.0162839  ])
70      , -523.419    , array([ 3.11827    ,  0.0162676  ])
72      , -523.429    , array([ 3.11827    ,  0.0162839  ])
74      , -523.419    , array([ 3.11827    ,  0.0162676  ])
76      , -523.429    , array([ 3.11827    ,  0.0162839  ])
78      , -523.419    , array([ 3.11827    ,  0.0162676  ])
80      , -523.429    , array([ 3.11827    ,  0.0162839  ])
82      , -523.419    , array([ 3.11827    ,  0.0162676  ])
84      , -523.429    , array([ 3.11827    ,  0.0162839  ])
86      , -523.419    , array([ 3.11827    ,  0.0162676  ])
88      , -523.429    , array([ 3.11827    ,  0.0162839  ])
90      , -523.419    , array([ 3.11827    ,  0.0162676  ])
92      , -523.429    , array([ 3.11827    ,  0.0162839  ])
94      , -523.419    , array([ 3.11827    ,  0.0162676  ])
96      , -523.429    , array([ 3.11827    ,  0.0162839  ])
98      , -523.419    , array([ 3.11827    ,  0.0162676  ])
100     , -523.429    , array([ 3.11827    ,  0.0162839  ])
102     , -523.419    , array([ 3.11827    ,  0.0162676  ])
104     , -523.429    , array([ 3.11827    ,  0.0162839  ])
106     , -523.419    , array([ 3.11827    ,  0.0162676  ])
108     , -523.429    , array([ 3.11827    ,  0.0162839  ])
110     , -523.419    , array([ 3.11827    ,  0.0162676  ])
112     , -523.429    , array([ 3.11827    ,  0.0162839  ])
114     , -523.419    , array([ 3.11827    ,  0.0162676  ])
116     , -523.429    , array([ 3.11827    ,  0.0162839  ])
118     , -523.419    , array([ 3.11827    ,  0.0162676  ])
120     , -523.429    , array([ 3.11827    ,  0.0162839  ])
122     , -523.419    , array([ 3.11827    ,  0.0162676  ])
124     , -523.429    , array([ 3.11827    ,  0.0162839  ])
126     , -523.419    , array([ 3.11827    ,  0.0162676  ])
128     , -523.429    , array([ 3.11827    ,  0.0162839  ])
130     , -523.419    , array([ 3.11827    ,  0.0162676  ])
132     , -523.429    , array([ 3.11827    ,  0.0162839  ])
134     , -523.419    , array([ 3.11827    ,  0.0162676  ])
136     , -523.429    , array([ 3.11827    ,  0.0162839  ])
138     , -523.419    , array([ 3.11827    ,  0.0162676  ])
140     , -523.429    , array([ 3.11827    ,  0.0162839  ])
142     , -523.419    , array([ 3.11827    ,  0.0162676  ])
144     , -523.429    , array([ 3.11827    ,  0.0162839  ])
146     , -523.419    , array([ 3.11827    ,  0.0162676  ])
148     , -523.429    , array([ 3.11827    ,  0.0162839  ])
150     , -523.419    , array([ 3.11827    ,  0.0162676  ])
152     , -523.429    , array([ 3.11827    ,  0.0162839  ])
154     , -523.419    , array([ 3.11827    ,  0.0162676  ])
156     , -523.429    , array([ 3.11827    ,  0.0162839  ])
158     , -523.419    , array([ 3.11827    ,  0.0162676  ])
160     , -523.429    , array([ 3.11827    ,  0.0162839  ])
162     , -523.419    , array([ 3.11827    ,  0.0162676  ])
164     , -523.429    , array([ 3.11827    ,  0.0162839  ])
166     , -523.419    , array([ 3.11827    ,  0.0162676  ])
168     , -523.429    , array([ 3.11827    ,  0.0162839  ])
170     , -523.419    , array([ 3.11827    ,  0.0162676  ])
172     , -523.429    , array([ 3.11827    ,  0.0162839  ])
174     , -523.419    , array([ 3.11827    ,  0.0162676  ])
176     , -523.429    , array([ 3.11827    ,  0.0162839  ])
178     , -523.419    , array([ 3.11827    ,  0.0162676  ])
180     , -523.429    , array([ 3.11827    ,  0.0162839  ])
182     , -523.419    , array([ 3.11827    ,  0.0162676  ])
184     , -523.429    , array([ 3.11827    ,  0.0162839  ])
186     , -523.419    , array([ 3.11827    ,  0.0162676  ])
188     , -523.429    , array([ 3.11827    ,  0.0162839  ])
190     , -523.419    , array([ 3.11827    ,  0.0162676  ])
192     , -523.429    , array([ 3.11827    ,  0.0162839  ])
194     , -523.419    , array([ 3.11827    ,  0.0162676  ])
196     , -523.429    , array([ 3.11827    ,  0.0162839  ])
198     , -523.419    , array([ 3.11827    ,  0.0162676  ])
200     , -523.429    , array([ 3.11827    ,  0.0162839  ])
202     , -523.419    , array([ 3.11827    ,  0.0162676  ])
204     , -523.429    , array([ 3.11827    ,  0.0162839  ])
206     , -523.419    , array([ 3.11827    ,  0.0162676  ])
208     , -523.429    , array([ 3.11827    ,  0.0162839  ])
210     , -523.419    , array([ 3.11827    ,  0.0162676  ])
212     , -523.429    , array([ 3.11827    ,  0.0162839  ])
214     , -523.419    , array([ 3.11827    ,  0.0162676  ])
216     , -523.429    , array([ 3.11827    ,  0.0162839  ])
218     , -523.419    , array([ 3.11827    ,  0.0162676  ])
220     , -523.429    , array([ 3.11827    ,  0.0162839  ])
222     , -523.419    , array([ 3.11827    ,  0.0162676  ])
224     , -523.429    , array([ 3.11827    ,  0.0162839  ])
226     , -523.419    , array([ 3.11827    ,  0.0162676  ])
228     , -523.429    , array([ 3.11827    ,  0.0162839  ])
230     , -523.419    , array([ 3.11827    ,  0.0162676  ])
232     , -523.429    , array([ 3.11827    ,  0.0162839  ])
234     , -523.419    , array([ 3.11827    ,  0.0162676  ])
236     , -523.429    , array([ 3.11827    ,  0.0162839  ])
238     , -523.419    , array([ 3.11827    ,  0.0162676  ])
240     , -523.429    , array([ 3.11827    ,  0.0162839  ])
242     , -523.419    , array([ 3.11827    ,  0.0162676  ])
244     , -523.429    , array([ 3.11827    ,  0.0162839  ])
246     , -523.419    , array([ 3.11827    ,  0.0162676  ])
248     , -523.429    , array([ 3.11827    ,  0.0162839  ])
250     , -523.419    , array([ 3.11827    ,  0.0162676  ])
252     , -523.429    , array([ 3.11827    ,  0.0162839  ])
254     , -523.419    , array([ 3.11827    ,  0.0162676  ])
256     , -523.429    , array([ 3.11827    ,  0.0162839  ])
258     , -523.419    , array([ 3.11827    ,  0.0162676  ])
260     , -523.429    , array([ 3.11827    ,  0.0162839  ])
262     , -523.419    , array([ 3.11827    ,  0.0162676  ])
264     , -523.429    , array([ 3.11827    ,  0.0162839  ])
266     , -523.419    , array([ 3.11827    ,  0.0162676  ])
268     , -523.429    , array([ 3.11827    ,  0.0162839  ])
270     , -523.419    , array([ 3.11827    ,  0.0162676  ])
272     , -523.429    , array([ 3.11827    ,  0.0162839  ])
274     , -523.419    , array([ 3.11827    ,  0.0162676  ])
276     , -523.429    , array([ 3.11827    ,  0.0162839  ])
278     , -523.419    , array([ 3.11827    ,  0.0162676  ])
280     , -523.429    , array([ 3.11827    ,  0.0162839  ])
282     , -523.419    , array([ 3.11827    ,  0.0162676  ])
284     , -523.429    , array([ 3.11827    ,  0.0162839  ])
286     , -523.419    , array([ 3.11827    ,  0.0162676  ])
288     , -523.429    , array([ 3.11827    ,  0.0162839  ])
290     , -523.419    , array([ 3.11827    ,  0.0162676  ])
292     , -523.429    , array([ 3.11827    ,  0.0162839  ])
294     , -523.419    , array([ 3.11827    ,  0.0162676  ])
296     , -523.429    , array([ 3.11827    ,  0.0162839  ])
298     , -523.419    , array([ 3.11827    ,  0.0162676  ])
300     , -523.429    , array([ 3.11827    ,  0.0162839  ])
302     , -523.419    , array([ 3.11827    ,  0.0162676  ])
304     , -523.429    , array([ 3.11827    ,  0.0162839  ])
306     , -523.419    , array([ 3.11827    ,  0.0162676  ])
308     , -523.429    , array([ 3.11827    ,  0.0162839  ])
310     , -523.42     , array([ 3.13505    ,  0.0162661  ])
312     , -523.419    , array([ 3.11977    ,  0.0162675  ])
314     , -523.419    , array([ 3.11841    ,  0.0162676  ])
316     , -523.419    , array([ 3.11828    ,  0.0162676  ])
318     , -523.419    , array([ 3.11827    ,  0.0162676  ])
320     , -523.419    , array([ 3.11827    ,  0.0162676  ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 38 for model 1D.1Bottleneck.TB1gen.TRec2850gen for pop MN
Beginning optimization ************************************************
2       , -20484.8    , array([ 0.0143013  ,  0.182766   ])
4       , -20484.8    , array([ 0.014287   ,  0.182766   ])
6       , -2376.29    , array([ 0.0142854  ,  0.501803   ])
8       , -2366.82    , array([ 0.0142854  ,  0.502305   ])
14      , -2375.13    , array([ 0.0143673  ,  0.501844   ])
16      , -2365.66    , array([ 0.0143673  ,  0.502347   ])
18      , -2360.08    , array([ 0.0154896  ,  0.502397   ])
20      , -2350.64    , array([ 0.0154896  ,  0.5029     ])
26      , -2359.8     , array([ 0.0155111  ,  0.502408   ])
28      , -2350.36    , array([ 0.0155111  ,  0.50291    ])
30      , -2356.19    , array([ 0.0157979  ,  0.502542   ])
32      , -2346.76    , array([ 0.0157979  ,  0.503045   ])
38      , -2356.13    , array([ 0.0158034  ,  0.502545   ])
40      , -2346.7     , array([ 0.0158034  ,  0.503048   ])
42      , -2355.23    , array([ 0.0158754  ,  0.502578   ])
44      , -2345.8     , array([ 0.0158754  ,  0.503081   ])
50      , -2355.22    , array([ 0.0158768  ,  0.502579   ])
52      , -2345.79    , array([ 0.0158768  ,  0.503082   ])
54      , -2354.99    , array([ 0.0158949  ,  0.502587   ])
56      , -2345.57    , array([ 0.0158949  ,  0.50309    ])
62      , -2354.99    , array([ 0.0158952  ,  0.502587   ])
64      , -2345.56    , array([ 0.0158952  ,  0.50309    ])
66      , -2354.93    , array([ 0.0158997  ,  0.50259    ])
68      , -2345.51    , array([ 0.0158997  ,  0.503092   ])
70      , -1783.46    , array([ 0.92022    ,  0.53335    ])
72      , -1775.58    , array([ 0.92022    ,  0.533884   ])
74      , -863.96     , array([ 0.0913931  ,  0.621032   ])
76      , -859.669    , array([ 0.0913931  ,  0.621654   ])
78      , -456.049    , array([ 0.0165784  ,  0.740253   ])
80      , -455.425    , array([ 0.0165784  ,  0.740994   ])
82      , -446.051    , array([ 0.0196375  ,  0.760743   ])
84      , -445.992    , array([ 0.0196375  ,  0.761504   ])
86      , -445.923    , array([ 0.0192065  ,  0.763087   ])
88      , -445.92     , array([ 0.0192065  ,  0.763851   ])
90      , -445.902    , array([ 0.0184857  ,  0.763556   ])
92      , -445.905    , array([ 0.0184857  ,  0.76432    ])
94      , -445.828    , array([ 0.0158631  ,  0.765433   ])
96      , -445.85     , array([ 0.0158631  ,  0.766199   ])
98      , -445.541    , array([ 0.00932367 ,  0.770602   ])
100     , -445.555    , array([ 0.00932367 ,  0.771373   ])
102     , -541.117    , array([ 0.00111271 ,  0.791632   ])
104     , -539.613    , array([ 0.00111271 ,  0.792424   ])
106     , -445.515    , array([ 0.00577688 ,  0.775288   ])
108     , -445.442    , array([ 0.00577688 ,  0.776064   ])
110     , -445.451    , array([ 0.00806617 ,  0.772018   ])
112     , -445.447    , array([ 0.00806617 ,  0.77279    ])
114     , -445.411    , array([ 0.00688009 ,  0.773574   ])
116     , -445.38     , array([ 0.00688009 ,  0.774348   ])
118     , -445.494    , array([ 0.00870555 ,  0.771525   ])
120     , -445.507    , array([ 0.00870555 ,  0.772297   ])
122     , -445.41     , array([ 0.00708669 ,  0.773316   ])
124     , -445.385    , array([ 0.00708669 ,  0.77409    ])
126     , -445.406    , array([ 0.00706798 ,  0.773415   ])
128     , -445.383    , array([ 0.00706798 ,  0.774188   ])
130     , -445.394    , array([ 0.00699366 ,  0.773808   ])
132     , -445.376    , array([ 0.00699366 ,  0.774583   ])
134     , -445.351    , array([ 0.00648639 ,  0.775876   ])
136     , -445.349    , array([ 0.00648639 ,  0.776653   ])
138     , -445.345    , array([ 0.00636211 ,  0.776335   ])
140     , -445.345    , array([ 0.00636211 ,  0.777112   ])
142     , -445.345    , array([ 0.00635996 ,  0.776356   ])
144     , -445.345    , array([ 0.00635996 ,  0.777133   ])
146     , -445.345    , array([ 0.00635967 ,  0.776357   ])
148     , -445.345    , array([ 0.00635967 ,  0.777134   ])
150     , -445.345    , array([ 0.00635968 ,  0.776357   ])
152     , -445.345    , array([ 0.00635968 ,  0.777134   ])
154     , -445.345    , array([ 0.00635967 ,  0.776357   ])
156     , -445.345    , array([ 0.00635967 ,  0.777134   ])
158     , -445.345    , array([ 0.00635967 ,  0.776357   ])
160     , -445.345    , array([ 0.00635967 ,  0.777134   ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 39 for model 1D.1Bottleneck.TB1gen.TRec2850gen for pop MN
Beginning optimization ************************************************
2       , -20577.7    , array([ 0.00646    ,  0.18184    ])
4       , -20577.7    , array([ 0.00645354 ,  0.18184    ])
6       , -2503.94    , array([ 0.00645073 ,  0.499261   ])
8       , -2494.19    , array([ 0.00645073 ,  0.499761   ])
14      , -2501.72    , array([ 0.00649293 ,  0.499327   ])
16      , -2491.97    , array([ 0.00649293 ,  0.499827   ])
18      , -2471.68    , array([ 0.00710615 ,  0.500238   ])
20      , -2462.07    , array([ 0.00710615 ,  0.500739   ])
26      , -2471.17    , array([ 0.0071172  ,  0.500254   ])
28      , -2461.56    , array([ 0.0071172  ,  0.500755   ])
30      , -2464.18    , array([ 0.00727266 ,  0.500473   ])
32      , -2454.58    , array([ 0.00727266 ,  0.500973   ])
38      , -2464.05    , array([ 0.00727545 ,  0.500476   ])
40      , -2454.46    , array([ 0.00727545 ,  0.500977   ])
42      , -2462.33    , array([ 0.00731447 ,  0.500531   ])
44      , -2452.74    , array([ 0.00731447 ,  0.501031   ])
50      , -2462.3     , array([ 0.00731517 ,  0.500531   ])
52      , -2452.71    , array([ 0.00731517 ,  0.501032   ])
54      , -2461.87    , array([ 0.00732494 ,  0.500545   ])
56      , -2452.28    , array([ 0.00732494 ,  0.501046   ])
58      , -1278.18    , array([ 5.88163    ,  0.572964   ])
60      , -1272.03    , array([ 5.88163    ,  0.573537   ])
62      , -585.184    , array([ 0.0771752  ,  0.85673    ])
64      , -587.426    , array([ 0.0771752  ,  0.857587   ])
66      , -449.519    , array([ 0.188408   ,  0.771246   ])
68      , -449.874    , array([ 0.188408   ,  0.772018   ])
70      , -446.518    , array([ 0.232019   ,  0.755808   ])
72      , -446.483    , array([ 0.232019   ,  0.756564   ])
74      , -446.467    , array([ 0.226877   ,  0.757206   ])
76      , -446.468    , array([ 0.226877   ,  0.757964   ])
78      , -446.467    , array([ 0.226126   ,  0.757222   ])
80      , -446.468    , array([ 0.226126   ,  0.75798    ])
82      , -446.466    , array([ 0.223147   ,  0.757285   ])
84      , -446.468    , array([ 0.223147   ,  0.758043   ])
86      , -446.46     , array([ 0.207828   ,  0.757483   ])
88      , -446.466    , array([ 0.207828   ,  0.758241   ])
90      , -446.443    , array([ 0.164344   ,  0.757998   ])
92      , -446.458    , array([ 0.164344   ,  0.758756   ])
94      , -446.337    , array([ 0.0642621  ,  0.760061   ])
96      , -446.374    , array([ 0.0642621  ,  0.760822   ])
98      , -524.199    , array([ 0.0015023  ,  0.768371   ])
100     , -522.689    , array([ 0.0015023  ,  0.769139   ])
102     , -445.992    , array([ 0.0224445  ,  0.762379   ])
104     , -445.995    , array([ 0.0224445  ,  0.763142   ])
106     , -447.871    , array([ 0.00597639 ,  0.765305   ])
108     , -447.571    , array([ 0.00597639 ,  0.766071   ])
110     , -445.875    , array([ 0.0156397  ,  0.763177   ])
112     , -445.837    , array([ 0.0156397  ,  0.763941   ])
114     , -445.867    , array([ 0.0145848  ,  0.763331   ])
116     , -445.819    , array([ 0.0145848  ,  0.764095   ])
122     , -445.867    , array([ 0.0145848  ,  0.763331   ])
124     , -445.819    , array([ 0.0145848  ,  0.764095   ])
126     , -445.867    , array([ 0.0145848  ,  0.763331   ])
128     , -445.819    , array([ 0.0145848  ,  0.764095   ])
130     , -1121.3     , array([ 0.000474873,  0.771535   ])
132     , -1117.78    , array([ 0.000474873,  0.772307   ])
134     , -447.331    , array([ 0.00644349 ,  0.76528    ])
136     , -447.067    , array([ 0.00644349 ,  0.766046   ])
138     , -445.866    , array([ 0.0138172  ,  0.76346    ])
140     , -445.81     , array([ 0.0138172  ,  0.764224   ])
142     , -445.866    , array([ 0.0143176  ,  0.763375   ])
144     , -445.815    , array([ 0.0143176  ,  0.764139   ])
146     , -445.864    , array([ 0.0142737  ,  0.763409   ])
148     , -445.813    , array([ 0.0142737  ,  0.764173   ])
150     , -445.855    , array([ 0.0140996  ,  0.763545   ])
152     , -445.805    , array([ 0.0140996  ,  0.764309   ])
154     , -445.821    , array([ 0.0134243  ,  0.764088   ])
156     , -445.774    , array([ 0.0134243  ,  0.764852   ])
158     , -445.707    , array([ 0.0110313  ,  0.766262   ])
160     , -445.664    , array([ 0.0110313  ,  0.767029   ])
162     , -445.458    , array([ 0.00778961 ,  0.771687   ])
164     , -445.433    , array([ 0.00778961 ,  0.772459   ])
166     , -445.515    , array([ 0.0050282  ,  0.778841   ])
168     , -445.45     , array([ 0.0050282  ,  0.779621   ])
170     , -445.39     , array([ 0.00637869 ,  0.774945   ])
172     , -445.358    , array([ 0.00637869 ,  0.77572    ])
174     , -445.374    , array([ 0.00625239 ,  0.778587   ])
176     , -445.419    , array([ 0.00625239 ,  0.779366   ])
178     , -445.344    , array([ 0.00632556 ,  0.776466   ])
180     , -445.344    , array([ 0.00632556 ,  0.777243   ])
182     , -445.345    , array([ 0.00636207 ,  0.776351   ])
184     , -445.345    , array([ 0.00636207 ,  0.777127   ])
186     , -445.344    , array([ 0.00632591 ,  0.776465   ])
188     , -445.344    , array([ 0.00632591 ,  0.777242   ])
190     , -445.344    , array([ 0.00632557 ,  0.776466   ])
192     , -445.344    , array([ 0.00632557 ,  0.777243   ])
194     , -445.344    , array([ 0.00632556 ,  0.776466   ])
196     , -445.344    , array([ 0.00632556 ,  0.777243   ])
198     , -445.344    , array([ 0.00632556 ,  0.776466   ])
200     , -445.344    , array([ 0.00632556 ,  0.777243   ])
202     , -445.344    , array([ 0.00632556 ,  0.776466   ])
204     , -445.344    , array([ 0.00632556 ,  0.777243   ])
206     , -445.344    , array([ 0.00632556 ,  0.776466   ])
208     , -445.344    , array([ 0.00632556 ,  0.777243   ])
210     , -445.344    , array([ 0.00632556 ,  0.776466   ])
212     , -445.344    , array([ 0.00632556 ,  0.777243   ])
214     , -445.344    , array([ 0.00632556 ,  0.776466   ])
216     , -445.344    , array([ 0.00632556 ,  0.777243   ])
218     , -445.344    , array([ 0.00632556 ,  0.776466   ])
220     , -445.344    , array([ 0.00632556 ,  0.777243   ])
222     , -445.344    , array([ 0.00632556 ,  0.776466   ])
224     , -445.344    , array([ 0.00632556 ,  0.777243   ])
226     , -445.344    , array([ 0.00632556 ,  0.776466   ])
228     , -445.344    , array([ 0.00632556 ,  0.777243   ])
230     , -445.344    , array([ 0.00632556 ,  0.776466   ])
232     , -445.344    , array([ 0.00632556 ,  0.777243   ])
234     , -445.344    , array([ 0.00632556 ,  0.776466   ])
236     , -445.344    , array([ 0.00632556 ,  0.777243   ])
238     , -445.344    , array([ 0.00632556 ,  0.776466   ])
240     , -445.344    , array([ 0.00632556 ,  0.777243   ])
242     , -445.344    , array([ 0.00632556 ,  0.776466   ])
244     , -445.344    , array([ 0.00632556 ,  0.777243   ])
246     , -445.344    , array([ 0.00632556 ,  0.776466   ])
248     , -445.344    , array([ 0.00632556 ,  0.777243   ])
250     , -445.344    , array([ 0.00632556 ,  0.776466   ])
252     , -445.344    , array([ 0.00632556 ,  0.777243   ])
254     , -445.344    , array([ 0.00632556 ,  0.776466   ])
256     , -445.344    , array([ 0.00632556 ,  0.777243   ])
258     , -445.344    , array([ 0.00632556 ,  0.776466   ])
260     , -445.344    , array([ 0.00632556 ,  0.777243   ])
262     , -445.344    , array([ 0.00632556 ,  0.776466   ])
264     , -445.344    , array([ 0.00632556 ,  0.777243   ])
266     , -445.344    , array([ 0.00632556 ,  0.776466   ])
268     , -445.344    , array([ 0.00632556 ,  0.777243   ])
270     , -445.344    , array([ 0.00632556 ,  0.776466   ])
272     , -445.344    , array([ 0.00632556 ,  0.777243   ])
274     , -445.344    , array([ 0.00632556 ,  0.776466   ])
276     , -445.344    , array([ 0.00632556 ,  0.777243   ])
278     , -445.344    , array([ 0.00632556 ,  0.776466   ])
280     , -445.344    , array([ 0.00632556 ,  0.777243   ])
282     , -445.344    , array([ 0.00632556 ,  0.776466   ])
284     , -445.344    , array([ 0.00632556 ,  0.777243   ])
286     , -445.344    , array([ 0.00632556 ,  0.776466   ])
288     , -445.344    , array([ 0.00632556 ,  0.777243   ])
290     , -445.344    , array([ 0.00632556 ,  0.776466   ])
292     , -445.344    , array([ 0.00632556 ,  0.777243   ])
294     , -445.344    , array([ 0.00632556 ,  0.776466   ])
296     , -445.344    , array([ 0.00632556 ,  0.777243   ])
298     , -445.344    , array([ 0.00632556 ,  0.776466   ])
300     , -445.344    , array([ 0.00632556 ,  0.777243   ])
302     , -445.344    , array([ 0.00632556 ,  0.776466   ])
304     , -445.344    , array([ 0.00632556 ,  0.777243   ])
306     , -445.344    , array([ 0.00632556 ,  0.776466   ])
308     , -445.344    , array([ 0.00632556 ,  0.777243   ])
310     , -445.344    , array([ 0.00632556 ,  0.776466   ])
312     , -445.344    , array([ 0.00632556 ,  0.777243   ])
314     , -445.344    , array([ 0.00632556 ,  0.776466   ])
316     , -445.344    , array([ 0.00632556 ,  0.777243   ])
318     , -445.344    , array([ 0.00632556 ,  0.776466   ])
320     , -445.344    , array([ 0.00632556 ,  0.777243   ])
322     , -445.344    , array([ 0.00632556 ,  0.776466   ])
324     , -445.344    , array([ 0.00632556 ,  0.777243   ])
326     , -445.344    , array([ 0.00632556 ,  0.776466   ])
328     , -445.344    , array([ 0.00632556 ,  0.777243   ])
330     , -445.344    , array([ 0.00632556 ,  0.776466   ])
332     , -445.344    , array([ 0.00632556 ,  0.777243   ])
334     , -445.344    , array([ 0.00632556 ,  0.776466   ])
336     , -445.344    , array([ 0.00632556 ,  0.777243   ])
338     , -445.344    , array([ 0.00632556 ,  0.776466   ])
340     , -445.344    , array([ 0.00632556 ,  0.777243   ])
342     , -445.344    , array([ 0.00632556 ,  0.776466   ])
344     , -445.344    , array([ 0.00632556 ,  0.777243   ])
346     , -445.344    , array([ 0.00632556 ,  0.776466   ])
348     , -445.344    , array([ 0.00632556 ,  0.777243   ])
350     , -445.344    , array([ 0.00632556 ,  0.776466   ])
352     , -445.344    , array([ 0.00632556 ,  0.777243   ])
354     , -445.344    , array([ 0.00632556 ,  0.776466   ])
356     , -445.344    , array([ 0.00632556 ,  0.777243   ])
358     , -445.344    , array([ 0.00632556 ,  0.776466   ])
360     , -445.344    , array([ 0.00632556 ,  0.777243   ])
362     , -445.344    , array([ 0.00632556 ,  0.776466   ])
364     , -445.344    , array([ 0.00632556 ,  0.777243   ])
366     , -445.344    , array([ 0.00632556 ,  0.776466   ])
368     , -445.344    , array([ 0.00632556 ,  0.777243   ])
370     , -445.344    , array([ 0.00632556 ,  0.776466   ])
372     , -445.344    , array([ 0.00632556 ,  0.777243   ])
374     , -445.344    , array([ 0.00632556 ,  0.776466   ])
376     , -445.344    , array([ 0.00632556 ,  0.777243   ])
378     , -445.344    , array([ 0.00632556 ,  0.776466   ])
380     , -445.344    , array([ 0.00632556 ,  0.777243   ])
382     , -445.344    , array([ 0.00632556 ,  0.776466   ])
384     , -445.344    , array([ 0.00632556 ,  0.777243   ])
386     , -445.344    , array([ 0.00632556 ,  0.776466   ])
388     , -445.344    , array([ 0.00632556 ,  0.777243   ])
390     , -445.344    , array([ 0.00634379 ,  0.776408   ])
392     , -445.344    , array([ 0.00633011 ,  0.776452   ])
394     , -445.344    , array([ 0.0063267  ,  0.776462   ])
396     , -445.344    , array([ 0.00632585 ,  0.776465   ])
398     , -445.344    , array([ 0.00632563 ,  0.776466   ])
400     , -445.344    , array([ 0.00632558 ,  0.776466   ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 40 for model 1D.1Bottleneck.TB1gen.TRec2850gen for pop MN
Beginning optimization ************************************************
2       , -24871.6    , array([ 0.0108493  ,  0.1398     ])
4       , -24871.6    , array([ 0.0108385  ,  0.1398     ])
6       , -5802.1     , array([ 0.0108042  ,  0.383833   ])
8       , -5786.3     , array([ 0.0108042  ,  0.384217   ])
14      , -5795.31    , array([ 0.0108042  ,  0.383998   ])
16      , -5779.52    , array([ 0.0108042  ,  0.384382   ])
18      , -5644.2     , array([ 0.0108039  ,  0.387734   ])
20      , -5628.68    , array([ 0.0108039  ,  0.388122   ])
26      , -5642.57    , array([ 0.0108039  ,  0.387775   ])
28      , -5627.05    , array([ 0.0108039  ,  0.388163   ])
30      , -5607.21    , array([ 0.0108038  ,  0.388659   ])
32      , -5591.71    , array([ 0.0108038  ,  0.389048   ])
34      , -1327.51    , array([ 0.0107697  ,  1.06314    ])
36      , -1332.57    , array([ 0.0107697  ,  1.0642     ])
42      , -1327.31    , array([ 0.0107524  ,  1.06313    ])
44      , -1332.37    , array([ 0.0107524  ,  1.0642     ])
46      , -1327.12    , array([ 0.010735   ,  1.06313    ])
48      , -1332.17    , array([ 0.010735   ,  1.06419    ])
54      , -1327.07    , array([ 0.0107307  ,  1.06313    ])
56      , -1332.12    , array([ 0.0107307  ,  1.06419    ])
58      , -1327.02    , array([ 0.0107264  ,  1.06312    ])
60      , -1332.08    , array([ 0.0107264  ,  1.06419    ])
66      , -1327.01    , array([ 0.0107253  ,  1.06312    ])
68      , -1332.06    , array([ 0.0107253  ,  1.06419    ])
70      , -1326.99    , array([ 0.0107242  ,  1.06312    ])
72      , -1332.05    , array([ 0.0107242  ,  1.06419    ])
78      , -1326.99    , array([ 0.0107239  ,  1.06312    ])
80      , -1332.05    , array([ 0.0107239  ,  1.06419    ])
82      , -1326.99    , array([ 0.0107237  ,  1.06312    ])
84      , -1332.04    , array([ 0.0107237  ,  1.06419    ])
90      , -1326.99    , array([ 0.0107236  ,  1.06312    ])
92      , -1332.04    , array([ 0.0107236  ,  1.06419    ])
94      , -1326.99    , array([ 0.0107235  ,  1.06312    ])
96      , -1332.04    , array([ 0.0107235  ,  1.06419    ])
98      , -578.693    , array([ 0.000656597,  1.05524    ])
100     , -579.726    , array([ 0.000656597,  1.0563     ])
106     , -578.693    , array([ 0.000656593,  1.05524    ])
108     , -579.726    , array([ 0.000656593,  1.0563     ])
110     , -578.416    , array([ 0.0006422  ,  1.05557    ])
112     , -579.393    , array([ 0.0006422  ,  1.05662    ])
114     , -577.859    , array([ 0.000642997,  1.05494    ])
116     , -578.834    , array([ 0.000642997,  1.056      ])
118     , -575.645    , array([ 0.000646197,  1.05246    ])
120     , -576.611    , array([ 0.000646197,  1.05351    ])
122     , -566.997    , array([ 0.000659157,  1.04257    ])
124     , -567.926    , array([ 0.000659157,  1.04362    ])
126     , -536.1      , array([ 0.000713648,  1.00396    ])
128     , -536.831    , array([ 0.000713648,  1.00496    ])
130     , -478.559    , array([ 0.000947522,  0.896744   ])
132     , -478.577    , array([ 0.000947522,  0.897641   ])
134     , -467.654    , array([ 0.00120902 ,  0.843083   ])
136     , -467.281    , array([ 0.00120902 ,  0.843927   ])
138     , -460.576    , array([ 0.00133814 ,  0.840337   ])
140     , -460.336    , array([ 0.00133814 ,  0.841178   ])
142     , -451.573    , array([ 0.00175365 ,  0.82638    ])
144     , -451.502    , array([ 0.00175365 ,  0.827207   ])
146     , -448.502    , array([ 0.00220149 ,  0.810558   ])
148     , -448.417    , array([ 0.00220149 ,  0.811369   ])
150     , -446.628    , array([ 0.00275752 ,  0.801476   ])
152     , -446.601    , array([ 0.00275752 ,  0.802278   ])
154     , -445.924    , array([ 0.00346876 ,  0.790227   ])
156     , -445.861    , array([ 0.00346876 ,  0.791017   ])
158     , -445.441    , array([ 0.0042462  ,  0.786068   ])
160     , -445.435    , array([ 0.0042462  ,  0.786854   ])
162     , -445.397    , array([ 0.00481012 ,  0.781902   ])
164     , -445.377    , array([ 0.00481012 ,  0.782684   ])
166     , -445.357    , array([ 0.00516956 ,  0.780924   ])
168     , -445.357    , array([ 0.00516956 ,  0.781705   ])
170     , -445.332    , array([ 0.00583979 ,  0.778706   ])
172     , -445.347    , array([ 0.00583979 ,  0.779485   ])
174     , -445.337    , array([ 0.00617276 ,  0.777388   ])
176     , -445.347    , array([ 0.00617276 ,  0.778166   ])
178     , -445.332    , array([ 0.00589972 ,  0.778463   ])
180     , -445.346    , array([ 0.00589972 ,  0.779242   ])
182     , -445.332    , array([ 0.00585221 ,  0.778655   ])
184     , -445.346    , array([ 0.00585221 ,  0.779434   ])
186     , -445.332    , array([ 0.00588353 ,  0.778528   ])
188     , -445.346    , array([ 0.00588353 ,  0.779307   ])
190     , -445.332    , array([ 0.00585861 ,  0.778629   ])
192     , -445.346    , array([ 0.00585861 ,  0.779408   ])
194     , -445.332    , array([ 0.00585354 ,  0.77865    ])
196     , -445.346    , array([ 0.00585354 ,  0.779429   ])
198     , -445.332    , array([ 0.00585249 ,  0.778654   ])
200     , -445.346    , array([ 0.00585249 ,  0.779433   ])
202     , -445.332    , array([ 0.00585227 ,  0.778655   ])
204     , -445.346    , array([ 0.00585227 ,  0.779434   ])
206     , -445.332    , array([ 0.00585222 ,  0.778655   ])
208     , -445.346    , array([ 0.00585222 ,  0.779434   ])
210     , -445.332    , array([ 0.00585222 ,  0.778655   ])
212     , -445.346    , array([ 0.00585222 ,  0.779434   ])
214     , -445.332    , array([ 0.00585221 ,  0.778655   ])
216     , -445.346    , array([ 0.00585221 ,  0.779434   ])
218     , -445.332    , array([ 0.00585221 ,  0.778655   ])
220     , -445.346    , array([ 0.00585221 ,  0.779434   ])
222     , -445.332    , array([ 0.00585221 ,  0.778655   ])
224     , -445.346    , array([ 0.00585221 ,  0.779434   ])
226     , -445.332    , array([ 0.00585221 ,  0.778655   ])
228     , -445.346    , array([ 0.00585221 ,  0.779434   ])
230     , -445.332    , array([ 0.00585221 ,  0.778655   ])
232     , -445.346    , array([ 0.00585221 ,  0.779434   ])
234     , -445.332    , array([ 0.00585221 ,  0.778655   ])
236     , -445.346    , array([ 0.00585221 ,  0.779434   ])
238     , -445.332    , array([ 0.00585221 ,  0.778655   ])
240     , -445.346    , array([ 0.00585221 ,  0.779434   ])
242     , -445.332    , array([ 0.00585221 ,  0.778655   ])
244     , -445.346    , array([ 0.00585221 ,  0.779434   ])
246     , -445.332    , array([ 0.00585221 ,  0.778655   ])
248     , -445.346    , array([ 0.00585221 ,  0.779434   ])
250     , -445.332    , array([ 0.00585221 ,  0.778655   ])
252     , -445.346    , array([ 0.00585221 ,  0.779434   ])
254     , -445.332    , array([ 0.00585221 ,  0.778655   ])
256     , -445.346    , array([ 0.00585221 ,  0.779434   ])
258     , -445.332    , array([ 0.00585221 ,  0.778655   ])
260     , -445.346    , array([ 0.00585221 ,  0.779434   ])
262     , -445.332    , array([ 0.00585221 ,  0.778655   ])
264     , -445.346    , array([ 0.00585221 ,  0.779434   ])
266     , -445.332    , array([ 0.00585221 ,  0.778655   ])
268     , -445.346    , array([ 0.00585221 ,  0.779434   ])
270     , -445.332    , array([ 0.00585221 ,  0.778655   ])
272     , -445.346    , array([ 0.00585221 ,  0.779434   ])
274     , -445.332    , array([ 0.00585221 ,  0.778655   ])
276     , -445.346    , array([ 0.00585221 ,  0.779434   ])
278     , -445.333    , array([ 0.00596805 ,  0.778189   ])
280     , -445.332    , array([ 0.00586124 ,  0.778619   ])
282     , -445.332    , array([ 0.00584907 ,  0.778668   ])
284     , -445.346    , array([ 0.00584907 ,  0.779447   ])
286     , -445.332    , array([ 0.00585192 ,  0.778656   ])
288     , -445.332    , array([ 0.0058496  ,  0.778666   ])
290     , -445.332    , array([ 0.00584917 ,  0.778668   ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 41 for model 1D.1Bottleneck.TB1gen.TRec2850gen for pop MN
Beginning optimization ************************************************
2       , -24112.7    , array([ 0.00529718 ,  0.0518348  ])
4       , -24112.6    , array([ 0.00529189 ,  0.0518348  ])
6       , -929.386    , array([ 0.00524325 ,  0.01888    ])
8       , -935.77     , array([ 0.00524325 ,  0.0188989  ])
14      , -929.207    , array([ 0.00525034 ,  0.0188795  ])
16      , -935.59     , array([ 0.00525034 ,  0.0188983  ])
22      , -929.144    , array([ 0.00525286 ,  0.0188792  ])
24      , -935.526    , array([ 0.00525286 ,  0.0188981  ])
30      , -929.116    , array([ 0.00525395 ,  0.0188792  ])
32      , -935.498    , array([ 0.00525395 ,  0.018898   ])
38      , -929.104    , array([ 0.00525443 ,  0.0188791  ])
40      , -935.486    , array([ 0.00525443 ,  0.018898   ])
46      , -929.099    , array([ 0.00525464 ,  0.0188791  ])
48      , -935.48     , array([ 0.00525464 ,  0.018898   ])
54      , -929.096    , array([ 0.00525473 ,  0.0188791  ])
56      , -935.478    , array([ 0.00525473 ,  0.018898   ])
58      , -527.266    , array([ 1.77369    ,  0.0165455  ])
60      , -527.749    , array([ 1.77369    ,  0.0165621  ])
62      , -523.65     , array([ 4.44289    ,  0.0163381  ])
64      , -523.774    , array([ 4.44289    ,  0.0163545  ])
66      , -523.419    , array([ 6.10506    ,  0.016267   ])
68      , -523.428    , array([ 6.10506    ,  0.0162833  ])
70      , -523.422    , array([ 6.24893    ,  0.0162618  ])
72      , -523.422    , array([ 6.24893    ,  0.0162781  ])
74      , -523.42     , array([ 6.12059    ,  0.0162664  ])
76      , -523.427    , array([ 6.12059    ,  0.0162827  ])
78      , -523.419    , array([ 6.10696    ,  0.0162669  ])
80      , -523.428    , array([ 6.10696    ,  0.0162832  ])
82      , -523.419    , array([ 6.10529    ,  0.016267   ])
84      , -523.428    , array([ 6.10529    ,  0.0162833  ])
86      , -523.419    , array([ 6.10509    ,  0.016267   ])
88      , -523.428    , array([ 6.10509    ,  0.0162833  ])
90      , -523.419    , array([ 6.10506    ,  0.016267   ])
92      , -523.428    , array([ 6.10506    ,  0.0162833  ])
94      , -523.419    , array([ 6.10506    ,  0.016267   ])
96      , -523.428    , array([ 6.10506    ,  0.0162833  ])
98      , -523.419    , array([ 6.10506    ,  0.016267   ])
100     , -523.428    , array([ 6.10506    ,  0.0162833  ])
102     , -523.419    , array([ 6.10506    ,  0.016267   ])
104     , -523.428    , array([ 6.10506    ,  0.0162833  ])
106     , -523.419    , array([ 6.10506    ,  0.016267   ])
108     , -523.428    , array([ 6.10506    ,  0.0162833  ])
110     , -523.419    , array([ 6.10506    ,  0.016267   ])
112     , -523.428    , array([ 6.10506    ,  0.0162833  ])
114     , -523.419    , array([ 6.10506    ,  0.016267   ])
116     , -523.428    , array([ 6.10506    ,  0.0162833  ])
118     , -523.419    , array([ 6.10506    ,  0.016267   ])
120     , -523.428    , array([ 6.10506    ,  0.0162833  ])
122     , -523.419    , array([ 6.10506    ,  0.016267   ])
124     , -523.428    , array([ 6.10506    ,  0.0162833  ])
126     , -523.419    , array([ 6.10506    ,  0.016267   ])
128     , -523.428    , array([ 6.10506    ,  0.0162833  ])
130     , -523.419    , array([ 6.10506    ,  0.016267   ])
132     , -523.428    , array([ 6.10506    ,  0.0162833  ])
134     , -523.419    , array([ 6.10506    ,  0.016267   ])
136     , -523.428    , array([ 6.10506    ,  0.0162833  ])
138     , -523.419    , array([ 6.10506    ,  0.016267   ])
140     , -523.428    , array([ 6.10506    ,  0.0162833  ])
142     , -523.419    , array([ 6.10506    ,  0.016267   ])
144     , -523.428    , array([ 6.10506    ,  0.0162833  ])
146     , -523.419    , array([ 6.10506    ,  0.016267   ])
148     , -523.428    , array([ 6.10506    ,  0.0162833  ])
150     , -523.419    , array([ 6.10506    ,  0.016267   ])
152     , -523.428    , array([ 6.10506    ,  0.0162833  ])
154     , -523.419    , array([ 6.10506    ,  0.016267   ])
156     , -523.428    , array([ 6.10506    ,  0.0162833  ])
158     , -523.419    , array([ 6.10506    ,  0.016267   ])
160     , -523.428    , array([ 6.10506    ,  0.0162833  ])
162     , -523.419    , array([ 6.10506    ,  0.016267   ])
164     , -523.428    , array([ 6.10506    ,  0.0162833  ])
166     , -523.419    , array([ 6.10506    ,  0.016267   ])
168     , -523.428    , array([ 6.10506    ,  0.0162833  ])
170     , -523.419    , array([ 6.10506    ,  0.016267   ])
172     , -523.428    , array([ 6.10506    ,  0.0162833  ])
174     , -523.419    , array([ 6.10506    ,  0.016267   ])
176     , -523.428    , array([ 6.10506    ,  0.0162833  ])
178     , -523.419    , array([ 6.10506    ,  0.016267   ])
180     , -523.428    , array([ 6.10506    ,  0.0162833  ])
182     , -523.419    , array([ 6.10506    ,  0.016267   ])
184     , -523.428    , array([ 6.10506    ,  0.0162833  ])
186     , -523.419    , array([ 6.10506    ,  0.016267   ])
188     , -523.428    , array([ 6.10506    ,  0.0162833  ])
190     , -523.419    , array([ 6.10506    ,  0.016267   ])
192     , -523.428    , array([ 6.10506    ,  0.0162833  ])
194     , -523.419    , array([ 6.10506    ,  0.016267   ])
196     , -523.428    , array([ 6.10506    ,  0.0162833  ])
198     , -523.419    , array([ 6.10506    ,  0.016267   ])
200     , -523.428    , array([ 6.10506    ,  0.0162833  ])
202     , -523.419    , array([ 6.10506    ,  0.016267   ])
204     , -523.428    , array([ 6.10506    ,  0.0162833  ])
206     , -523.419    , array([ 6.10506    ,  0.016267   ])
208     , -523.428    , array([ 6.10506    ,  0.0162833  ])
210     , -523.419    , array([ 6.10506    ,  0.016267   ])
212     , -523.428    , array([ 6.10506    ,  0.0162833  ])
214     , -523.419    , array([ 6.10506    ,  0.016267   ])
216     , -523.428    , array([ 6.10506    ,  0.0162833  ])
218     , -523.419    , array([ 6.10506    ,  0.016267   ])
220     , -523.428    , array([ 6.10506    ,  0.0162833  ])
222     , -523.419    , array([ 6.10506    ,  0.016267   ])
224     , -523.428    , array([ 6.10506    ,  0.0162833  ])
226     , -523.419    , array([ 6.10506    ,  0.016267   ])
228     , -523.428    , array([ 6.10506    ,  0.0162833  ])
230     , -523.419    , array([ 6.10506    ,  0.016267   ])
232     , -523.428    , array([ 6.10506    ,  0.0162833  ])
234     , -523.419    , array([ 6.10506    ,  0.016267   ])
236     , -523.428    , array([ 6.10506    ,  0.0162833  ])
238     , -523.419    , array([ 6.10506    ,  0.016267   ])
240     , -523.428    , array([ 6.10506    ,  0.0162833  ])
242     , -523.42     , array([ 6.14033    ,  0.0162657  ])
244     , -523.419    , array([ 6.10766    ,  0.0162669  ])
246     , -523.419    , array([ 6.10526    ,  0.016267   ])
248     , -523.419    , array([ 6.10507    ,  0.016267   ])
250     , -523.419    , array([ 6.10506    ,  0.016267   ])
252     , -523.419    , array([ 6.10506    ,  0.016267   ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 42 for model 1D.1Bottleneck.TB1gen.TRec2850gen for pop MN
Beginning optimization ************************************************
2       , -23025.7    , array([ 0.00654303 ,  0.158184   ])
4       , -23025.6    , array([ 0.00653649 ,  0.158184   ])
6       , -4088.01    , array([ 0.0065187  ,  0.434308   ])
8       , -4075.02    , array([ 0.0065187  ,  0.434743   ])
14      , -4085.57    , array([ 0.00653399 ,  0.434377   ])
16      , -4072.58    , array([ 0.00653399 ,  0.434812   ])
18      , -4045.68    , array([ 0.0067903  ,  0.435516   ])
20      , -4032.73    , array([ 0.0067903  ,  0.435951   ])
26      , -4045.08    , array([ 0.00679424 ,  0.435533   ])
28      , -4032.14    , array([ 0.00679424 ,  0.435969   ])
30      , -4035.29    , array([ 0.00685903 ,  0.435814   ])
32      , -4022.36    , array([ 0.00685903 ,  0.43625    ])
38      , -4035.14    , array([ 0.00686002 ,  0.435818   ])
40      , -4022.21    , array([ 0.00686002 ,  0.436254   ])
42      , -4032.71    , array([ 0.00687625 ,  0.435888   ])
44      , -4019.78    , array([ 0.00687625 ,  0.436325   ])
46      , -1059.58    , array([ 0.673623   ,  0.595385   ])
48      , -1054.35    , array([ 0.673623   ,  0.595981   ])
50      , -448.174    , array([ 0.0800468  ,  0.769036   ])
52      , -448.45     , array([ 0.0800468  ,  0.769806   ])
54      , -446.384    , array([ 0.0862662  ,  0.759426   ])
56      , -446.417    , array([ 0.0862662  ,  0.760186   ])
58      , -446.372    , array([ 0.0866141  ,  0.758155   ])
60      , -446.373    , array([ 0.0866141  ,  0.758913   ])
62      , -446.371    , array([ 0.0860597  ,  0.758152   ])
64      , -446.372    , array([ 0.0860597  ,  0.758911   ])
66      , -446.368    , array([ 0.0838777  ,  0.758142   ])
68      , -446.367    , array([ 0.0838777  ,  0.758901   ])
70      , -446.355    , array([ 0.0756889  ,  0.758102   ])
72      , -446.349    , array([ 0.0756889  ,  0.75886    ])
74      , -446.309    , array([ 0.0501851  ,  0.75794    ])
76      , -446.277    , array([ 0.0501851  ,  0.758698   ])
78      , -446.438    , array([ 0.0177093  ,  0.758339   ])
80      , -446.301    , array([ 0.0177093  ,  0.759098   ])
82      , -446.273    , array([ 0.0344781  ,  0.758084   ])
84      , -446.215    , array([ 0.0344781  ,  0.758842   ])
86      , -446.221    , array([ 0.0219497  ,  0.758986   ])
88      , -446.134    , array([ 0.0219497  ,  0.759745   ])
90      , -446.108    , array([ 0.0193673  ,  0.760191   ])
92      , -446.033    , array([ 0.0193673  ,  0.760952   ])
94      , -445.88     , array([ 0.0142611  ,  0.763215   ])
96      , -445.824    , array([ 0.0142611  ,  0.763978   ])
98      , -445.563    , array([ 0.00961785 ,  0.769712   ])
100     , -445.566    , array([ 0.00961785 ,  0.770482   ])
102     , -450.253    , array([ 0.00298981 ,  0.782531   ])
104     , -449.884    , array([ 0.00298981 ,  0.783314   ])
106     , -445.427    , array([ 0.00730539 ,  0.77271    ])
108     , -445.401    , array([ 0.00730539 ,  0.773483   ])
110     , -445.37     , array([ 0.00647892 ,  0.775171   ])
112     , -445.35     , array([ 0.00647892 ,  0.775947   ])
114     , -445.349    , array([ 0.00651507 ,  0.776325   ])
116     , -445.359    , array([ 0.00651507 ,  0.777102   ])
118     , -445.345    , array([ 0.00636318 ,  0.776342   ])
120     , -445.345    , array([ 0.00636318 ,  0.777118   ])
122     , -445.345    , array([ 0.00635975 ,  0.776356   ])
124     , -445.345    , array([ 0.00635975 ,  0.777133   ])
126     , -445.345    , array([ 0.00635969 ,  0.776357   ])
128     , -445.345    , array([ 0.00635969 ,  0.777134   ])
130     , -445.345    , array([ 0.00635968 ,  0.776357   ])
132     , -445.345    , array([ 0.00635968 ,  0.777134   ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 43 for model 1D.1Bottleneck.TB1gen.TRec2850gen for pop MN
Beginning optimization ************************************************
2       , -26463.5    , array([ 0.0164921  ,  0.0616575  ])
4       , -26463.5    , array([ 0.0164756  ,  0.0616575  ])
6       , -3067.5     , array([ 0.0163975  ,  0.0224571  ])
8       , -3085.94    , array([ 0.0163975  ,  0.0224796  ])
10      , -1132.63    , array([ 0.0160887  ,  0.000395206])
12      , -1132.63    , array([ 0.0160887  ,  0.000395601])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 44 for model 1D.1Bottleneck.TB1gen.TRec2850gen for pop MN
Beginning optimization ************************************************
2       , -26046.1    , array([ 0.0195725  ,  0.127039   ])
4       , -26046.1    , array([ 0.019553   ,  0.127039   ])
6       , -7360.25    , array([ 0.0195015  ,  0.348797   ])
8       , -7342.63    , array([ 0.0195015  ,  0.349146   ])
14      , -7351.81    , array([ 0.0195015  ,  0.348964   ])
16      , -7334.19    , array([ 0.0195015  ,  0.349313   ])
18      , -7043.95    , array([ 0.0195006  ,  0.355164   ])
20      , -7026.61    , array([ 0.0195006  ,  0.355519   ])
26      , -7041.92    , array([ 0.0195006  ,  0.355205   ])
28      , -7024.59    , array([ 0.0195006  ,  0.35556    ])
30      , -6975.93    , array([ 0.0195004  ,  0.35656    ])
32      , -6958.61    , array([ 0.0195004  ,  0.356917   ])
34      , -963.076    , array([ 0.0194494  ,  0.972641   ])
36      , -967.14     , array([ 0.0194494  ,  0.973615   ])
42      , -963.051    , array([ 0.0194443  ,  0.972638   ])
44      , -967.115    , array([ 0.0194443  ,  0.973611   ])
46      , -963.026    , array([ 0.0194392  ,  0.972635   ])
48      , -967.09     , array([ 0.0194392  ,  0.973608   ])
54      , -963.02     , array([ 0.019438   ,  0.972634   ])
56      , -967.084    , array([ 0.019438   ,  0.973607   ])
58      , -963.013    , array([ 0.0194367  ,  0.972633   ])
60      , -967.077    , array([ 0.0194367  ,  0.973607   ])
66      , -963.012    , array([ 0.0194364  ,  0.972633   ])
68      , -967.076    , array([ 0.0194364  ,  0.973606   ])
70      , -963.01     , array([ 0.0194361  ,  0.972633   ])
72      , -967.074    , array([ 0.0194361  ,  0.973606   ])
74      , -2706.46    , array([ 0.000125727,  0.912415   ])
76      , -2705.36    , array([ 0.000125727,  0.913328   ])
78      , -856.063    , array([ 0.00777674 ,  0.961402   ])
80      , -859.668    , array([ 0.00777674 ,  0.962364   ])
82      , -753.144    , array([ 0.00415513 ,  0.953792   ])
84      , -756.231    , array([ 0.00415513 ,  0.954747   ])
86      , -511.93     , array([ 0.000722782,  0.932875   ])
88      , -511.831    , array([ 0.000722782,  0.933808   ])
90      , -572.813    , array([ 0.00173429 ,  0.943284   ])
92      , -574.685    , array([ 0.00173429 ,  0.944228   ])
94      , -490.933    , array([ 0.000927152,  0.935824   ])
96      , -491.462    , array([ 0.000927152,  0.936761   ])
98      , -643.31     , array([ 0.0879136  ,  0.877175   ])
100     , -645.951    , array([ 0.0879136  ,  0.878052   ])
102     , -494.957    , array([ 0.00108567 ,  0.933727   ])
104     , -495.807    , array([ 0.00108567 ,  0.934661   ])
106     , -490.834    , array([ 0.000946722,  0.935547   ])
108     , -491.406    , array([ 0.000946722,  0.936483   ])
110     , -490.636    , array([ 0.000947963,  0.9352     ])
112     , -491.207    , array([ 0.000947963,  0.936135   ])
114     , -489.85     , array([ 0.000952944,  0.933814   ])
116     , -490.414    , array([ 0.000952944,  0.934748   ])
118     , -486.793    , array([ 0.00097313 ,  0.928292   ])
120     , -487.33     , array([ 0.00097313 ,  0.929221   ])
122     , -475.892    , array([ 0.00105824 ,  0.906529   ])
124     , -476.293    , array([ 0.00105824 ,  0.907436   ])
126     , -456.232    , array([ 0.00143863 ,  0.844401   ])
128     , -456.191    , array([ 0.00143863 ,  0.845246   ])
130     , -452.889    , array([ 0.00179544 ,  0.815974   ])
132     , -452.647    , array([ 0.00179544 ,  0.81679    ])
134     , -450.309    , array([ 0.00198504 ,  0.813272   ])
136     , -450.15     , array([ 0.00198504 ,  0.814085   ])
138     , -447.377    , array([ 0.00246318 ,  0.806414   ])
140     , -447.337    , array([ 0.00246318 ,  0.807221   ])
142     , -446.296    , array([ 0.00302191 ,  0.796145   ])
144     , -446.242    , array([ 0.00302191 ,  0.796941   ])
146     , -445.635    , array([ 0.00374656 ,  0.789241   ])
148     , -445.61     , array([ 0.00374656 ,  0.790031   ])
150     , -445.432    , array([ 0.00454303 ,  0.78308    ])
152     , -445.402    , array([ 0.00454303 ,  0.783864   ])
154     , -445.37     , array([ 0.00493078 ,  0.782593   ])
156     , -445.381    , array([ 0.00493078 ,  0.783376   ])
158     , -445.351    , array([ 0.00528713 ,  0.780197   ])
160     , -445.347    , array([ 0.00528713 ,  0.780977   ])
162     , -445.662    , array([ 0.00698933 ,  0.770684   ])
164     , -445.567    , array([ 0.00698933 ,  0.771455   ])
166     , -445.351    , array([ 0.00547852 ,  0.778978   ])
168     , -445.338    , array([ 0.00547852 ,  0.779757   ])
170     , -445.389    , array([ 0.00615    ,  0.775578   ])
172     , -445.354    , array([ 0.00615    ,  0.776354   ])
174     , -445.351    , array([ 0.00556974 ,  0.778491   ])
176     , -445.336    , array([ 0.00556974 ,  0.77927    ])
178     , -445.351    , array([ 0.00549644 ,  0.778882   ])
180     , -445.337    , array([ 0.00549644 ,  0.779661   ])
182     , -445.351    , array([ 0.00548227 ,  0.778958   ])
184     , -445.338    , array([ 0.00548227 ,  0.779737   ])
186     , -445.351    , array([ 0.00547932 ,  0.778974   ])
188     , -445.338    , array([ 0.00547932 ,  0.779753   ])
190     , -445.351    , array([ 0.00548127 ,  0.778963   ])
192     , -445.338    , array([ 0.00548127 ,  0.779743   ])
194     , -445.351    , array([ 0.00547973 ,  0.778972   ])
196     , -445.338    , array([ 0.00547973 ,  0.779751   ])
198     , -445.351    , array([ 0.00548074 ,  0.778966   ])
200     , -445.338    , array([ 0.00548074 ,  0.779745   ])
202     , -445.351    , array([ 0.00548109 ,  0.778964   ])
204     , -445.338    , array([ 0.00548109 ,  0.779744   ])
206     , -445.351    , array([ 0.00548082 ,  0.778966   ])
208     , -445.338    , array([ 0.00548082 ,  0.779745   ])
210     , -445.351    , array([ 0.00548076 ,  0.778966   ])
212     , -445.338    , array([ 0.00548076 ,  0.779745   ])
214     , -445.351    , array([ 0.00548075 ,  0.778966   ])
216     , -445.338    , array([ 0.00548075 ,  0.779745   ])
218     , -445.351    , array([ 0.00548075 ,  0.778966   ])
220     , -445.338    , array([ 0.00548075 ,  0.779745   ])
222     , -445.351    , array([ 0.00548075 ,  0.778966   ])
224     , -445.338    , array([ 0.00548075 ,  0.779745   ])
226     , -445.351    , array([ 0.00548075 ,  0.778966   ])
228     , -445.338    , array([ 0.00548075 ,  0.779745   ])
230     , -445.351    , array([ 0.00548075 ,  0.778966   ])
232     , -445.338    , array([ 0.00548075 ,  0.779745   ])
234     , -445.351    , array([ 0.00548075 ,  0.778966   ])
236     , -445.338    , array([ 0.00548075 ,  0.779745   ])
238     , -445.351    , array([ 0.00548075 ,  0.778966   ])
240     , -445.338    , array([ 0.00548075 ,  0.779745   ])
242     , -445.351    , array([ 0.00548075 ,  0.778966   ])
244     , -445.338    , array([ 0.00548075 ,  0.779745   ])
246     , -445.351    , array([ 0.00548075 ,  0.778966   ])
248     , -445.338    , array([ 0.00548075 ,  0.779745   ])
250     , -445.351    , array([ 0.00548075 ,  0.778966   ])
252     , -445.338    , array([ 0.00548075 ,  0.779745   ])
254     , -445.351    , array([ 0.00548075 ,  0.778966   ])
256     , -445.338    , array([ 0.00548075 ,  0.779745   ])
258     , -445.351    , array([ 0.00548075 ,  0.778966   ])
260     , -445.338    , array([ 0.00548075 ,  0.779745   ])
262     , -445.351    , array([ 0.00548075 ,  0.778966   ])
264     , -445.338    , array([ 0.00548075 ,  0.779745   ])
266     , -445.351    , array([ 0.00548075 ,  0.778966   ])
268     , -445.338    , array([ 0.00548075 ,  0.779745   ])
270     , -445.351    , array([ 0.00548075 ,  0.778966   ])
272     , -445.338    , array([ 0.00548075 ,  0.779745   ])
274     , -445.351    , array([ 0.00548075 ,  0.778966   ])
276     , -445.338    , array([ 0.00548075 ,  0.779745   ])
278     , -445.351    , array([ 0.00548075 ,  0.778966   ])
280     , -445.338    , array([ 0.00548075 ,  0.779745   ])
282     , -445.351    , array([ 0.00548075 ,  0.778966   ])
284     , -445.338    , array([ 0.00548075 ,  0.779745   ])
286     , -445.351    , array([ 0.00548075 ,  0.778966   ])
288     , -445.338    , array([ 0.00548075 ,  0.779745   ])
290     , -445.351    , array([ 0.00548075 ,  0.778966   ])
292     , -445.338    , array([ 0.00548075 ,  0.779745   ])
294     , -445.351    , array([ 0.00548075 ,  0.778966   ])
296     , -445.338    , array([ 0.00548075 ,  0.779745   ])
298     , -445.351    , array([ 0.00548075 ,  0.778966   ])
300     , -445.338    , array([ 0.00548075 ,  0.779745   ])
302     , -445.351    , array([ 0.00548075 ,  0.778966   ])
304     , -445.338    , array([ 0.00548075 ,  0.779745   ])
306     , -445.351    , array([ 0.00548075 ,  0.778966   ])
308     , -445.338    , array([ 0.00548075 ,  0.779745   ])
310     , -445.351    , array([ 0.00548075 ,  0.778966   ])
312     , -445.338    , array([ 0.00548075 ,  0.779745   ])
314     , -445.353    , array([ 0.00564305 ,  0.778106   ])
316     , -445.351    , array([ 0.00550309 ,  0.778846   ])
318     , -445.351    , array([ 0.00548301 ,  0.778954   ])
320     , -445.351    , array([ 0.00548047 ,  0.778968   ])
322     , -445.338    , array([ 0.00548047 ,  0.779747   ])
324     , -445.351    , array([ 0.00548108 ,  0.778964   ])
326     , -445.351    , array([ 0.00548059 ,  0.778967   ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 45 for model 1D.1Bottleneck.TB1gen.TRec2850gen for pop MN
Beginning optimization ************************************************
2       , -27803.3    , array([ 0.0168237  ,  0.074351   ])
4       , -27803.2    , array([ 0.0168069  ,  0.074351   ])
6       , -7562.47    , array([ 0.0166262  ,  0.0270816  ])
8       , -7590.88    , array([ 0.0166262  ,  0.0271087  ])
10      , -1132.63    , array([ 0.0159228  ,  0.000476678])
12      , -1132.63    , array([ 0.0159228  ,  0.000477155])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 46 for model 1D.1Bottleneck.TB1gen.TRec2850gen for pop MN
Beginning optimization ************************************************
2       , -19315.4    , array([ 0.0064556  ,  0.194118   ])
4       , -19315.4    , array([ 0.00644915 ,  0.194118   ])
6       , -1919.6     , array([ 0.00645261 ,  0.53297    ])
8       , -1911.48    , array([ 0.00645261 ,  0.533504   ])
14      , -1917.55    , array([ 0.00650763 ,  0.533032   ])
16      , -1909.43    , array([ 0.00650763 ,  0.533565   ])
18      , -1891.29    , array([ 0.00727974 ,  0.53385    ])
20      , -1883.22    , array([ 0.00727974 ,  0.534385   ])
26      , -1890.84    , array([ 0.0072942  ,  0.533865   ])
28      , -1882.77    , array([ 0.0072942  ,  0.534399   ])
30      , -1884.89    , array([ 0.00748927 ,  0.534058   ])
32      , -1876.84    , array([ 0.00748927 ,  0.534592   ])
38      , -1884.78    , array([ 0.00749293 ,  0.534061   ])
40      , -1876.73    , array([ 0.00749293 ,  0.534596   ])
42      , -1883.33    , array([ 0.00754182 ,  0.534109   ])
44      , -1875.28    , array([ 0.00754182 ,  0.534643   ])
50      , -1883.3     , array([ 0.00754274 ,  0.53411    ])
52      , -1875.25    , array([ 0.00754274 ,  0.534644   ])
54      , -1882.94    , array([ 0.00755497 ,  0.534122   ])
56      , -1874.89    , array([ 0.00755497 ,  0.534656   ])
62      , -1882.93    , array([ 0.0075552  ,  0.534122   ])
64      , -1874.88    , array([ 0.0075552  ,  0.534656   ])
66      , -1882.84    , array([ 0.00755826 ,  0.534125   ])
68      , -1874.79    , array([ 0.00755826 ,  0.534659   ])
70      , -1331.05    , array([ 0.697045   ,  0.568229   ])
72      , -1324.71    , array([ 0.697045   ,  0.568798   ])
74      , -548.185    , array([ 0.184151   ,  0.68561    ])
76      , -546.129    , array([ 0.184151   ,  0.686295   ])
78      , -447.601    , array([ 0.104939   ,  0.749881   ])
80      , -447.392    , array([ 0.104939   ,  0.750631   ])
82      , -446.4      , array([ 0.0987321  ,  0.7575     ])
84      , -446.389    , array([ 0.0987321  ,  0.758258   ])
86      , -446.39     , array([ 0.0979015  ,  0.75798    ])
88      , -446.39     , array([ 0.0979015  ,  0.758739   ])
90      , -446.388    , array([ 0.097322   ,  0.758034   ])
92      , -446.39     , array([ 0.097322   ,  0.758792   ])
94      , -446.384    , array([ 0.09497    ,  0.758164   ])
96      , -446.388    , array([ 0.09497    ,  0.758922   ])
98      , -446.37     , array([ 0.0861167  ,  0.758683   ])
100     , -446.384    , array([ 0.0861167  ,  0.759442   ])
102     , -446.323    , array([ 0.0622019  ,  0.759899   ])
104     , -446.354    , array([ 0.0622019  ,  0.760659   ])
106     , -445.859    , array([ 0.0169304  ,  0.764782   ])
108     , -445.877    , array([ 0.0169304  ,  0.765548   ])
114     , -445.859    , array([ 0.0169304  ,  0.764782   ])
116     , -445.877    , array([ 0.0169304  ,  0.765548   ])
118     , -445.859    , array([ 0.0169304  ,  0.764782   ])
120     , -445.877    , array([ 0.0169304  ,  0.765548   ])
122     , -547.076    , array([ 0.00125428 ,  0.774643   ])
124     , -545.422    , array([ 0.00125428 ,  0.775418   ])
126     , -445.742    , array([ 0.00899602 ,  0.767167   ])
128     , -445.658    , array([ 0.00899602 ,  0.767934   ])
130     , -445.726    , array([ 0.0127464  ,  0.765852   ])
132     , -445.711    , array([ 0.0127464  ,  0.766618   ])
134     , -445.698    , array([ 0.0106493  ,  0.76653    ])
136     , -445.653    , array([ 0.0106493  ,  0.767297   ])
138     , -445.699    , array([ 0.0112078  ,  0.766337   ])
140     , -445.662    , array([ 0.0112078  ,  0.767104   ])
142     , -484.271    , array([ 0.00188989 ,  0.773823   ])
144     , -483.2      , array([ 0.00188989 ,  0.774597   ])
146     , -445.839    , array([ 0.00793604 ,  0.767783   ])
148     , -445.725    , array([ 0.00793604 ,  0.768551   ])
150     , -445.697    , array([ 0.0107317  ,  0.766519   ])
152     , -445.653    , array([ 0.0107317  ,  0.767285   ])
154     , -445.697    , array([ 0.0109958  ,  0.766417   ])
156     , -445.658    , array([ 0.0109958  ,  0.767184   ])
158     , -445.693    , array([ 0.010938   ,  0.766496   ])
160     , -445.654    , array([ 0.010938   ,  0.767262   ])
162     , -445.678    , array([ 0.01071    ,  0.766811   ])
164     , -445.641    , array([ 0.01071    ,  0.767578   ])
166     , -445.62     , array([ 0.00984427 ,  0.768072   ])
168     , -445.59     , array([ 0.00984427 ,  0.76884    ])
170     , -445.422    , array([ 0.00702695 ,  0.773138   ])
172     , -445.39     , array([ 0.00702695 ,  0.773912   ])
174     , -445.356    , array([ 0.00667827 ,  0.775855   ])
176     , -445.367    , array([ 0.00667827 ,  0.776631   ])
178     , -445.344    , array([ 0.0057181  ,  0.77807    ])
180     , -445.332    , array([ 0.0057181  ,  0.778848   ])
182     , -445.344    , array([ 0.00638132 ,  0.776503   ])
184     , -445.349    , array([ 0.00638132 ,  0.77728    ])
186     , -445.344    , array([ 0.00634634 ,  0.7764     ])
188     , -445.344    , array([ 0.00634634 ,  0.777177   ])
190     , -445.344    , array([ 0.00637475 ,  0.776484   ])
192     , -445.348    , array([ 0.00637475 ,  0.777261   ])
194     , -445.344    , array([ 0.0063746  ,  0.776483   ])
196     , -445.348    , array([ 0.0063746  ,  0.77726    ])
198     , -445.344    , array([ 0.00637473 ,  0.776484   ])
200     , -445.348    , array([ 0.00637473 ,  0.777261   ])
202     , -445.344    , array([ 0.00637475 ,  0.776484   ])
204     , -445.348    , array([ 0.00637475 ,  0.777261   ])
206     , -445.344    , array([ 0.00637475 ,  0.776484   ])
208     , -445.348    , array([ 0.00637475 ,  0.777261   ])
210     , -445.344    , array([ 0.00637475 ,  0.776484   ])
212     , -445.348    , array([ 0.00637475 ,  0.777261   ])
214     , -445.344    , array([ 0.00637475 ,  0.776484   ])
216     , -445.348    , array([ 0.00637475 ,  0.777261   ])
218     , -445.344    , array([ 0.00637475 ,  0.776484   ])
220     , -445.348    , array([ 0.00637475 ,  0.777261   ])
222     , -445.344    , array([ 0.00637475 ,  0.776484   ])
224     , -445.348    , array([ 0.00637475 ,  0.777261   ])
226     , -445.344    , array([ 0.00637475 ,  0.776484   ])
228     , -445.348    , array([ 0.00637475 ,  0.777261   ])
230     , -445.344    , array([ 0.00637475 ,  0.776484   ])
232     , -445.348    , array([ 0.00637475 ,  0.777261   ])
234     , -445.344    , array([ 0.00637475 ,  0.776484   ])
236     , -445.348    , array([ 0.00637475 ,  0.777261   ])
238     , -445.344    , array([ 0.00637475 ,  0.776484   ])
240     , -445.348    , array([ 0.00637475 ,  0.777261   ])
242     , -445.344    , array([ 0.00637475 ,  0.776484   ])
244     , -445.348    , array([ 0.00637475 ,  0.777261   ])
246     , -445.344    , array([ 0.00637475 ,  0.776484   ])
248     , -445.348    , array([ 0.00637475 ,  0.777261   ])
250     , -445.344    , array([ 0.00637475 ,  0.776484   ])
252     , -445.348    , array([ 0.00637475 ,  0.777261   ])
254     , -445.344    , array([ 0.00637475 ,  0.776484   ])
256     , -445.348    , array([ 0.00637475 ,  0.777261   ])
258     , -445.344    , array([ 0.00637475 ,  0.776484   ])
260     , -445.348    , array([ 0.00637475 ,  0.777261   ])
262     , -445.344    , array([ 0.00637475 ,  0.776484   ])
264     , -445.348    , array([ 0.00637475 ,  0.777261   ])
266     , -445.344    , array([ 0.00637475 ,  0.776484   ])
268     , -445.348    , array([ 0.00637475 ,  0.777261   ])
270     , -445.344    , array([ 0.00637475 ,  0.776484   ])
272     , -445.348    , array([ 0.00637475 ,  0.777261   ])
274     , -445.344    , array([ 0.00637475 ,  0.776484   ])
276     , -445.348    , array([ 0.00637475 ,  0.777261   ])
278     , -445.344    , array([ 0.00637475 ,  0.776484   ])
280     , -445.348    , array([ 0.00637475 ,  0.777261   ])
282     , -445.344    , array([ 0.00637475 ,  0.776484   ])
284     , -445.348    , array([ 0.00637475 ,  0.777261   ])
286     , -445.344    , array([ 0.00637475 ,  0.776484   ])
288     , -445.348    , array([ 0.00637475 ,  0.777261   ])
290     , -445.344    , array([ 0.00637475 ,  0.776484   ])
292     , -445.348    , array([ 0.00637475 ,  0.777261   ])
294     , -445.344    , array([ 0.00637475 ,  0.776484   ])
296     , -445.348    , array([ 0.00637475 ,  0.777261   ])
298     , -445.344    , array([ 0.00637475 ,  0.776484   ])
300     , -445.348    , array([ 0.00637475 ,  0.777261   ])
302     , -445.344    , array([ 0.00637475 ,  0.776484   ])
304     , -445.348    , array([ 0.00637475 ,  0.777261   ])
306     , -445.344    , array([ 0.00637475 ,  0.776484   ])
308     , -445.348    , array([ 0.00637475 ,  0.777261   ])
310     , -445.344    , array([ 0.00637475 ,  0.776484   ])
312     , -445.348    , array([ 0.00637475 ,  0.777261   ])
314     , -445.344    , array([ 0.00637475 ,  0.776484   ])
316     , -445.348    , array([ 0.00637475 ,  0.777261   ])
318     , -445.344    , array([ 0.00637475 ,  0.776484   ])
320     , -445.348    , array([ 0.00637475 ,  0.777261   ])
322     , -445.344    , array([ 0.00637475 ,  0.776484   ])
324     , -445.348    , array([ 0.00637475 ,  0.777261   ])
326     , -445.344    , array([ 0.00637475 ,  0.776484   ])
328     , -445.348    , array([ 0.00637475 ,  0.777261   ])
330     , -445.344    , array([ 0.00637475 ,  0.776484   ])
332     , -445.348    , array([ 0.00637475 ,  0.777261   ])
334     , -445.344    , array([ 0.00637475 ,  0.776484   ])
336     , -445.348    , array([ 0.00637475 ,  0.777261   ])
338     , -445.344    , array([ 0.00637475 ,  0.776484   ])
340     , -445.348    , array([ 0.00637475 ,  0.777261   ])
342     , -445.344    , array([ 0.00637475 ,  0.776484   ])
344     , -445.348    , array([ 0.00637475 ,  0.777261   ])
346     , -445.344    , array([ 0.00637475 ,  0.776484   ])
348     , -445.348    , array([ 0.00637475 ,  0.777261   ])
350     , -445.344    , array([ 0.00637475 ,  0.776484   ])
352     , -445.348    , array([ 0.00637475 ,  0.777261   ])
354     , -445.344    , array([ 0.00637475 ,  0.776484   ])
356     , -445.348    , array([ 0.00637475 ,  0.777261   ])
358     , -445.344    , array([ 0.00637475 ,  0.776484   ])
360     , -445.348    , array([ 0.00637475 ,  0.777261   ])
362     , -445.344    , array([ 0.00637475 ,  0.776484   ])
364     , -445.348    , array([ 0.00637475 ,  0.777261   ])
366     , -445.344    , array([ 0.00637475 ,  0.776484   ])
368     , -445.348    , array([ 0.00637475 ,  0.777261   ])
370     , -445.344    , array([ 0.00637475 ,  0.776484   ])
372     , -445.348    , array([ 0.00637475 ,  0.777261   ])
374     , -445.344    , array([ 0.00637475 ,  0.776484   ])
376     , -445.348    , array([ 0.00637475 ,  0.777261   ])
378     , -445.344    , array([ 0.00637475 ,  0.776484   ])
380     , -445.348    , array([ 0.00637475 ,  0.777261   ])
382     , -445.344    , array([ 0.00637475 ,  0.776484   ])
384     , -445.348    , array([ 0.00637475 ,  0.777261   ])
386     , -445.344    , array([ 0.00637475 ,  0.776484   ])
388     , -445.348    , array([ 0.00637475 ,  0.777261   ])
390     , -445.344    , array([ 0.00637475 ,  0.776484   ])
392     , -445.348    , array([ 0.00637475 ,  0.777261   ])
394     , -445.344    , array([ 0.00637475 ,  0.776484   ])
396     , -445.348    , array([ 0.00637475 ,  0.777261   ])
398     , -445.344    , array([ 0.00637475 ,  0.776484   ])
400     , -445.348    , array([ 0.00637475 ,  0.777261   ])
402     , -445.344    , array([ 0.00637475 ,  0.776484   ])
404     , -445.348    , array([ 0.00637475 ,  0.777261   ])
406     , -445.344    , array([ 0.00637475 ,  0.776484   ])
408     , -445.348    , array([ 0.00637475 ,  0.777261   ])
410     , -445.344    , array([ 0.00637475 ,  0.776484   ])
412     , -445.348    , array([ 0.00637475 ,  0.777261   ])
414     , -445.344    , array([ 0.00637475 ,  0.776484   ])
416     , -445.348    , array([ 0.00637475 ,  0.777261   ])
418     , -445.344    , array([ 0.00637475 ,  0.776484   ])
420     , -445.348    , array([ 0.00637475 ,  0.777261   ])
422     , -445.344    , array([ 0.00637475 ,  0.776484   ])
424     , -445.348    , array([ 0.00637475 ,  0.777261   ])
426     , -445.344    , array([ 0.00637475 ,  0.776484   ])
428     , -445.348    , array([ 0.00637475 ,  0.777261   ])
430     , -445.344    , array([ 0.00637475 ,  0.776484   ])
432     , -445.348    , array([ 0.00637475 ,  0.777261   ])
434     , -445.344    , array([ 0.00637475 ,  0.776484   ])
436     , -445.348    , array([ 0.00637475 ,  0.777261   ])
438     , -445.344    , array([ 0.00637475 ,  0.776484   ])
440     , -445.348    , array([ 0.00637475 ,  0.777261   ])
442     , -445.344    , array([ 0.0063747  ,  0.776484   ])
444     , -445.344    , array([ 0.00637475 ,  0.776484   ])
446     , -445.344    , array([ 0.00637475 ,  0.776484   ])
448     , -445.344    , array([ 0.00637475 ,  0.776484   ])
450     , -445.344    , array([ 0.00637475 ,  0.776484   ])
452     , -445.344    , array([ 0.00638113 ,  0.776484   ])
454     , -445.344    , array([ 0.00637475 ,  0.776484   ])
456     , -445.344    , array([ 0.00637475 ,  0.776484   ])
458     , -445.348    , array([ 0.00637475 ,  0.777261   ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 47 for model 1D.1Bottleneck.TB1gen.TRec2850gen for pop MN
Beginning optimization ************************************************
2       , -23962      , array([ 0.00593149 ,  0.051304   ])
4       , -23961.9    , array([ 0.00592556 ,  0.051304   ])
6       , -868.154    , array([ 0.00587801 ,  0.0186865  ])
8       , -873.944    , array([ 0.00587801 ,  0.0187052  ])
14      , -868.084    , array([ 0.00588166 ,  0.0186862  ])
16      , -873.874    , array([ 0.00588166 ,  0.0187049  ])
18      , -523.708    , array([ 5.08749    ,  0.0161927  ])
20      , -523.6      , array([ 5.08749    ,  0.0162089  ])
22      , -523.46     , array([ 4.09274    ,  0.0162409  ])
24      , -523.427    , array([ 4.09274    ,  0.0162571  ])
26      , -523.422    , array([ 3.71945    ,  0.0162621  ])
28      , -523.423    , array([ 3.71945    ,  0.0162784  ])
30      , -523.422    , array([ 3.72631    ,  0.0162617  ])
32      , -523.422    , array([ 3.72631    ,  0.016278   ])
34      , -523.422    , array([ 3.7195     ,  0.0162621  ])
36      , -523.423    , array([ 3.7195     ,  0.0162784  ])
38      , -523.422    , array([ 3.71945    ,  0.0162621  ])
40      , -523.423    , array([ 3.71945    ,  0.0162784  ])
42      , -523.422    , array([ 3.71945    ,  0.0162621  ])
44      , -523.423    , array([ 3.71945    ,  0.0162784  ])
46      , -523.422    , array([ 3.71945    ,  0.0162621  ])
48      , -523.423    , array([ 3.71945    ,  0.0162784  ])
50      , -523.422    , array([ 3.71945    ,  0.0162621  ])
52      , -523.423    , array([ 3.71945    ,  0.0162784  ])
54      , -523.422    , array([ 3.71945    ,  0.0162621  ])
56      , -523.423    , array([ 3.71945    ,  0.0162784  ])
58      , -523.422    , array([ 3.71945    ,  0.0162621  ])
60      , -523.423    , array([ 3.71945    ,  0.0162784  ])
62      , -523.422    , array([ 3.71945    ,  0.0162621  ])
64      , -523.423    , array([ 3.71945    ,  0.0162784  ])
66      , -523.422    , array([ 3.71945    ,  0.0162621  ])
68      , -523.423    , array([ 3.71945    ,  0.0162784  ])
70      , -523.422    , array([ 3.71945    ,  0.0162621  ])
72      , -523.423    , array([ 3.71945    ,  0.0162784  ])
74      , -523.422    , array([ 3.71945    ,  0.0162621  ])
76      , -523.423    , array([ 3.71945    ,  0.0162784  ])
78      , -523.422    , array([ 3.71945    ,  0.0162621  ])
80      , -523.423    , array([ 3.71945    ,  0.0162784  ])
82      , -523.422    , array([ 3.71945    ,  0.0162621  ])
84      , -523.423    , array([ 3.71945    ,  0.0162784  ])
86      , -523.422    , array([ 3.71945    ,  0.0162621  ])
88      , -523.423    , array([ 3.71945    ,  0.0162784  ])
90      , -523.422    , array([ 3.71945    ,  0.0162621  ])
92      , -523.423    , array([ 3.71945    ,  0.0162784  ])
94      , -523.422    , array([ 3.71945    ,  0.0162621  ])
96      , -523.423    , array([ 3.71945    ,  0.0162784  ])
98      , -523.422    , array([ 3.71945    ,  0.0162621  ])
100     , -523.423    , array([ 3.71945    ,  0.0162784  ])
102     , -523.422    , array([ 3.71945    ,  0.0162621  ])
104     , -523.423    , array([ 3.71945    ,  0.0162784  ])
106     , -523.422    , array([ 3.71945    ,  0.0162621  ])
108     , -523.423    , array([ 3.71945    ,  0.0162784  ])
110     , -523.422    , array([ 3.71945    ,  0.0162621  ])
112     , -523.423    , array([ 3.71945    ,  0.0162784  ])
114     , -523.422    , array([ 3.71945    ,  0.0162621  ])
116     , -523.423    , array([ 3.71945    ,  0.0162784  ])
118     , -523.422    , array([ 3.71945    ,  0.0162621  ])
120     , -523.423    , array([ 3.71945    ,  0.0162784  ])
122     , -523.422    , array([ 3.71945    ,  0.0162621  ])
124     , -523.423    , array([ 3.71945    ,  0.0162784  ])
126     , -523.422    , array([ 3.71945    ,  0.0162621  ])
128     , -523.423    , array([ 3.71945    ,  0.0162784  ])
130     , -523.422    , array([ 3.71945    ,  0.0162621  ])
132     , -523.423    , array([ 3.71945    ,  0.0162784  ])
134     , -523.422    , array([ 3.71945    ,  0.0162621  ])
136     , -523.423    , array([ 3.71945    ,  0.0162784  ])
138     , -523.422    , array([ 3.71945    ,  0.0162621  ])
140     , -523.423    , array([ 3.71945    ,  0.0162784  ])
142     , -523.422    , array([ 3.71945    ,  0.0162621  ])
144     , -523.423    , array([ 3.71945    ,  0.0162784  ])
146     , -523.422    , array([ 3.71945    ,  0.0162621  ])
148     , -523.423    , array([ 3.71945    ,  0.0162784  ])
150     , -523.422    , array([ 3.71945    ,  0.0162621  ])
152     , -523.423    , array([ 3.71945    ,  0.0162784  ])
154     , -523.422    , array([ 3.71945    ,  0.0162621  ])
156     , -523.423    , array([ 3.71945    ,  0.0162784  ])
158     , -523.422    , array([ 3.71945    ,  0.0162621  ])
160     , -523.423    , array([ 3.71945    ,  0.0162784  ])
162     , -523.422    , array([ 3.71945    ,  0.0162621  ])
164     , -523.423    , array([ 3.71945    ,  0.0162784  ])
166     , -523.422    , array([ 3.71945    ,  0.0162621  ])
168     , -523.423    , array([ 3.71945    ,  0.0162784  ])
170     , -523.422    , array([ 3.71945    ,  0.0162621  ])
172     , -523.423    , array([ 3.71945    ,  0.0162784  ])
174     , -523.422    , array([ 3.71945    ,  0.0162621  ])
176     , -523.423    , array([ 3.71945    ,  0.0162784  ])
178     , -523.422    , array([ 3.71945    ,  0.0162621  ])
180     , -523.423    , array([ 3.71945    ,  0.0162784  ])
182     , -523.422    , array([ 3.71945    ,  0.0162621  ])
184     , -523.423    , array([ 3.71945    ,  0.0162784  ])
186     , -523.422    , array([ 3.71945    ,  0.0162621  ])
188     , -523.423    , array([ 3.71945    ,  0.0162784  ])
190     , -523.422    , array([ 3.71945    ,  0.0162621  ])
192     , -523.423    , array([ 3.71945    ,  0.0162784  ])
194     , -523.422    , array([ 3.71945    ,  0.0162621  ])
196     , -523.423    , array([ 3.71945    ,  0.0162784  ])
198     , -523.422    , array([ 3.71945    ,  0.0162621  ])
200     , -523.423    , array([ 3.71945    ,  0.0162784  ])
202     , -523.422    , array([ 3.71945    ,  0.0162621  ])
204     , -523.423    , array([ 3.71945    ,  0.0162784  ])
206     , -523.422    , array([ 3.71945    ,  0.0162621  ])
208     , -523.423    , array([ 3.71945    ,  0.0162784  ])
210     , -523.422    , array([ 3.71945    ,  0.0162621  ])
212     , -523.423    , array([ 3.71945    ,  0.0162784  ])
214     , -523.422    , array([ 3.71945    ,  0.0162621  ])
216     , -523.423    , array([ 3.71945    ,  0.0162784  ])
218     , -523.422    , array([ 3.71945    ,  0.0162621  ])
220     , -523.423    , array([ 3.71945    ,  0.0162784  ])
222     , -523.422    , array([ 3.71945    ,  0.0162621  ])
224     , -523.423    , array([ 3.71945    ,  0.0162784  ])
226     , -523.422    , array([ 3.71945    ,  0.0162621  ])
228     , -523.423    , array([ 3.71945    ,  0.0162784  ])
230     , -523.422    , array([ 3.71945    ,  0.0162621  ])
232     , -523.423    , array([ 3.71945    ,  0.0162784  ])
234     , -523.422    , array([ 3.71945    ,  0.0162621  ])
236     , -523.423    , array([ 3.71945    ,  0.0162784  ])
238     , -523.422    , array([ 3.71945    ,  0.0162621  ])
240     , -523.423    , array([ 3.71945    ,  0.0162784  ])
242     , -523.422    , array([ 3.71945    ,  0.0162621  ])
244     , -523.423    , array([ 3.71945    ,  0.0162784  ])
246     , -523.422    , array([ 3.71945    ,  0.0162621  ])
248     , -523.423    , array([ 3.71945    ,  0.0162784  ])
250     , -523.422    , array([ 3.71945    ,  0.0162621  ])
252     , -523.423    , array([ 3.71945    ,  0.0162784  ])
254     , -523.422    , array([ 3.71945    ,  0.0162621  ])
256     , -523.423    , array([ 3.71945    ,  0.0162784  ])
258     , -523.422    , array([ 3.71945    ,  0.0162621  ])
260     , -523.423    , array([ 3.71945    ,  0.0162784  ])
262     , -523.422    , array([ 3.71945    ,  0.0162621  ])
264     , -523.423    , array([ 3.71945    ,  0.0162784  ])
266     , -523.422    , array([ 3.71945    ,  0.0162621  ])
268     , -523.423    , array([ 3.71945    ,  0.0162784  ])
270     , -523.422    , array([ 3.71945    ,  0.0162621  ])
272     , -523.423    , array([ 3.71945    ,  0.0162784  ])
274     , -523.422    , array([ 3.71945    ,  0.0162621  ])
276     , -523.423    , array([ 3.71945    ,  0.0162784  ])
278     , -523.422    , array([ 3.71945    ,  0.0162621  ])
280     , -523.423    , array([ 3.71945    ,  0.0162784  ])
282     , -523.422    , array([ 3.71945    ,  0.0162621  ])
284     , -523.423    , array([ 3.71945    ,  0.0162784  ])
286     , -523.422    , array([ 3.71945    ,  0.0162621  ])
288     , -523.423    , array([ 3.71945    ,  0.0162784  ])
290     , -523.422    , array([ 3.71945    ,  0.0162621  ])
292     , -523.423    , array([ 3.71945    ,  0.0162784  ])
294     , -523.422    , array([ 3.71945    ,  0.0162621  ])
296     , -523.423    , array([ 3.71945    ,  0.0162784  ])
298     , -523.422    , array([ 3.71945    ,  0.0162621  ])
300     , -523.423    , array([ 3.71945    ,  0.0162784  ])
302     , -523.422    , array([ 3.71945    ,  0.0162621  ])
304     , -523.423    , array([ 3.71945    ,  0.0162784  ])
306     , -523.422    , array([ 3.72288    ,  0.0162619  ])
308     , -523.422    , array([ 3.7203     ,  0.0162621  ])
310     , -523.422    , array([ 3.71966    ,  0.0162621  ])
312     , -523.422    , array([ 3.7195     ,  0.0162621  ])
314     , -523.422    , array([ 3.71946    ,  0.0162621  ])
316     , -523.422    , array([ 3.71945    ,  0.0162621  ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 48 for model 1D.1Bottleneck.TB1gen.TRec2850gen for pop MN
Beginning optimization ************************************************
2       , -27275.3    , array([ 0.00613337 ,  0.0685739  ])
4       , -27275.2    , array([ 0.00612724 ,  0.0685739  ])
6       , -5358.98    , array([ 0.00601118 ,  0.0249805  ])
8       , -5383.88    , array([ 0.00601118 ,  0.0250054  ])
10      , -1132.63    , array([ 0.00556854 ,  0.000439911])
12      , -1132.63    , array([ 0.00556854 ,  0.000440351])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 49 for model 1D.1Bottleneck.TB1gen.TRec2850gen for pop MN
Beginning optimization ************************************************
2       , -25483.5    , array([ 0.00641646 ,  0.132844   ])
4       , -25483.4    , array([ 0.00641005 ,  0.132844   ])
6       , -6699       , array([ 0.00636678 ,  0.364727   ])
8       , -6682.26    , array([ 0.00636678 ,  0.365092   ])
14      , -6691.38    , array([ 0.00636676 ,  0.364893   ])
16      , -6674.64    , array([ 0.00636676 ,  0.365259   ])
18      , -6481.69    , array([ 0.00636622 ,  0.369527   ])
20      , -6465.23    , array([ 0.00636622 ,  0.369896   ])
26      , -6479.86    , array([ 0.00636621 ,  0.369568   ])
28      , -6463.4     , array([ 0.00636621 ,  0.369937   ])
30      , -6432.19    , array([ 0.00636609 ,  0.37064    ])
32      , -6415.75    , array([ 0.00636609 ,  0.371011   ])
34      , -1034.31    , array([ 0.00632332 ,  1.01276    ])
36      , -1038.51    , array([ 0.00632332 ,  1.01377    ])
42      , -1033.74    , array([ 0.00629857 ,  1.01276    ])
44      , -1037.94    , array([ 0.00629857 ,  1.01377    ])
46      , -1033.17    , array([ 0.00627386 ,  1.01276    ])
48      , -1037.36    , array([ 0.00627386 ,  1.01377    ])
54      , -1033.03    , array([ 0.00626768 ,  1.01276    ])
56      , -1037.22    , array([ 0.00626768 ,  1.01377    ])
58      , -1032.88    , array([ 0.0062615  ,  1.01276    ])
60      , -1037.07    , array([ 0.0062615  ,  1.01377    ])
66      , -1032.85    , array([ 0.00625995 ,  1.01276    ])
68      , -1037.04    , array([ 0.00625995 ,  1.01377    ])
70      , -1032.81    , array([ 0.00625841 ,  1.01276    ])
72      , -1037       , array([ 0.00625841 ,  1.01377    ])
78      , -1032.8     , array([ 0.00625802 ,  1.01276    ])
80      , -1036.99    , array([ 0.00625802 ,  1.01377    ])
82      , -1032.79    , array([ 0.00625764 ,  1.01276    ])
84      , -1036.98    , array([ 0.00625764 ,  1.01377    ])
90      , -1032.79    , array([ 0.00625754 ,  1.01276    ])
92      , -1036.98    , array([ 0.00625754 ,  1.01377    ])
94      , -1032.79    , array([ 0.00625744 ,  1.01276    ])
96      , -1036.98    , array([ 0.00625744 ,  1.01377    ])
98      , -2753.83    , array([ 0.000116668,  1.01206    ])
100     , -2753.95    , array([ 0.000116668,  1.01307    ])
102     , -888.031    , array([ 0.00298114 ,  1.01263    ])
104     , -891.587    , array([ 0.00298114 ,  1.01364    ])
106     , -745.444    , array([ 0.0017806  ,  1.01254    ])
108     , -748.27     , array([ 0.0017806  ,  1.01355    ])
110     , -655.503    , array([ 0.000455784,  1.0123     ])
112     , -655.173    , array([ 0.000455784,  1.01331    ])
114     , -611.025    , array([ 0.0011159  ,  1.01246    ])
116     , -612.932    , array([ 0.0011159  ,  1.01347    ])
118     , -542.466    , array([ 0.000708626,  1.01238    ])
120     , -543.266    , array([ 0.000708626,  1.01339    ])
122     , -699.971    , array([ 0.00687687 ,  0.919391   ])
124     , -702.862    , array([ 0.00687687 ,  0.920311   ])
126     , -542.721    , array([ 0.000793791,  1.00752    ])
128     , -543.76     , array([ 0.000793791,  1.00853    ])
130     , -541.588    , array([ 0.000747102,  1.01011    ])
132     , -542.5      , array([ 0.000747102,  1.01112    ])
134     , -539.832    , array([ 0.000752081,  1.00784    ])
136     , -540.737    , array([ 0.000752081,  1.00885    ])
138     , -532.982    , array([ 0.000772332,  0.998827   ])
140     , -533.836    , array([ 0.000772332,  0.999826   ])
142     , -507.964    , array([ 0.000858934,  0.963557   ])
144     , -508.679    , array([ 0.000858934,  0.964521   ])
146     , -462.357    , array([ 0.00122367 ,  0.867077   ])
148     , -462.425    , array([ 0.00122367 ,  0.867945   ])
150     , -457.118    , array([ 0.00158341 ,  0.820932   ])
152     , -456.788    , array([ 0.00158341 ,  0.821753   ])
154     , -453.749    , array([ 0.00163827 ,  0.826482   ])
156     , -453.58     , array([ 0.00163827 ,  0.827309   ])
158     , -449.322    , array([ 0.00200886 ,  0.819724   ])
160     , -449.31     , array([ 0.00200886 ,  0.820544   ])
162     , -447.008    , array([ 0.00261063 ,  0.803043   ])
164     , -446.959    , array([ 0.00261063 ,  0.803847   ])
166     , -446.114    , array([ 0.00324501 ,  0.792681   ])
168     , -446.049    , array([ 0.00324501 ,  0.793474   ])
170     , -445.646    , array([ 0.00372171 ,  0.789509   ])
172     , -445.622    , array([ 0.00372171 ,  0.790299   ])
174     , -445.427    , array([ 0.00482799 ,  0.781161   ])
176     , -445.391    , array([ 0.00482799 ,  0.781942   ])
178     , -445.371    , array([ 0.00501519 ,  0.781644   ])
180     , -445.37     , array([ 0.00501519 ,  0.782426   ])
182     , -445.338    , array([ 0.00577427 ,  0.779387   ])
184     , -445.363    , array([ 0.00577427 ,  0.780167   ])
186     , -445.336    , array([ 0.00612668 ,  0.777556   ])
188     , -445.346    , array([ 0.00612668 ,  0.778334   ])
190     , -445.339    , array([ 0.00625515 ,  0.776901   ])
192     , -445.345    , array([ 0.00625515 ,  0.777678   ])
194     , -445.336    , array([ 0.00614188 ,  0.777478   ])
196     , -445.346    , array([ 0.00614188 ,  0.778256   ])
198     , -445.336    , array([ 0.00612862 ,  0.777546   ])
200     , -445.346    , array([ 0.00612862 ,  0.778324   ])
202     , -445.336    , array([ 0.00612693 ,  0.777555   ])
204     , -445.346    , array([ 0.00612693 ,  0.778333   ])
206     , -445.336    , array([ 0.00612671 ,  0.777556   ])
208     , -445.346    , array([ 0.00612671 ,  0.778334   ])
210     , -445.336    , array([ 0.00612669 ,  0.777556   ])
212     , -445.346    , array([ 0.00612669 ,  0.778334   ])
214     , -445.336    , array([ 0.00612668 ,  0.777556   ])
216     , -445.346    , array([ 0.00612668 ,  0.778334   ])
218     , -445.336    , array([ 0.00612668 ,  0.777556   ])
220     , -445.346    , array([ 0.00612668 ,  0.778334   ])
222     , -445.336    , array([ 0.00612668 ,  0.777556   ])
224     , -445.346    , array([ 0.00612668 ,  0.778334   ])
226     , -445.336    , array([ 0.00612668 ,  0.777556   ])
228     , -445.346    , array([ 0.00612668 ,  0.778334   ])
230     , -445.336    , array([ 0.00612668 ,  0.777556   ])
232     , -445.346    , array([ 0.00612668 ,  0.778334   ])
234     , -445.336    , array([ 0.00612668 ,  0.777556   ])
236     , -445.346    , array([ 0.00612668 ,  0.778334   ])
238     , -445.336    , array([ 0.00612668 ,  0.777556   ])
240     , -445.346    , array([ 0.00612668 ,  0.778334   ])
242     , -445.336    , array([ 0.00612668 ,  0.777556   ])
244     , -445.346    , array([ 0.00612668 ,  0.778334   ])
246     , -445.336    , array([ 0.00612668 ,  0.777556   ])
248     , -445.346    , array([ 0.00612668 ,  0.778334   ])
250     , -445.336    , array([ 0.00612668 ,  0.777556   ])
252     , -445.346    , array([ 0.00612668 ,  0.778334   ])
254     , -445.336    , array([ 0.00612668 ,  0.777556   ])
256     , -445.346    , array([ 0.00612668 ,  0.778334   ])
258     , -445.336    , array([ 0.00612668 ,  0.777556   ])
260     , -445.346    , array([ 0.00612668 ,  0.778334   ])
262     , -445.336    , array([ 0.00612668 ,  0.777556   ])
264     , -445.346    , array([ 0.00612668 ,  0.778334   ])
266     , -445.336    , array([ 0.00612668 ,  0.777556   ])
268     , -445.346    , array([ 0.00612668 ,  0.778334   ])
270     , -445.336    , array([ 0.00612668 ,  0.777556   ])
272     , -445.346    , array([ 0.00612668 ,  0.778334   ])
274     , -445.336    , array([ 0.00612668 ,  0.777556   ])
276     , -445.346    , array([ 0.00612668 ,  0.778334   ])
278     , -445.336    , array([ 0.00612668 ,  0.777556   ])
280     , -445.346    , array([ 0.00612668 ,  0.778334   ])
282     , -445.336    , array([ 0.00612668 ,  0.777556   ])
284     , -445.346    , array([ 0.00612668 ,  0.778334   ])
286     , -445.336    , array([ 0.00612668 ,  0.777556   ])
288     , -445.346    , array([ 0.00612668 ,  0.778334   ])
290     , -445.336    , array([ 0.00612668 ,  0.777556   ])
292     , -445.346    , array([ 0.00612668 ,  0.778334   ])
294     , -445.336    , array([ 0.00612668 ,  0.777556   ])
296     , -445.346    , array([ 0.00612668 ,  0.778334   ])
298     , -445.336    , array([ 0.00612668 ,  0.777556   ])
300     , -445.346    , array([ 0.00612668 ,  0.778334   ])
302     , -445.336    , array([ 0.00612668 ,  0.777556   ])
304     , -445.346    , array([ 0.00612668 ,  0.778334   ])
306     , -445.336    , array([ 0.00612668 ,  0.777556   ])
308     , -445.346    , array([ 0.00612668 ,  0.778334   ])
310     , -445.336    , array([ 0.00612668 ,  0.777556   ])
312     , -445.346    , array([ 0.00612668 ,  0.778334   ])
314     , -445.336    , array([ 0.00612668 ,  0.777556   ])
316     , -445.346    , array([ 0.00612668 ,  0.778334   ])
318     , -445.336    , array([ 0.00612668 ,  0.777556   ])
320     , -445.346    , array([ 0.00612668 ,  0.778334   ])
322     , -445.336    , array([ 0.00612668 ,  0.777556   ])
324     , -445.346    , array([ 0.00612668 ,  0.778334   ])
326     , -445.336    , array([ 0.00612668 ,  0.777556   ])
328     , -445.346    , array([ 0.00612668 ,  0.778334   ])
330     , -445.336    , array([ 0.00612668 ,  0.777556   ])
332     , -445.346    , array([ 0.00612668 ,  0.778334   ])
334     , -445.336    , array([ 0.00612668 ,  0.777556   ])
336     , -445.346    , array([ 0.00612668 ,  0.778334   ])
338     , -445.336    , array([ 0.00612668 ,  0.777556   ])
340     , -445.346    , array([ 0.00612668 ,  0.778334   ])
342     , -445.336    , array([ 0.00612668 ,  0.777556   ])
344     , -445.346    , array([ 0.00612668 ,  0.778334   ])
346     , -445.336    , array([ 0.00612668 ,  0.777556   ])
348     , -445.346    , array([ 0.00612668 ,  0.778334   ])
350     , -445.336    , array([ 0.00612668 ,  0.777556   ])
352     , -445.346    , array([ 0.00612668 ,  0.778334   ])
354     , -445.336    , array([ 0.00612668 ,  0.777556   ])
356     , -445.346    , array([ 0.00612668 ,  0.778334   ])
358     , -445.336    , array([ 0.00612668 ,  0.777556   ])
360     , -445.346    , array([ 0.00612668 ,  0.778334   ])
362     , -445.336    , array([ 0.00612668 ,  0.777556   ])
364     , -445.346    , array([ 0.00612668 ,  0.778334   ])
366     , -445.336    , array([ 0.00612668 ,  0.777556   ])
368     , -445.346    , array([ 0.00612668 ,  0.778334   ])
370     , -445.336    , array([ 0.00612668 ,  0.777556   ])
372     , -445.346    , array([ 0.00612668 ,  0.778334   ])
374     , -445.336    , array([ 0.00612668 ,  0.777556   ])
376     , -445.346    , array([ 0.00612668 ,  0.778334   ])
378     , -445.336    , array([ 0.00612668 ,  0.777556   ])
380     , -445.346    , array([ 0.00612668 ,  0.778334   ])
382     , -445.336    , array([ 0.00612668 ,  0.777556   ])
384     , -445.346    , array([ 0.00612668 ,  0.778334   ])
386     , -445.336    , array([ 0.00612668 ,  0.777556   ])
388     , -445.346    , array([ 0.00612668 ,  0.778334   ])
390     , -445.336    , array([ 0.00612668 ,  0.777556   ])
392     , -445.346    , array([ 0.00612668 ,  0.778334   ])
394     , -445.336    , array([ 0.00612668 ,  0.777556   ])
396     , -445.346    , array([ 0.00612668 ,  0.778334   ])
398     , -445.336    , array([ 0.00612668 ,  0.777556   ])
400     , -445.346    , array([ 0.00612668 ,  0.778334   ])
402     , -445.336    , array([ 0.00612668 ,  0.777556   ])
404     , -445.346    , array([ 0.00612668 ,  0.778334   ])
406     , -445.336    , array([ 0.00612668 ,  0.777556   ])
408     , -445.346    , array([ 0.00612668 ,  0.778334   ])
410     , -445.336    , array([ 0.00612668 ,  0.777556   ])
412     , -445.346    , array([ 0.00612668 ,  0.778334   ])
414     , -445.336    , array([ 0.00612668 ,  0.777556   ])
416     , -445.346    , array([ 0.00612668 ,  0.778334   ])
418     , -445.336    , array([ 0.00616312 ,  0.777369   ])
420     , -445.336    , array([ 0.00612957 ,  0.777541   ])
422     , -445.336    , array([ 0.00612692 ,  0.777555   ])
424     , -445.336    , array([ 0.0061267  ,  0.777556   ])
426     , -445.336    , array([ 0.00612668 ,  0.777556   ])
428     , -445.336    , array([ 0.00612668 ,  0.777556   ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
carrying out inference 50 for model 1D.1Bottleneck.TB1gen.TRec2850gen for pop MN
Beginning optimization ************************************************
2       , -25399      , array([ 0.0161219  ,  0.1343     ])
4       , -25399      , array([ 0.0161058  ,  0.1343     ])
6       , -6419.53    , array([ 0.0160653  ,  0.368733   ])
8       , -6403.01    , array([ 0.0160653  ,  0.369102   ])
14      , -6412.11    , array([ 0.0160653  ,  0.368899   ])
16      , -6395.6     , array([ 0.0160653  ,  0.369268   ])
18      , -6219.5     , array([ 0.0160648  ,  0.373239   ])
20      , -6203.26    , array([ 0.0160648  ,  0.373612   ])
26      , -6217.72    , array([ 0.0160648  ,  0.37328    ])
28      , -6201.48    , array([ 0.0160648  ,  0.373653   ])
30      , -6173.76    , array([ 0.0160647  ,  0.374292   ])
32      , -6157.55    , array([ 0.0160647  ,  0.374667   ])
34      , -1174.05    , array([ 0.0160245  ,  1.0231     ])
36      , -1178.75    , array([ 0.0160245  ,  1.02412    ])
42      , -1173.99    , array([ 0.0160158  ,  1.02309    ])
44      , -1178.7     , array([ 0.0160158  ,  1.02412    ])
46      , -1173.94    , array([ 0.0160071  ,  1.02309    ])
48      , -1178.64    , array([ 0.0160071  ,  1.02411    ])
54      , -1173.92    , array([ 0.016005   ,  1.02309    ])
56      , -1178.63    , array([ 0.016005   ,  1.02411    ])
58      , -1173.91    , array([ 0.0160028  ,  1.02308    ])
60      , -1178.61    , array([ 0.0160028  ,  1.02411    ])
66      , -1173.91    , array([ 0.0160023  ,  1.02308    ])
68      , -1178.61    , array([ 0.0160023  ,  1.02411    ])
70      , -1173.9     , array([ 0.0160017  ,  1.02308    ])
72      , -1178.6     , array([ 0.0160017  ,  1.02411    ])
78      , -1173.9     , array([ 0.0160016  ,  1.02308    ])
80      , -1178.6     , array([ 0.0160016  ,  1.02411    ])
82      , -1173.9     , array([ 0.0160014  ,  1.02308    ])
84      , -1178.6     , array([ 0.0160014  ,  1.02411    ])
86      , -636.435    , array([ 0.000477136,  0.995056   ])
88      , -636.029    , array([ 0.000477136,  0.996052   ])
90      , -1104.93    , array([ 0.00908603 ,  1.01852    ])
92      , -1109.39    , array([ 0.00908603 ,  1.01953    ])
94      , -555.984    , array([ 0.000944856,  1.00045    ])
96      , -557.373    , array([ 0.000944856,  1.00145    ])
98      , -531.772    , array([ 0.000733631,  0.998447   ])
100     , -532.491    , array([ 0.000733631,  0.999446   ])
102     , -701.745    , array([ 0.336696   ,  0.894104   ])
104     , -704.726    , array([ 0.336696   ,  0.894999   ])
106     , -562.144    , array([ 0.00104767 ,  0.992061   ])
108     , -563.659    , array([ 0.00104767 ,  0.993053   ])
110     , -531.565    , array([ 0.000752737,  0.997985   ])
112     , -532.344    , array([ 0.000752737,  0.998983   ])
114     , -531.149    , array([ 0.000753752,  0.997419   ])
116     , -531.926    , array([ 0.000753752,  0.998417   ])
118     , -529.497    , array([ 0.000757826,  0.995158   ])
120     , -530.264    , array([ 0.000757826,  0.996153   ])
122     , -523.022    , array([ 0.000774346,  0.986165   ])
124     , -523.746    , array([ 0.000774346,  0.987151   ])
126     , -500.128    , array([ 0.000844105,  0.950997   ])
128     , -500.632    , array([ 0.000844105,  0.951949   ])
130     , -464.904    , array([ 0.00120351 ,  0.851726   ])
132     , -464.674    , array([ 0.00120351 ,  0.852579   ])
134     , -459.961    , array([ 0.00134048 ,  0.842191   ])
136     , -459.757    , array([ 0.00134048 ,  0.843033   ])
138     , -452.785    , array([ 0.00165072 ,  0.831112   ])
140     , -452.716    , array([ 0.00165072 ,  0.831944   ])
142     , -449.061    , array([ 0.00210947 ,  0.81232    ])
144     , -448.96     , array([ 0.00210947 ,  0.813133   ])
146     , -446.71     , array([ 0.00270815 ,  0.802745   ])
148     , -446.692    , array([ 0.00270815 ,  0.803548   ])
150     , -446.041    , array([ 0.00341807 ,  0.790021   ])
152     , -445.96     , array([ 0.00341807 ,  0.790812   ])
154     , -445.483    , array([ 0.00413056 ,  0.786375   ])
156     , -445.464    , array([ 0.00413056 ,  0.787161   ])
158     , -445.397    , array([ 0.00467163 ,  0.782883   ])
160     , -445.381    , array([ 0.00467163 ,  0.783666   ])
162     , -445.364    , array([ 0.00507894 ,  0.781382   ])
164     , -445.365    , array([ 0.00507894 ,  0.782164   ])
166     , -445.335    , array([ 0.00556656 ,  0.779433   ])
168     , -445.341    , array([ 0.00556656 ,  0.780213   ])
170     , -445.339    , array([ 0.00620907 ,  0.776892   ])
172     , -445.341    , array([ 0.00620907 ,  0.777669   ])
174     , -445.332    , array([ 0.00572624 ,  0.778774   ])
176     , -445.338    , array([ 0.00572624 ,  0.779553   ])
178     , -445.332    , array([ 0.00581883 ,  0.778392   ])
180     , -445.337    , array([ 0.00581883 ,  0.779171   ])
182     , -445.332    , array([ 0.00582749 ,  0.778356   ])
184     , -445.337    , array([ 0.00582749 ,  0.779135   ])
186     , -445.332    , array([ 0.00582052 ,  0.778385   ])
188     , -445.337    , array([ 0.00582052 ,  0.779164   ])
190     , -445.332    , array([ 0.00581916 ,  0.77839    ])
192     , -445.337    , array([ 0.00581916 ,  0.779169   ])
194     , -445.332    , array([ 0.0058189  ,  0.778392   ])
196     , -445.337    , array([ 0.0058189  ,  0.77917    ])
198     , -445.332    , array([ 0.00581884 ,  0.778392   ])
200     , -445.337    , array([ 0.00581884 ,  0.77917    ])
202     , -445.332    , array([ 0.00581883 ,  0.778392   ])
204     , -445.337    , array([ 0.00581883 ,  0.779171   ])
206     , -445.332    , array([ 0.00581883 ,  0.778392   ])
208     , -445.337    , array([ 0.00581883 ,  0.779171   ])
210     , -445.332    , array([ 0.00581883 ,  0.778392   ])
212     , -445.337    , array([ 0.00581883 ,  0.779171   ])
214     , -445.332    , array([ 0.00581883 ,  0.778392   ])
216     , -445.337    , array([ 0.00581883 ,  0.779171   ])
218     , -445.332    , array([ 0.00581883 ,  0.778392   ])
220     , -445.337    , array([ 0.00581883 ,  0.779171   ])
222     , -445.332    , array([ 0.00581883 ,  0.778392   ])
224     , -445.337    , array([ 0.00581883 ,  0.779171   ])
226     , -445.332    , array([ 0.00581883 ,  0.778392   ])
228     , -445.337    , array([ 0.00581883 ,  0.779171   ])
230     , -445.332    , array([ 0.00581883 ,  0.778392   ])
232     , -445.337    , array([ 0.00581883 ,  0.779171   ])
234     , -445.332    , array([ 0.00581883 ,  0.778392   ])
236     , -445.337    , array([ 0.00581883 ,  0.779171   ])
238     , -445.332    , array([ 0.00581883 ,  0.778392   ])
240     , -445.337    , array([ 0.00581883 ,  0.779171   ])
242     , -445.332    , array([ 0.00581883 ,  0.778392   ])
244     , -445.337    , array([ 0.00581883 ,  0.779171   ])
246     , -445.332    , array([ 0.00581883 ,  0.778392   ])
248     , -445.337    , array([ 0.00581883 ,  0.779171   ])
250     , -445.332    , array([ 0.00581883 ,  0.778392   ])
252     , -445.337    , array([ 0.00581883 ,  0.779171   ])
254     , -445.332    , array([ 0.00581883 ,  0.778392   ])
256     , -445.337    , array([ 0.00581883 ,  0.779171   ])
258     , -445.332    , array([ 0.00581883 ,  0.778392   ])
260     , -445.337    , array([ 0.00581883 ,  0.779171   ])
262     , -445.332    , array([ 0.00581883 ,  0.778392   ])
264     , -445.337    , array([ 0.00581883 ,  0.779171   ])
266     , -445.332    , array([ 0.00581883 ,  0.778392   ])
268     , -445.337    , array([ 0.00581883 ,  0.779171   ])
270     , -445.332    , array([ 0.00581883 ,  0.778392   ])
272     , -445.337    , array([ 0.00581883 ,  0.779171   ])
274     , -445.332    , array([ 0.00581883 ,  0.778392   ])
276     , -445.337    , array([ 0.00581883 ,  0.779171   ])
278     , -445.332    , array([ 0.00581883 ,  0.778392   ])
280     , -445.337    , array([ 0.00581883 ,  0.779171   ])
282     , -445.332    , array([ 0.00581883 ,  0.778392   ])
284     , -445.337    , array([ 0.00581883 ,  0.779171   ])
286     , -445.332    , array([ 0.00581883 ,  0.778392   ])
288     , -445.337    , array([ 0.00581883 ,  0.779171   ])
290     , -445.332    , array([ 0.00581883 ,  0.778392   ])
292     , -445.337    , array([ 0.00581883 ,  0.779171   ])
294     , -445.332    , array([ 0.00581883 ,  0.778392   ])
296     , -445.337    , array([ 0.00581883 ,  0.779171   ])
298     , -445.332    , array([ 0.00581883 ,  0.778392   ])
300     , -445.337    , array([ 0.00581883 ,  0.779171   ])
302     , -445.332    , array([ 0.00581883 ,  0.778392   ])
304     , -445.337    , array([ 0.00581883 ,  0.779171   ])
306     , -445.332    , array([ 0.00581883 ,  0.778392   ])
308     , -445.337    , array([ 0.00581883 ,  0.779171   ])
310     , -445.332    , array([ 0.00581883 ,  0.778392   ])
312     , -445.337    , array([ 0.00581883 ,  0.779171   ])
314     , -445.332    , array([ 0.00581883 ,  0.778392   ])
316     , -445.337    , array([ 0.00581883 ,  0.779171   ])
318     , -445.332    , array([ 0.00581883 ,  0.778392   ])
320     , -445.337    , array([ 0.00581883 ,  0.779171   ])
322     , -445.332    , array([ 0.00581883 ,  0.778392   ])
324     , -445.337    , array([ 0.00581883 ,  0.779171   ])
326     , -445.332    , array([ 0.00581883 ,  0.778392   ])
328     , -445.337    , array([ 0.00581883 ,  0.779171   ])
330     , -445.332    , array([ 0.00581883 ,  0.778392   ])
332     , -445.337    , array([ 0.00581883 ,  0.779171   ])
334     , -445.332    , array([ 0.00582289 ,  0.778375   ])
336     , -445.332    , array([ 0.00581949 ,  0.778389   ])
338     , -445.332    , array([ 0.00581894 ,  0.778391   ])
340     , -445.332    , array([ 0.00581885 ,  0.778392   ])
342     , -445.332    , array([ 0.00581883 ,  0.778392   ])
344     , -445.332    , array([ 0.00581883 ,  0.778392   ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
concatenating results
