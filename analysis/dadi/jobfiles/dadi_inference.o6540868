starting inference for MN for model 1D.1Bottleneck.TB0.5gen.TRec800gen
carrying out inference {1..50} for model 1D.1Bottleneck.TB0.5gen.TRec800gen for pop MN
Beginning optimization ************************************************
2       , -39363.6    , array([ 0.012774   ,  0.0552428  ])
4       , -39363.7    , array([ 0.0127612  ,  0.0552428  ])
6       , -12590.5    , array([ 0.012781   ,  0.151675   ])
8       , -12568.6    , array([ 0.012781   ,  0.151826   ])
14      , -12577.5    , array([ 0.012781   ,  0.151765   ])
16      , -12555.6    , array([ 0.012781   ,  0.151917   ])
18      , -12564.4    , array([ 0.012781   ,  0.151855   ])
20      , -12542.5    , array([ 0.012781   ,  0.152007   ])
22      , -1298.64    , array([ 0.0128206  ,  1.14405    ])
24      , -1300.55    , array([ 0.0128206  ,  1.14519    ])
30      , -1298.53    , array([ 0.0128054  ,  1.14405    ])
32      , -1300.44    , array([ 0.0128054  ,  1.1452     ])
34      , -1298.42    , array([ 0.0127903  ,  1.14406    ])
36      , -1300.33    , array([ 0.0127903  ,  1.1452     ])
42      , -1298.39    , array([ 0.0127865  ,  1.14406    ])
44      , -1300.3     , array([ 0.0127865  ,  1.1452     ])
46      , -1298.37    , array([ 0.0127827  ,  1.14406    ])
48      , -1300.28    , array([ 0.0127827  ,  1.1452     ])
54      , -1298.36    , array([ 0.0127818  ,  1.14406    ])
56      , -1300.27    , array([ 0.0127818  ,  1.1452     ])
58      , -1298.35    , array([ 0.0127808  ,  1.14406    ])
60      , -1300.26    , array([ 0.0127808  ,  1.1452     ])
66      , -1298.35    , array([ 0.0127806  ,  1.14406    ])
68      , -1300.26    , array([ 0.0127806  ,  1.1452     ])
70      , -1298.35    , array([ 0.0127803  ,  1.14406    ])
72      , -1300.26    , array([ 0.0127803  ,  1.1452     ])
78      , -1298.35    , array([ 0.0127803  ,  1.14406    ])
80      , -1300.26    , array([ 0.0127803  ,  1.1452     ])
82      , -1298.35    , array([ 0.0127802  ,  1.14406    ])
84      , -1300.26    , array([ 0.0127802  ,  1.1452     ])
86      , -484.454    , array([ 0.000831156,  1.15262    ])
88      , -484.846    , array([ 0.000831156,  1.15377    ])
90      , -484.452    , array([ 0.000831152,  1.15262    ])
92      , -484.845    , array([ 0.000831152,  1.15377    ])
94      , -440.942    , array([ 0.000520069,  1.15409    ])
96      , -440.631    , array([ 0.000520069,  1.15525    ])
98      , -424.163    , array([ 0.000639003,  1.15344    ])
100     , -424.18     , array([ 0.000639003,  1.1546     ])
102     , -421.664    , array([ 0.000603297,  1.15362    ])
104     , -421.592    , array([ 0.000603297,  1.15478    ])
106     , -479.732    , array([ 0.000466043,  1.16737    ])
108     , -479.259    , array([ 0.000466043,  1.16854    ])
110     , -421.661    , array([ 0.000601924,  1.15374    ])
112     , -421.586    , array([ 0.000601924,  1.1549     ])
114     , -421.655    , array([ 0.000601872,  1.15384    ])
116     , -421.58     , array([ 0.000601872,  1.15499    ])
118     , -421.631    , array([ 0.000601662,  1.15422    ])
120     , -421.556    , array([ 0.000601662,  1.15537    ])
122     , -421.537    , array([ 0.000600826,  1.15573    ])
124     , -421.463    , array([ 0.000600826,  1.15689    ])
126     , -421.164    , array([ 0.000597492,  1.16182    ])
128     , -421.09     , array([ 0.000597492,  1.16298    ])
130     , -419.718    , array([ 0.00058434 ,  1.18649    ])
132     , -419.644    , array([ 0.00058434 ,  1.18767    ])
134     , -414.613    , array([ 0.000534563,  1.2905     ])
136     , -414.515    , array([ 0.000534563,  1.29179    ])
138     , -408.595    , array([ 0.000436301,  1.61863    ])
140     , -408.446    , array([ 0.000436301,  1.62025    ])
142     , -400.29     , array([ 0.000443362,  1.71021    ])
144     , -400.215    , array([ 0.000443362,  1.71192    ])
150     , -400.29     , array([ 0.000443362,  1.71021    ])
152     , -400.215    , array([ 0.000443362,  1.71192    ])
154     , -400.29     , array([ 0.000443362,  1.71021    ])
156     , -400.215    , array([ 0.000443362,  1.71192    ])
158     , -395.863    , array([ 0.000423261,  1.91394    ])
160     , -395.796    , array([ 0.000423261,  1.91585    ])
166     , -395.863    , array([ 0.000423261,  1.91394    ])
168     , -395.796    , array([ 0.000423261,  1.91585    ])
170     , -395.863    , array([ 0.000423261,  1.91394    ])
172     , -395.796    , array([ 0.000423261,  1.91585    ])
174     , -394.336    , array([ 0.00041683 ,  1.98636    ])
176     , -394.275    , array([ 0.00041683 ,  1.98834    ])
182     , -394.336    , array([ 0.00041683 ,  1.98636    ])
184     , -394.275    , array([ 0.00041683 ,  1.98834    ])
190     , -394.336    , array([ 0.00041683 ,  1.98636    ])
192     , -394.275    , array([ 0.00041683 ,  1.98834    ])
194     , -394.336    , array([ 0.00041683 ,  1.98636    ])
196     , -394.275    , array([ 0.00041683 ,  1.98834    ])
202     , -394.336    , array([ 0.00041683 ,  1.98636    ])
204     , -394.275    , array([ 0.00041683 ,  1.98834    ])
206     , -394.336    , array([ 0.00041683 ,  1.98636    ])
208     , -394.275    , array([ 0.00041683 ,  1.98834    ])
214     , -394.336    , array([ 0.00041683 ,  1.98636    ])
216     , -394.275    , array([ 0.00041683 ,  1.98834    ])
218     , -394.336    , array([ 0.00041683 ,  1.98636    ])
220     , -394.275    , array([ 0.00041683 ,  1.98834    ])
226     , -394.336    , array([ 0.00041683 ,  1.98636    ])
228     , -394.275    , array([ 0.00041683 ,  1.98834    ])
230     , -394.336    , array([ 0.00041683 ,  1.98636    ])
232     , -394.275    , array([ 0.00041683 ,  1.98834    ])
238     , -394.336    , array([ 0.00041683 ,  1.98636    ])
240     , -394.275    , array([ 0.00041683 ,  1.98834    ])
242     , -394.336    , array([ 0.00041683 ,  1.98636    ])
244     , -394.275    , array([ 0.00041683 ,  1.98834    ])
246     , -394.1      , array([ 0.000415674,  1.99934    ])
250     , -394.336    , array([ 0.00041683 ,  1.98636    ])
252     , -394.275    , array([ 0.00041683 ,  1.98834    ])
254     , -394.177    , array([ 0.000416059,  1.995      ])
256     , -394.117    , array([ 0.000416059,  1.997      ])
258     , -394.125    , array([ 0.000415802,  1.9979     ])
260     , -394.065    , array([ 0.000415802,  1.99989    ])
262     , -394.108    , array([ 0.000415717,  1.99886    ])
266     , -394.101    , array([ 0.000415683,  1.99924    ])
270     , -394.1      , array([ 0.000415676,  1.99932    ])
274     , -394.1      , array([ 0.000415674,  1.99934    ])
278     , -394.1      , array([ 0.000415674,  1.99934    ])
282     , -394.1      , array([ 0.000415674,  1.99934    ])
286     , -394.1      , array([ 0.000415674,  1.99934    ])
290     , -394.1      , array([ 0.000415674,  1.99934    ])
294     , -394.1      , array([ 0.000415674,  1.99934    ])
298     , -394.1      , array([ 0.000415674,  1.99934    ])
302     , -394.1      , array([ 0.000415674,  1.99934    ])
306     , -394.1      , array([ 0.000415674,  1.99934    ])
310     , -394.1      , array([ 0.000415674,  1.99934    ])
314     , -394.1      , array([ 0.000415674,  1.99934    ])
318     , -394.1      , array([ 0.000415674,  1.99934    ])
322     , -394.1      , array([ 0.000415674,  1.99934    ])
326     , -394.1      , array([ 0.000415674,  1.99934    ])
330     , -394.1      , array([ 0.000415674,  1.99934    ])
334     , -394.1      , array([ 0.000415674,  1.99934    ])
338     , -394.1      , array([ 0.000415674,  1.99934    ])
342     , -394.1      , array([ 0.000415674,  1.99934    ])
346     , -394.1      , array([ 0.000415674,  1.99934    ])
350     , -394.1      , array([ 0.000415674,  1.99934    ])
354     , -394.1      , array([ 0.000415674,  1.99934    ])
358     , -394.1      , array([ 0.000415674,  1.99934    ])
368     , -394.156    , array([ 0.000415954,  1.99619    ])
370     , -394.096    , array([ 0.000415954,  1.99818    ])
372     , -394.112    , array([ 0.000415735,  1.99865    ])
374     , -394.055    , array([ 0.000416151,  1.99865    ])
376     , -394.136    , array([ 0.000415857,  1.99728    ])
378     , -394.116    , array([ 0.000415757,  1.9984     ])
Finshed optimization **************************************************
Writing out parameters **************************************************
Writing out SFS **************************************************
Making plots **************************************************
concatenating results
